// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function(modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {}
    ];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})(
  {
    '../../node_modules/core-js/modules/_global.js': [
      function(require, module, exports) {
        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var global = (module.exports =
          typeof window != 'undefined' && window.Math == Math
            ? window
            : typeof self != 'undefined' && self.Math == Math
            ? self
            : // eslint-disable-next-line no-new-func
              Function('return this')());
        if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
      },
      {}
    ],
    '../../node_modules/core-js/modules/_core.js': [
      function(require, module, exports) {
        var core = (module.exports = { version: '2.6.11' });
        if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
      },
      {}
    ],
    '../../node_modules/core-js/modules/_is-object.js': [
      function(require, module, exports) {
        module.exports = function(it) {
          return typeof it === 'object'
            ? it !== null
            : typeof it === 'function';
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_an-object.js': [
      function(require, module, exports) {
        var isObject = require('./_is-object');
        module.exports = function(it) {
          if (!isObject(it)) throw TypeError(it + ' is not an object!');
          return it;
        };
      },
      { './_is-object': '../../node_modules/core-js/modules/_is-object.js' }
    ],
    '../../node_modules/core-js/modules/_fails.js': [
      function(require, module, exports) {
        module.exports = function(exec) {
          try {
            return !!exec();
          } catch (e) {
            return true;
          }
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_descriptors.js': [
      function(require, module, exports) {
        // Thank's IE8 for his funny defineProperty
        module.exports = !require('./_fails')(function() {
          return (
            Object.defineProperty({}, 'a', {
              get: function() {
                return 7;
              }
            }).a != 7
          );
        });
      },
      { './_fails': '../../node_modules/core-js/modules/_fails.js' }
    ],
    '../../node_modules/core-js/modules/_dom-create.js': [
      function(require, module, exports) {
        var isObject = require('./_is-object');
        var document = require('./_global').document;
        // typeof document.createElement is 'object' in old IE
        var is = isObject(document) && isObject(document.createElement);
        module.exports = function(it) {
          return is ? document.createElement(it) : {};
        };
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/_ie8-dom-define.js': [
      function(require, module, exports) {
        module.exports =
          !require('./_descriptors') &&
          !require('./_fails')(function() {
            return (
              Object.defineProperty(require('./_dom-create')('div'), 'a', {
                get: function() {
                  return 7;
                }
              }).a != 7
            );
          });
      },
      {
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_dom-create': '../../node_modules/core-js/modules/_dom-create.js'
      }
    ],
    '../../node_modules/core-js/modules/_to-primitive.js': [
      function(require, module, exports) {
        // 7.1.1 ToPrimitive(input [, PreferredType])
        var isObject = require('./_is-object');
        // instead of the ES6 spec version, we didn't implement @@toPrimitive case
        // and the second argument - flag - preferred type is a string
        module.exports = function(it, S) {
          if (!isObject(it)) return it;
          var fn, val;
          if (
            S &&
            typeof (fn = it.toString) == 'function' &&
            !isObject((val = fn.call(it)))
          )
            return val;
          if (
            typeof (fn = it.valueOf) == 'function' &&
            !isObject((val = fn.call(it)))
          )
            return val;
          if (
            !S &&
            typeof (fn = it.toString) == 'function' &&
            !isObject((val = fn.call(it)))
          )
            return val;
          throw TypeError("Can't convert object to primitive value");
        };
      },
      { './_is-object': '../../node_modules/core-js/modules/_is-object.js' }
    ],
    '../../node_modules/core-js/modules/_object-dp.js': [
      function(require, module, exports) {
        var anObject = require('./_an-object');
        var IE8_DOM_DEFINE = require('./_ie8-dom-define');
        var toPrimitive = require('./_to-primitive');
        var dP = Object.defineProperty;

        exports.f = require('./_descriptors')
          ? Object.defineProperty
          : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPrimitive(P, true);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return dP(O, P, Attributes);
                } catch (e) {
                  /* empty */
                }
              if ('get' in Attributes || 'set' in Attributes)
                throw TypeError('Accessors not supported!');
              if ('value' in Attributes) O[P] = Attributes.value;
              return O;
            };
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_ie8-dom-define':
          '../../node_modules/core-js/modules/_ie8-dom-define.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js'
      }
    ],
    '../../node_modules/core-js/modules/_property-desc.js': [
      function(require, module, exports) {
        module.exports = function(bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value
          };
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_hide.js': [
      function(require, module, exports) {
        var dP = require('./_object-dp');
        var createDesc = require('./_property-desc');
        module.exports = require('./_descriptors')
          ? function(object, key, value) {
              return dP.f(object, key, createDesc(1, value));
            }
          : function(object, key, value) {
              object[key] = value;
              return object;
            };
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js'
      }
    ],
    '../../node_modules/core-js/modules/_has.js': [
      function(require, module, exports) {
        var hasOwnProperty = {}.hasOwnProperty;
        module.exports = function(it, key) {
          return hasOwnProperty.call(it, key);
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_uid.js': [
      function(require, module, exports) {
        var id = 0;
        var px = Math.random();
        module.exports = function(key) {
          return 'Symbol('.concat(
            key === undefined ? '' : key,
            ')_',
            (++id + px).toString(36)
          );
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_library.js': [
      function(require, module, exports) {
        module.exports = false;
      },
      {}
    ],
    '../../node_modules/core-js/modules/_shared.js': [
      function(require, module, exports) {
        var core = require('./_core');
        var global = require('./_global');
        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || (global[SHARED] = {});

        (module.exports = function(key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {});
        })('versions', []).push({
          version: core.version,
          mode: require('./_library') ? 'pure' : 'global',
          copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
        });
      },
      {
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_library': '../../node_modules/core-js/modules/_library.js'
      }
    ],
    '../../node_modules/core-js/modules/_function-to-string.js': [
      function(require, module, exports) {
        module.exports = require('./_shared')(
          'native-function-to-string',
          Function.toString
        );
      },
      { './_shared': '../../node_modules/core-js/modules/_shared.js' }
    ],
    '../../node_modules/core-js/modules/_redefine.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var hide = require('./_hide');
        var has = require('./_has');
        var SRC = require('./_uid')('src');
        var $toString = require('./_function-to-string');
        var TO_STRING = 'toString';
        var TPL = ('' + $toString).split(TO_STRING);

        require('./_core').inspectSource = function(it) {
          return $toString.call(it);
        };

        (module.exports = function(O, key, val, safe) {
          var isFunction = typeof val == 'function';
          if (isFunction) has(val, 'name') || hide(val, 'name', key);
          if (O[key] === val) return;
          if (isFunction)
            has(val, SRC) ||
              hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
          if (O === global) {
            O[key] = val;
          } else if (!safe) {
            delete O[key];
            hide(O, key, val);
          } else if (O[key]) {
            O[key] = val;
          } else {
            hide(O, key, val);
          }
          // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        })(Function.prototype, TO_STRING, function toString() {
          return (
            (typeof this == 'function' && this[SRC]) || $toString.call(this)
          );
        });
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js',
        './_function-to-string':
          '../../node_modules/core-js/modules/_function-to-string.js',
        './_core': '../../node_modules/core-js/modules/_core.js'
      }
    ],
    '../../node_modules/core-js/modules/_a-function.js': [
      function(require, module, exports) {
        module.exports = function(it) {
          if (typeof it != 'function')
            throw TypeError(it + ' is not a function!');
          return it;
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_ctx.js': [
      function(require, module, exports) {
        // optional / simple context binding
        var aFunction = require('./_a-function');
        module.exports = function(fn, that, length) {
          aFunction(fn);
          if (that === undefined) return fn;
          switch (length) {
            case 1:
              return function(a) {
                return fn.call(that, a);
              };
            case 2:
              return function(a, b) {
                return fn.call(that, a, b);
              };
            case 3:
              return function(a, b, c) {
                return fn.call(that, a, b, c);
              };
          }
          return function(/* ...args */) {
            return fn.apply(that, arguments);
          };
        };
      },
      { './_a-function': '../../node_modules/core-js/modules/_a-function.js' }
    ],
    '../../node_modules/core-js/modules/_export.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var core = require('./_core');
        var hide = require('./_hide');
        var redefine = require('./_redefine');
        var ctx = require('./_ctx');
        var PROTOTYPE = 'prototype';

        var $export = function(type, name, source) {
          var IS_FORCED = type & $export.F;
          var IS_GLOBAL = type & $export.G;
          var IS_STATIC = type & $export.S;
          var IS_PROTO = type & $export.P;
          var IS_BIND = type & $export.B;
          var target = IS_GLOBAL
            ? global
            : IS_STATIC
            ? global[name] || (global[name] = {})
            : (global[name] || {})[PROTOTYPE];
          var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
          var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
          var key, own, out, exp;
          if (IS_GLOBAL) source = name;
          for (key in source) {
            // contains in native
            own = !IS_FORCED && target && target[key] !== undefined;
            // export native or passed
            out = (own ? target : source)[key];
            // bind timers to global for call from export context
            exp =
              IS_BIND && own
                ? ctx(out, global)
                : IS_PROTO && typeof out == 'function'
                ? ctx(Function.call, out)
                : out;
            // extend global
            if (target) redefine(target, key, out, type & $export.U);
            // export
            if (exports[key] != out) hide(exports, key, exp);
            if (IS_PROTO && expProto[key] != out) expProto[key] = out;
          }
        };
        global.core = core;
        // type bitmap
        $export.F = 1; // forced
        $export.G = 2; // global
        $export.S = 4; // static
        $export.P = 8; // proto
        $export.B = 16; // bind
        $export.W = 32; // wrap
        $export.U = 64; // safe
        $export.R = 128; // real proto method for `library`
        module.exports = $export;
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js'
      }
    ],
    '../../node_modules/core-js/modules/_defined.js': [
      function(require, module, exports) {
        // 7.2.1 RequireObjectCoercible(argument)
        module.exports = function(it) {
          if (it == undefined) throw TypeError("Can't call method on  " + it);
          return it;
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_to-object.js': [
      function(require, module, exports) {
        // 7.1.13 ToObject(argument)
        var defined = require('./_defined');
        module.exports = function(it) {
          return Object(defined(it));
        };
      },
      { './_defined': '../../node_modules/core-js/modules/_defined.js' }
    ],
    '../../node_modules/core-js/modules/_to-integer.js': [
      function(require, module, exports) {
        // 7.1.4 ToInteger
        var ceil = Math.ceil;
        var floor = Math.floor;
        module.exports = function(it) {
          return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it);
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_to-absolute-index.js': [
      function(require, module, exports) {
        var toInteger = require('./_to-integer');
        var max = Math.max;
        var min = Math.min;
        module.exports = function(index, length) {
          index = toInteger(index);
          return index < 0 ? max(index + length, 0) : min(index, length);
        };
      },
      { './_to-integer': '../../node_modules/core-js/modules/_to-integer.js' }
    ],
    '../../node_modules/core-js/modules/_to-length.js': [
      function(require, module, exports) {
        // 7.1.15 ToLength
        var toInteger = require('./_to-integer');
        var min = Math.min;
        module.exports = function(it) {
          return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
        };
      },
      { './_to-integer': '../../node_modules/core-js/modules/_to-integer.js' }
    ],
    '../../node_modules/core-js/modules/_array-copy-within.js': [
      function(require, module, exports) {
        // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
        'use strict';
        var toObject = require('./_to-object');
        var toAbsoluteIndex = require('./_to-absolute-index');
        var toLength = require('./_to-length');

        module.exports =
          [].copyWithin ||
          function copyWithin(
            target /* = 0 */,
            start /* = 0, end = @length */
          ) {
            var O = toObject(this);
            var len = toLength(O.length);
            var to = toAbsoluteIndex(target, len);
            var from = toAbsoluteIndex(start, len);
            var end = arguments.length > 2 ? arguments[2] : undefined;
            var count = Math.min(
              (end === undefined ? len : toAbsoluteIndex(end, len)) - from,
              len - to
            );
            var inc = 1;
            if (from < to && to < from + count) {
              inc = -1;
              from += count - 1;
              to += count - 1;
            }
            while (count-- > 0) {
              if (from in O) O[to] = O[from];
              else delete O[to];
              to += inc;
              from += inc;
            }
            return O;
          };
      },
      {
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js'
      }
    ],
    '../../node_modules/core-js/modules/_wks.js': [
      function(require, module, exports) {
        var store = require('./_shared')('wks');
        var uid = require('./_uid');
        var Symbol = require('./_global').Symbol;
        var USE_SYMBOL = typeof Symbol == 'function';

        var $exports = (module.exports = function(name) {
          return (
            store[name] ||
            (store[name] =
              (USE_SYMBOL && Symbol[name]) ||
              (USE_SYMBOL ? Symbol : uid)('Symbol.' + name))
          );
        });

        $exports.store = store;
      },
      {
        './_shared': '../../node_modules/core-js/modules/_shared.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/_add-to-unscopables.js': [
      function(require, module, exports) {
        // 22.1.3.31 Array.prototype[@@unscopables]
        var UNSCOPABLES = require('./_wks')('unscopables');
        var ArrayProto = Array.prototype;
        if (ArrayProto[UNSCOPABLES] == undefined)
          require('./_hide')(ArrayProto, UNSCOPABLES, {});
        module.exports = function(key) {
          ArrayProto[UNSCOPABLES][key] = true;
        };
      },
      {
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.copy-within.js': [
      function(require, module, exports) {
        // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
        var $export = require('./_export');

        $export($export.P, 'Array', {
          copyWithin: require('./_array-copy-within')
        });

        require('./_add-to-unscopables')('copyWithin');
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_array-copy-within':
          '../../node_modules/core-js/modules/_array-copy-within.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/_array-fill.js': [
      function(require, module, exports) {
        // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
        'use strict';
        var toObject = require('./_to-object');
        var toAbsoluteIndex = require('./_to-absolute-index');
        var toLength = require('./_to-length');
        module.exports = function fill(value /* , start = 0, end = @length */) {
          var O = toObject(this);
          var length = toLength(O.length);
          var aLen = arguments.length;
          var index = toAbsoluteIndex(
            aLen > 1 ? arguments[1] : undefined,
            length
          );
          var end = aLen > 2 ? arguments[2] : undefined;
          var endPos =
            end === undefined ? length : toAbsoluteIndex(end, length);
          while (endPos > index) O[index++] = value;
          return O;
        };
      },
      {
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.fill.js': [
      function(require, module, exports) {
        // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
        var $export = require('./_export');

        $export($export.P, 'Array', { fill: require('./_array-fill') });

        require('./_add-to-unscopables')('fill');
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_array-fill': '../../node_modules/core-js/modules/_array-fill.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/_cof.js': [
      function(require, module, exports) {
        var toString = {}.toString;

        module.exports = function(it) {
          return toString.call(it).slice(8, -1);
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_iobject.js': [
      function(require, module, exports) {
        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        var cof = require('./_cof');
        // eslint-disable-next-line no-prototype-builtins
        module.exports = Object('z').propertyIsEnumerable(0)
          ? Object
          : function(it) {
              return cof(it) == 'String' ? it.split('') : Object(it);
            };
      },
      { './_cof': '../../node_modules/core-js/modules/_cof.js' }
    ],
    '../../node_modules/core-js/modules/_is-array.js': [
      function(require, module, exports) {
        // 7.2.2 IsArray(argument)
        var cof = require('./_cof');
        module.exports =
          Array.isArray ||
          function isArray(arg) {
            return cof(arg) == 'Array';
          };
      },
      { './_cof': '../../node_modules/core-js/modules/_cof.js' }
    ],
    '../../node_modules/core-js/modules/_array-species-constructor.js': [
      function(require, module, exports) {
        var isObject = require('./_is-object');
        var isArray = require('./_is-array');
        var SPECIES = require('./_wks')('species');

        module.exports = function(original) {
          var C;
          if (isArray(original)) {
            C = original.constructor;
            // cross-realm fallback
            if (typeof C == 'function' && (C === Array || isArray(C.prototype)))
              C = undefined;
            if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return C === undefined ? Array : C;
        };
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_is-array': '../../node_modules/core-js/modules/_is-array.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_array-species-create.js': [
      function(require, module, exports) {
        // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
        var speciesConstructor = require('./_array-species-constructor');

        module.exports = function(original, length) {
          return new (speciesConstructor(original))(length);
        };
      },
      {
        './_array-species-constructor':
          '../../node_modules/core-js/modules/_array-species-constructor.js'
      }
    ],
    '../../node_modules/core-js/modules/_array-methods.js': [
      function(require, module, exports) {
        // 0 -> Array#forEach
        // 1 -> Array#map
        // 2 -> Array#filter
        // 3 -> Array#some
        // 4 -> Array#every
        // 5 -> Array#find
        // 6 -> Array#findIndex
        var ctx = require('./_ctx');
        var IObject = require('./_iobject');
        var toObject = require('./_to-object');
        var toLength = require('./_to-length');
        var asc = require('./_array-species-create');
        module.exports = function(TYPE, $create) {
          var IS_MAP = TYPE == 1;
          var IS_FILTER = TYPE == 2;
          var IS_SOME = TYPE == 3;
          var IS_EVERY = TYPE == 4;
          var IS_FIND_INDEX = TYPE == 6;
          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
          var create = $create || asc;
          return function($this, callbackfn, that) {
            var O = toObject($this);
            var self = IObject(O);
            var f = ctx(callbackfn, that, 3);
            var length = toLength(self.length);
            var index = 0;
            var result = IS_MAP
              ? create($this, length)
              : IS_FILTER
              ? create($this, 0)
              : undefined;
            var val, res;
            for (; length > index; index++)
              if (NO_HOLES || index in self) {
                val = self[index];
                res = f(val, index, O);
                if (TYPE) {
                  if (IS_MAP) result[index] = res;
                  // map
                  else if (res)
                    switch (TYPE) {
                      case 3:
                        return true; // some
                      case 5:
                        return val; // find
                      case 6:
                        return index; // findIndex
                      case 2:
                        result.push(val); // filter
                    }
                  else if (IS_EVERY) return false; // every
                }
              }
            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
          };
        };
      },
      {
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_iobject': '../../node_modules/core-js/modules/_iobject.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_array-species-create':
          '../../node_modules/core-js/modules/_array-species-create.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.find.js': [
      function(require, module, exports) {
        'use strict';
        // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
        var $export = require('./_export');
        var $find = require('./_array-methods')(5);
        var KEY = 'find';
        var forced = true;
        // Shouldn't skip holes
        if (KEY in [])
          Array(1)[KEY](function() {
            forced = false;
          });
        $export($export.P + $export.F * forced, 'Array', {
          find: function find(callbackfn /* , that = undefined */) {
            return $find(
              this,
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          }
        });
        require('./_add-to-unscopables')(KEY);
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_array-methods':
          '../../node_modules/core-js/modules/_array-methods.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.find-index.js': [
      function(require, module, exports) {
        'use strict';
        // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
        var $export = require('./_export');
        var $find = require('./_array-methods')(6);
        var KEY = 'findIndex';
        var forced = true;
        // Shouldn't skip holes
        if (KEY in [])
          Array(1)[KEY](function() {
            forced = false;
          });
        $export($export.P + $export.F * forced, 'Array', {
          findIndex: function findIndex(callbackfn /* , that = undefined */) {
            return $find(
              this,
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          }
        });
        require('./_add-to-unscopables')(KEY);
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_array-methods':
          '../../node_modules/core-js/modules/_array-methods.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/_flatten-into-array.js': [
      function(require, module, exports) {
        'use strict';
        // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
        var isArray = require('./_is-array');
        var isObject = require('./_is-object');
        var toLength = require('./_to-length');
        var ctx = require('./_ctx');
        var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

        function flattenIntoArray(
          target,
          original,
          source,
          sourceLen,
          start,
          depth,
          mapper,
          thisArg
        ) {
          var targetIndex = start;
          var sourceIndex = 0;
          var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
          var element, spreadable;

          while (sourceIndex < sourceLen) {
            if (sourceIndex in source) {
              element = mapFn
                ? mapFn(source[sourceIndex], sourceIndex, original)
                : source[sourceIndex];

              spreadable = false;
              if (isObject(element)) {
                spreadable = element[IS_CONCAT_SPREADABLE];
                spreadable =
                  spreadable !== undefined ? !!spreadable : isArray(element);
              }

              if (spreadable && depth > 0) {
                targetIndex =
                  flattenIntoArray(
                    target,
                    original,
                    element,
                    toLength(element.length),
                    targetIndex,
                    depth - 1
                  ) - 1;
              } else {
                if (targetIndex >= 0x1fffffffffffff) throw TypeError();
                target[targetIndex] = element;
              }

              targetIndex++;
            }
            sourceIndex++;
          }
          return targetIndex;
        }

        module.exports = flattenIntoArray;
      },
      {
        './_is-array': '../../node_modules/core-js/modules/_is-array.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.array.flat-map.js': [
      function(require, module, exports) {
        'use strict';
        // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
        var $export = require('./_export');
        var flattenIntoArray = require('./_flatten-into-array');
        var toObject = require('./_to-object');
        var toLength = require('./_to-length');
        var aFunction = require('./_a-function');
        var arraySpeciesCreate = require('./_array-species-create');

        $export($export.P, 'Array', {
          flatMap: function flatMap(callbackfn /* , thisArg */) {
            var O = toObject(this);
            var sourceLen, A;
            aFunction(callbackfn);
            sourceLen = toLength(O.length);
            A = arraySpeciesCreate(O, 0);
            flattenIntoArray(
              A,
              O,
              O,
              sourceLen,
              0,
              1,
              callbackfn,
              arguments[1]
            );
            return A;
          }
        });

        require('./_add-to-unscopables')('flatMap');
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_flatten-into-array':
          '../../node_modules/core-js/modules/_flatten-into-array.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_array-species-create':
          '../../node_modules/core-js/modules/_array-species-create.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/_iter-call.js': [
      function(require, module, exports) {
        // call something on iterator step with safe closing on error
        var anObject = require('./_an-object');
        module.exports = function(iterator, fn, value, entries) {
          try {
            return entries ? fn(anObject(value)[0], value[1]) : fn(value);
            // 7.4.6 IteratorClose(iterator, completion)
          } catch (e) {
            var ret = iterator['return'];
            if (ret !== undefined) anObject(ret.call(iterator));
            throw e;
          }
        };
      },
      { './_an-object': '../../node_modules/core-js/modules/_an-object.js' }
    ],
    '../../node_modules/core-js/modules/_iterators.js': [
      function(require, module, exports) {
        module.exports = {};
      },
      {}
    ],
    '../../node_modules/core-js/modules/_is-array-iter.js': [
      function(require, module, exports) {
        // check on default Array iterator
        var Iterators = require('./_iterators');
        var ITERATOR = require('./_wks')('iterator');
        var ArrayProto = Array.prototype;

        module.exports = function(it) {
          return (
            it !== undefined &&
            (Iterators.Array === it || ArrayProto[ITERATOR] === it)
          );
        };
      },
      {
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_create-property.js': [
      function(require, module, exports) {
        'use strict';
        var $defineProperty = require('./_object-dp');
        var createDesc = require('./_property-desc');

        module.exports = function(object, index, value) {
          if (index in object)
            $defineProperty.f(object, index, createDesc(0, value));
          else object[index] = value;
        };
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js'
      }
    ],
    '../../node_modules/core-js/modules/_classof.js': [
      function(require, module, exports) {
        // getting tag from 19.1.3.6 Object.prototype.toString()
        var cof = require('./_cof');
        var TAG = require('./_wks')('toStringTag');
        // ES3 wrong here
        var ARG =
          cof(
            (function() {
              return arguments;
            })()
          ) == 'Arguments';

        // fallback for IE11 Script Access Denied error
        var tryGet = function(it, key) {
          try {
            return it[key];
          } catch (e) {
            /* empty */
          }
        };

        module.exports = function(it) {
          var O, T, B;
          return it === undefined
            ? 'Undefined'
            : it === null
            ? 'Null'
            : // @@toStringTag case
            typeof (T = tryGet((O = Object(it)), TAG)) == 'string'
            ? T
            : // builtinTag case
            ARG
            ? cof(O)
            : // ES3 arguments fallback
            (B = cof(O)) == 'Object' && typeof O.callee == 'function'
            ? 'Arguments'
            : B;
        };
      },
      {
        './_cof': '../../node_modules/core-js/modules/_cof.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/core.get-iterator-method.js': [
      function(require, module, exports) {
        var classof = require('./_classof');
        var ITERATOR = require('./_wks')('iterator');
        var Iterators = require('./_iterators');
        module.exports = require('./_core').getIteratorMethod = function(it) {
          if (it != undefined)
            return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
        };
      },
      {
        './_classof': '../../node_modules/core-js/modules/_classof.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_core': '../../node_modules/core-js/modules/_core.js'
      }
    ],
    '../../node_modules/core-js/modules/_iter-detect.js': [
      function(require, module, exports) {
        var ITERATOR = require('./_wks')('iterator');
        var SAFE_CLOSING = false;

        try {
          var riter = [7][ITERATOR]();
          riter['return'] = function() {
            SAFE_CLOSING = true;
          };
          // eslint-disable-next-line no-throw-literal
          Array.from(riter, function() {
            throw 2;
          });
        } catch (e) {
          /* empty */
        }

        module.exports = function(exec, skipClosing) {
          if (!skipClosing && !SAFE_CLOSING) return false;
          var safe = false;
          try {
            var arr = [7];
            var iter = arr[ITERATOR]();
            iter.next = function() {
              return { done: (safe = true) };
            };
            arr[ITERATOR] = function() {
              return iter;
            };
            exec(arr);
          } catch (e) {
            /* empty */
          }
          return safe;
        };
      },
      { './_wks': '../../node_modules/core-js/modules/_wks.js' }
    ],
    '../../node_modules/core-js/modules/es6.array.from.js': [
      function(require, module, exports) {
        'use strict';
        var ctx = require('./_ctx');
        var $export = require('./_export');
        var toObject = require('./_to-object');
        var call = require('./_iter-call');
        var isArrayIter = require('./_is-array-iter');
        var toLength = require('./_to-length');
        var createProperty = require('./_create-property');
        var getIterFn = require('./core.get-iterator-method');

        $export(
          $export.S +
            $export.F *
              !require('./_iter-detect')(function(iter) {
                Array.from(iter);
              }),
          'Array',
          {
            // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
            from: function from(
              arrayLike /* , mapfn = undefined, thisArg = undefined */
            ) {
              var O = toObject(arrayLike);
              var C = typeof this == 'function' ? this : Array;
              var aLen = arguments.length;
              var mapfn = aLen > 1 ? arguments[1] : undefined;
              var mapping = mapfn !== undefined;
              var index = 0;
              var iterFn = getIterFn(O);
              var length, result, step, iterator;
              if (mapping)
                mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
              // if object isn't iterable or it's array with default iterator - use simple case
              if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                for (
                  iterator = iterFn.call(O), result = new C();
                  !(step = iterator.next()).done;
                  index++
                ) {
                  createProperty(
                    result,
                    index,
                    mapping
                      ? call(iterator, mapfn, [step.value, index], true)
                      : step.value
                  );
                }
              } else {
                length = toLength(O.length);
                for (result = new C(length); length > index; index++) {
                  createProperty(
                    result,
                    index,
                    mapping ? mapfn(O[index], index) : O[index]
                  );
                }
              }
              result.length = index;
              return result;
            }
          }
        );
      },
      {
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_iter-call': '../../node_modules/core-js/modules/_iter-call.js',
        './_is-array-iter':
          '../../node_modules/core-js/modules/_is-array-iter.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_create-property':
          '../../node_modules/core-js/modules/_create-property.js',
        './core.get-iterator-method':
          '../../node_modules/core-js/modules/core.get-iterator-method.js',
        './_iter-detect': '../../node_modules/core-js/modules/_iter-detect.js'
      }
    ],
    '../../node_modules/core-js/modules/_to-iobject.js': [
      function(require, module, exports) {
        // to indexed object, toObject with fallback for non-array-like ES3 strings
        var IObject = require('./_iobject');
        var defined = require('./_defined');
        module.exports = function(it) {
          return IObject(defined(it));
        };
      },
      {
        './_iobject': '../../node_modules/core-js/modules/_iobject.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/_array-includes.js': [
      function(require, module, exports) {
        // false -> Array#indexOf
        // true  -> Array#includes
        var toIObject = require('./_to-iobject');
        var toLength = require('./_to-length');
        var toAbsoluteIndex = require('./_to-absolute-index');
        module.exports = function(IS_INCLUDES) {
          return function($this, el, fromIndex) {
            var O = toIObject($this);
            var length = toLength(O.length);
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare
            if (IS_INCLUDES && el != el)
              while (length > index) {
                value = O[index++];
                // eslint-disable-next-line no-self-compare
                if (value != value) return true;
                // Array#indexOf ignores holes, Array#includes - not
              }
            else
              for (; length > index; index++)
                if (IS_INCLUDES || index in O) {
                  if (O[index] === el) return IS_INCLUDES || index || 0;
                }
            return !IS_INCLUDES && -1;
          };
        };
      },
      {
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.array.includes.js': [
      function(require, module, exports) {
        'use strict';
        // https://github.com/tc39/Array.prototype.includes
        var $export = require('./_export');
        var $includes = require('./_array-includes')(true);

        $export($export.P, 'Array', {
          includes: function includes(el /* , fromIndex = 0 */) {
            return $includes(
              this,
              el,
              arguments.length > 1 ? arguments[1] : undefined
            );
          }
        });

        require('./_add-to-unscopables')('includes');
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_array-includes':
          '../../node_modules/core-js/modules/_array-includes.js',
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js'
      }
    ],
    '../../node_modules/core-js/modules/_iter-step.js': [
      function(require, module, exports) {
        module.exports = function(done, value) {
          return { value: value, done: !!done };
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_shared-key.js': [
      function(require, module, exports) {
        var shared = require('./_shared')('keys');
        var uid = require('./_uid');
        module.exports = function(key) {
          return shared[key] || (shared[key] = uid(key));
        };
      },
      {
        './_shared': '../../node_modules/core-js/modules/_shared.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-keys-internal.js': [
      function(require, module, exports) {
        var has = require('./_has');
        var toIObject = require('./_to-iobject');
        var arrayIndexOf = require('./_array-includes')(false);
        var IE_PROTO = require('./_shared-key')('IE_PROTO');

        module.exports = function(object, names) {
          var O = toIObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
          // Don't enum bug & hidden keys
          while (names.length > i)
            if (has(O, (key = names[i++]))) {
              ~arrayIndexOf(result, key) || result.push(key);
            }
          return result;
        };
      },
      {
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_array-includes':
          '../../node_modules/core-js/modules/_array-includes.js',
        './_shared-key': '../../node_modules/core-js/modules/_shared-key.js'
      }
    ],
    '../../node_modules/core-js/modules/_enum-bug-keys.js': [
      function(require, module, exports) {
        // IE 8- don't enum bug keys
        module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
          ','
        );
      },
      {}
    ],
    '../../node_modules/core-js/modules/_object-keys.js': [
      function(require, module, exports) {
        // 19.1.2.14 / 15.2.3.14 Object.keys(O)
        var $keys = require('./_object-keys-internal');
        var enumBugKeys = require('./_enum-bug-keys');

        module.exports =
          Object.keys ||
          function keys(O) {
            return $keys(O, enumBugKeys);
          };
      },
      {
        './_object-keys-internal':
          '../../node_modules/core-js/modules/_object-keys-internal.js',
        './_enum-bug-keys':
          '../../node_modules/core-js/modules/_enum-bug-keys.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-dps.js': [
      function(require, module, exports) {
        var dP = require('./_object-dp');
        var anObject = require('./_an-object');
        var getKeys = require('./_object-keys');

        module.exports = require('./_descriptors')
          ? Object.defineProperties
          : function defineProperties(O, Properties) {
              anObject(O);
              var keys = getKeys(Properties);
              var length = keys.length;
              var i = 0;
              var P;
              while (length > i) dP.f(O, (P = keys[i++]), Properties[P]);
              return O;
            };
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js'
      }
    ],
    '../../node_modules/core-js/modules/_html.js': [
      function(require, module, exports) {
        var document = require('./_global').document;
        module.exports = document && document.documentElement;
      },
      { './_global': '../../node_modules/core-js/modules/_global.js' }
    ],
    '../../node_modules/core-js/modules/_object-create.js': [
      function(require, module, exports) {
        // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        var anObject = require('./_an-object');
        var dPs = require('./_object-dps');
        var enumBugKeys = require('./_enum-bug-keys');
        var IE_PROTO = require('./_shared-key')('IE_PROTO');
        var Empty = function() {
          /* empty */
        };
        var PROTOTYPE = 'prototype';

        // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var createDict = function() {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = require('./_dom-create')('iframe');
          var i = enumBugKeys.length;
          var lt = '<';
          var gt = '>';
          var iframeDocument;
          iframe.style.display = 'none';
          require('./_html').appendChild(iframe);
          iframe.src = 'javascript:'; // eslint-disable-line no-script-url
          // createDict = iframe.contentWindow.Object;
          // html.removeChild(iframe);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(
            lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt
          );
          iframeDocument.close();
          createDict = iframeDocument.F;
          while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
          return createDict();
        };

        module.exports =
          Object.create ||
          function create(O, Properties) {
            var result;
            if (O !== null) {
              Empty[PROTOTYPE] = anObject(O);
              result = new Empty();
              Empty[PROTOTYPE] = null;
              // add "__proto__" for Object.getPrototypeOf polyfill
              result[IE_PROTO] = O;
            } else result = createDict();
            return Properties === undefined ? result : dPs(result, Properties);
          };
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_object-dps': '../../node_modules/core-js/modules/_object-dps.js',
        './_enum-bug-keys':
          '../../node_modules/core-js/modules/_enum-bug-keys.js',
        './_shared-key': '../../node_modules/core-js/modules/_shared-key.js',
        './_dom-create': '../../node_modules/core-js/modules/_dom-create.js',
        './_html': '../../node_modules/core-js/modules/_html.js'
      }
    ],
    '../../node_modules/core-js/modules/_set-to-string-tag.js': [
      function(require, module, exports) {
        var def = require('./_object-dp').f;
        var has = require('./_has');
        var TAG = require('./_wks')('toStringTag');

        module.exports = function(it, tag, stat) {
          if (it && !has((it = stat ? it : it.prototype), TAG))
            def(it, TAG, { configurable: true, value: tag });
        };
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_iter-create.js': [
      function(require, module, exports) {
        'use strict';
        var create = require('./_object-create');
        var descriptor = require('./_property-desc');
        var setToStringTag = require('./_set-to-string-tag');
        var IteratorPrototype = {};

        // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        require('./_hide')(
          IteratorPrototype,
          require('./_wks')('iterator'),
          function() {
            return this;
          }
        );

        module.exports = function(Constructor, NAME, next) {
          Constructor.prototype = create(IteratorPrototype, {
            next: descriptor(1, next)
          });
          setToStringTag(Constructor, NAME + ' Iterator');
        };
      },
      {
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-gpo.js': [
      function(require, module, exports) {
        // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
        var has = require('./_has');
        var toObject = require('./_to-object');
        var IE_PROTO = require('./_shared-key')('IE_PROTO');
        var ObjectProto = Object.prototype;

        module.exports =
          Object.getPrototypeOf ||
          function(O) {
            O = toObject(O);
            if (has(O, IE_PROTO)) return O[IE_PROTO];
            if (
              typeof O.constructor == 'function' &&
              O instanceof O.constructor
            ) {
              return O.constructor.prototype;
            }
            return O instanceof Object ? ObjectProto : null;
          };
      },
      {
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_shared-key': '../../node_modules/core-js/modules/_shared-key.js'
      }
    ],
    '../../node_modules/core-js/modules/_iter-define.js': [
      function(require, module, exports) {
        'use strict';
        var LIBRARY = require('./_library');
        var $export = require('./_export');
        var redefine = require('./_redefine');
        var hide = require('./_hide');
        var Iterators = require('./_iterators');
        var $iterCreate = require('./_iter-create');
        var setToStringTag = require('./_set-to-string-tag');
        var getPrototypeOf = require('./_object-gpo');
        var ITERATOR = require('./_wks')('iterator');
        var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
        var FF_ITERATOR = '@@iterator';
        var KEYS = 'keys';
        var VALUES = 'values';

        var returnThis = function() {
          return this;
        };

        module.exports = function(
          Base,
          NAME,
          Constructor,
          next,
          DEFAULT,
          IS_SET,
          FORCED
        ) {
          $iterCreate(Constructor, NAME, next);
          var getMethod = function(kind) {
            if (!BUGGY && kind in proto) return proto[kind];
            switch (kind) {
              case KEYS:
                return function keys() {
                  return new Constructor(this, kind);
                };
              case VALUES:
                return function values() {
                  return new Constructor(this, kind);
                };
            }
            return function entries() {
              return new Constructor(this, kind);
            };
          };
          var TAG = NAME + ' Iterator';
          var DEF_VALUES = DEFAULT == VALUES;
          var VALUES_BUG = false;
          var proto = Base.prototype;
          var $native =
            proto[ITERATOR] ||
            proto[FF_ITERATOR] ||
            (DEFAULT && proto[DEFAULT]);
          var $default = $native || getMethod(DEFAULT);
          var $entries = DEFAULT
            ? !DEF_VALUES
              ? $default
              : getMethod('entries')
            : undefined;
          var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
          var methods, key, IteratorPrototype;
          // Fix native
          if ($anyNative) {
            IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
            if (
              IteratorPrototype !== Object.prototype &&
              IteratorPrototype.next
            ) {
              // Set @@toStringTag to native iterators
              setToStringTag(IteratorPrototype, TAG, true);
              // fix for some old engines
              if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function')
                hide(IteratorPrototype, ITERATOR, returnThis);
            }
          }
          // fix Array#{values, @@iterator}.name in V8 / FF
          if (DEF_VALUES && $native && $native.name !== VALUES) {
            VALUES_BUG = true;
            $default = function values() {
              return $native.call(this);
            };
          }
          // Define iterator
          if (
            (!LIBRARY || FORCED) &&
            (BUGGY || VALUES_BUG || !proto[ITERATOR])
          ) {
            hide(proto, ITERATOR, $default);
          }
          // Plug for library
          Iterators[NAME] = $default;
          Iterators[TAG] = returnThis;
          if (DEFAULT) {
            methods = {
              values: DEF_VALUES ? $default : getMethod(VALUES),
              keys: IS_SET ? $default : getMethod(KEYS),
              entries: $entries
            };
            if (FORCED)
              for (key in methods) {
                if (!(key in proto)) redefine(proto, key, methods[key]);
              }
            else
              $export(
                $export.P + $export.F * (BUGGY || VALUES_BUG),
                NAME,
                methods
              );
          }
          return methods;
        };
      },
      {
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_iter-create': '../../node_modules/core-js/modules/_iter-create.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.iterator.js': [
      function(require, module, exports) {
        'use strict';
        var addToUnscopables = require('./_add-to-unscopables');
        var step = require('./_iter-step');
        var Iterators = require('./_iterators');
        var toIObject = require('./_to-iobject');

        // 22.1.3.4 Array.prototype.entries()
        // 22.1.3.13 Array.prototype.keys()
        // 22.1.3.29 Array.prototype.values()
        // 22.1.3.30 Array.prototype[@@iterator]()
        module.exports = require('./_iter-define')(
          Array,
          'Array',
          function(iterated, kind) {
            this._t = toIObject(iterated); // target
            this._i = 0; // next index
            this._k = kind; // kind
            // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
          },
          function() {
            var O = this._t;
            var kind = this._k;
            var index = this._i++;
            if (!O || index >= O.length) {
              this._t = undefined;
              return step(1);
            }
            if (kind == 'keys') return step(0, index);
            if (kind == 'values') return step(0, O[index]);
            return step(0, [index, O[index]]);
          },
          'values'
        );

        // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
        Iterators.Arguments = Iterators.Array;

        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');
      },
      {
        './_add-to-unscopables':
          '../../node_modules/core-js/modules/_add-to-unscopables.js',
        './_iter-step': '../../node_modules/core-js/modules/_iter-step.js',
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_iter-define': '../../node_modules/core-js/modules/_iter-define.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.of.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var createProperty = require('./_create-property');

        // WebKit Array.of isn't generic
        $export(
          $export.S +
            $export.F *
              require('./_fails')(function() {
                function F() {
                  /* empty */
                }
                return !(Array.of.call(F) instanceof F);
              }),
          'Array',
          {
            // 22.1.2.3 Array.of( ...items)
            of: function of(/* ...args */) {
              var index = 0;
              var aLen = arguments.length;
              var result = new (typeof this == 'function' ? this : Array)(aLen);
              while (aLen > index)
                createProperty(result, index, arguments[index++]);
              result.length = aLen;
              return result;
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_create-property':
          '../../node_modules/core-js/modules/_create-property.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/_strict-method.js': [
      function(require, module, exports) {
        'use strict';
        var fails = require('./_fails');

        module.exports = function(method, arg) {
          return (
            !!method &&
            fails(function() {
              // eslint-disable-next-line no-useless-call
              arg
                ? method.call(
                    null,
                    function() {
                      /* empty */
                    },
                    1
                  )
                : method.call(null);
            })
          );
        };
      },
      { './_fails': '../../node_modules/core-js/modules/_fails.js' }
    ],
    '../../node_modules/core-js/modules/es6.array.sort.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var aFunction = require('./_a-function');
        var toObject = require('./_to-object');
        var fails = require('./_fails');
        var $sort = [].sort;
        var test = [1, 2, 3];

        $export(
          $export.P +
            $export.F *
              (fails(function() {
                // IE8-
                test.sort(undefined);
              }) ||
                !fails(function() {
                  // V8 bug
                  test.sort(null);
                  // Old WebKit
                }) ||
                !require('./_strict-method')($sort)),
          'Array',
          {
            // 22.1.3.25 Array.prototype.sort(comparefn)
            sort: function sort(comparefn) {
              return comparefn === undefined
                ? $sort.call(toObject(this))
                : $sort.call(toObject(this), aFunction(comparefn));
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_strict-method':
          '../../node_modules/core-js/modules/_strict-method.js'
      }
    ],
    '../../node_modules/core-js/modules/_set-species.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('./_global');
        var dP = require('./_object-dp');
        var DESCRIPTORS = require('./_descriptors');
        var SPECIES = require('./_wks')('species');

        module.exports = function(KEY) {
          var C = global[KEY];
          if (DESCRIPTORS && C && !C[SPECIES])
            dP.f(C, SPECIES, {
              configurable: true,
              get: function() {
                return this;
              }
            });
        };
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.array.species.js': [
      function(require, module, exports) {
        require('./_set-species')('Array');
      },
      { './_set-species': '../../node_modules/core-js/modules/_set-species.js' }
    ],
    '../../node_modules/core-js/modules/_date-to-primitive.js': [
      function(require, module, exports) {
        'use strict';
        var anObject = require('./_an-object');
        var toPrimitive = require('./_to-primitive');
        var NUMBER = 'number';

        module.exports = function(hint) {
          if (hint !== 'string' && hint !== NUMBER && hint !== 'default')
            throw TypeError('Incorrect hint');
          return toPrimitive(anObject(this), hint != NUMBER);
        };
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-primitive': '../../node_modules/core-js/modules/_to-primitive.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.date.to-primitive.js': [
      function(require, module, exports) {
        var TO_PRIMITIVE = require('./_wks')('toPrimitive');
        var proto = Date.prototype;

        if (!(TO_PRIMITIVE in proto))
          require('./_hide')(
            proto,
            TO_PRIMITIVE,
            require('./_date-to-primitive')
          );
      },
      {
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_date-to-primitive':
          '../../node_modules/core-js/modules/_date-to-primitive.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.function.has-instance.js': [
      function(require, module, exports) {
        'use strict';
        var isObject = require('./_is-object');
        var getPrototypeOf = require('./_object-gpo');
        var HAS_INSTANCE = require('./_wks')('hasInstance');
        var FunctionProto = Function.prototype;
        // 19.2.3.6 Function.prototype[@@hasInstance](V)
        if (!(HAS_INSTANCE in FunctionProto))
          require('./_object-dp').f(FunctionProto, HAS_INSTANCE, {
            value: function(O) {
              if (typeof this != 'function' || !isObject(O)) return false;
              if (!isObject(this.prototype)) return O instanceof this;
              // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
              while ((O = getPrototypeOf(O)))
                if (this.prototype === O) return true;
              return false;
            }
          });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.function.name.js': [
      function(require, module, exports) {
        var dP = require('./_object-dp').f;
        var FProto = Function.prototype;
        var nameRE = /^\s*function ([^ (]*)/;
        var NAME = 'name';

        // 19.2.4.2 name
        NAME in FProto ||
          (require('./_descriptors') &&
            dP(FProto, NAME, {
              configurable: true,
              get: function() {
                try {
                  return ('' + this).match(nameRE)[1];
                } catch (e) {
                  return '';
                }
              }
            }));
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js'
      }
    ],
    '../../node_modules/core-js/modules/_redefine-all.js': [
      function(require, module, exports) {
        var redefine = require('./_redefine');
        module.exports = function(target, src, safe) {
          for (var key in src) redefine(target, key, src[key], safe);
          return target;
        };
      },
      { './_redefine': '../../node_modules/core-js/modules/_redefine.js' }
    ],
    '../../node_modules/core-js/modules/_an-instance.js': [
      function(require, module, exports) {
        module.exports = function(it, Constructor, name, forbiddenField) {
          if (
            !(it instanceof Constructor) ||
            (forbiddenField !== undefined && forbiddenField in it)
          ) {
            throw TypeError(name + ': incorrect invocation!');
          }
          return it;
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_for-of.js': [
      function(require, module, exports) {
        var ctx = require('./_ctx');
        var call = require('./_iter-call');
        var isArrayIter = require('./_is-array-iter');
        var anObject = require('./_an-object');
        var toLength = require('./_to-length');
        var getIterFn = require('./core.get-iterator-method');
        var BREAK = {};
        var RETURN = {};
        var exports = (module.exports = function(
          iterable,
          entries,
          fn,
          that,
          ITERATOR
        ) {
          var iterFn = ITERATOR
            ? function() {
                return iterable;
              }
            : getIterFn(iterable);
          var f = ctx(fn, that, entries ? 2 : 1);
          var index = 0;
          var length, step, iterator, result;
          if (typeof iterFn != 'function')
            throw TypeError(iterable + ' is not iterable!');
          // fast case for arrays with default iterator
          if (isArrayIter(iterFn))
            for (length = toLength(iterable.length); length > index; index++) {
              result = entries
                ? f(anObject((step = iterable[index]))[0], step[1])
                : f(iterable[index]);
              if (result === BREAK || result === RETURN) return result;
            }
          else
            for (
              iterator = iterFn.call(iterable);
              !(step = iterator.next()).done;

            ) {
              result = call(iterator, f, step.value, entries);
              if (result === BREAK || result === RETURN) return result;
            }
        });
        exports.BREAK = BREAK;
        exports.RETURN = RETURN;
      },
      {
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_iter-call': '../../node_modules/core-js/modules/_iter-call.js',
        './_is-array-iter':
          '../../node_modules/core-js/modules/_is-array-iter.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './core.get-iterator-method':
          '../../node_modules/core-js/modules/core.get-iterator-method.js'
      }
    ],
    '../../node_modules/core-js/modules/_meta.js': [
      function(require, module, exports) {
        var META = require('./_uid')('meta');
        var isObject = require('./_is-object');
        var has = require('./_has');
        var setDesc = require('./_object-dp').f;
        var id = 0;
        var isExtensible =
          Object.isExtensible ||
          function() {
            return true;
          };
        var FREEZE = !require('./_fails')(function() {
          return isExtensible(Object.preventExtensions({}));
        });
        var setMeta = function(it) {
          setDesc(it, META, {
            value: {
              i: 'O' + ++id, // object ID
              w: {} // weak collections IDs
            }
          });
        };
        var fastKey = function(it, create) {
          // return primitive with prefix
          if (!isObject(it))
            return typeof it == 'symbol'
              ? it
              : (typeof it == 'string' ? 'S' : 'P') + it;
          if (!has(it, META)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return 'F';
            // not necessary to add metadata
            if (!create) return 'E';
            // add missing metadata
            setMeta(it);
            // return object ID
          }
          return it[META].i;
        };
        var getWeak = function(it, create) {
          if (!has(it, META)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return true;
            // not necessary to add metadata
            if (!create) return false;
            // add missing metadata
            setMeta(it);
            // return hash weak collections IDs
          }
          return it[META].w;
        };
        // add metadata on freeze-family methods calling
        var onFreeze = function(it) {
          if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META))
            setMeta(it);
          return it;
        };
        var meta = (module.exports = {
          KEY: META,
          NEED: false,
          fastKey: fastKey,
          getWeak: getWeak,
          onFreeze: onFreeze
        });
      },
      {
        './_uid': '../../node_modules/core-js/modules/_uid.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/_validate-collection.js': [
      function(require, module, exports) {
        var isObject = require('./_is-object');
        module.exports = function(it, TYPE) {
          if (!isObject(it) || it._t !== TYPE)
            throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
          return it;
        };
      },
      { './_is-object': '../../node_modules/core-js/modules/_is-object.js' }
    ],
    '../../node_modules/core-js/modules/_collection-strong.js': [
      function(require, module, exports) {
        'use strict';
        var dP = require('./_object-dp').f;
        var create = require('./_object-create');
        var redefineAll = require('./_redefine-all');
        var ctx = require('./_ctx');
        var anInstance = require('./_an-instance');
        var forOf = require('./_for-of');
        var $iterDefine = require('./_iter-define');
        var step = require('./_iter-step');
        var setSpecies = require('./_set-species');
        var DESCRIPTORS = require('./_descriptors');
        var fastKey = require('./_meta').fastKey;
        var validate = require('./_validate-collection');
        var SIZE = DESCRIPTORS ? '_s' : 'size';

        var getEntry = function(that, key) {
          // fast case
          var index = fastKey(key);
          var entry;
          if (index !== 'F') return that._i[index];
          // frozen object case
          for (entry = that._f; entry; entry = entry.n) {
            if (entry.k == key) return entry;
          }
        };

        module.exports = {
          getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
            var C = wrapper(function(that, iterable) {
              anInstance(that, C, NAME, '_i');
              that._t = NAME; // collection type
              that._i = create(null); // index
              that._f = undefined; // first entry
              that._l = undefined; // last entry
              that[SIZE] = 0; // size
              if (iterable != undefined)
                forOf(iterable, IS_MAP, that[ADDER], that);
            });
            redefineAll(C.prototype, {
              // 23.1.3.1 Map.prototype.clear()
              // 23.2.3.2 Set.prototype.clear()
              clear: function clear() {
                for (
                  var that = validate(this, NAME),
                    data = that._i,
                    entry = that._f;
                  entry;
                  entry = entry.n
                ) {
                  entry.r = true;
                  if (entry.p) entry.p = entry.p.n = undefined;
                  delete data[entry.i];
                }
                that._f = that._l = undefined;
                that[SIZE] = 0;
              },
              // 23.1.3.3 Map.prototype.delete(key)
              // 23.2.3.4 Set.prototype.delete(value)
              delete: function(key) {
                var that = validate(this, NAME);
                var entry = getEntry(that, key);
                if (entry) {
                  var next = entry.n;
                  var prev = entry.p;
                  delete that._i[entry.i];
                  entry.r = true;
                  if (prev) prev.n = next;
                  if (next) next.p = prev;
                  if (that._f == entry) that._f = next;
                  if (that._l == entry) that._l = prev;
                  that[SIZE]--;
                }
                return !!entry;
              },
              // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
              // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
              forEach: function forEach(callbackfn /* , that = undefined */) {
                validate(this, NAME);
                var f = ctx(
                  callbackfn,
                  arguments.length > 1 ? arguments[1] : undefined,
                  3
                );
                var entry;
                while ((entry = entry ? entry.n : this._f)) {
                  f(entry.v, entry.k, this);
                  // revert to the last existing entry
                  while (entry && entry.r) entry = entry.p;
                }
              },
              // 23.1.3.7 Map.prototype.has(key)
              // 23.2.3.7 Set.prototype.has(value)
              has: function has(key) {
                return !!getEntry(validate(this, NAME), key);
              }
            });
            if (DESCRIPTORS)
              dP(C.prototype, 'size', {
                get: function() {
                  return validate(this, NAME)[SIZE];
                }
              });
            return C;
          },
          def: function(that, key, value) {
            var entry = getEntry(that, key);
            var prev, index;
            // change existing entry
            if (entry) {
              entry.v = value;
              // create new entry
            } else {
              that._l = entry = {
                i: (index = fastKey(key, true)), // <- index
                k: key, // <- key
                v: value, // <- value
                p: (prev = that._l), // <- previous entry
                n: undefined, // <- next entry
                r: false // <- removed
              };
              if (!that._f) that._f = entry;
              if (prev) prev.n = entry;
              that[SIZE]++;
              // add to index
              if (index !== 'F') that._i[index] = entry;
            }
            return that;
          },
          getEntry: getEntry,
          setStrong: function(C, NAME, IS_MAP) {
            // add .keys, .values, .entries, [@@iterator]
            // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
            $iterDefine(
              C,
              NAME,
              function(iterated, kind) {
                this._t = validate(iterated, NAME); // target
                this._k = kind; // kind
                this._l = undefined; // previous
              },
              function() {
                var that = this;
                var kind = that._k;
                var entry = that._l;
                // revert to the last existing entry
                while (entry && entry.r) entry = entry.p;
                // get next entry
                if (
                  !that._t ||
                  !(that._l = entry = entry ? entry.n : that._t._f)
                ) {
                  // or finish the iteration
                  that._t = undefined;
                  return step(1);
                }
                // return step by kind
                if (kind == 'keys') return step(0, entry.k);
                if (kind == 'values') return step(0, entry.v);
                return step(0, [entry.k, entry.v]);
              },
              IS_MAP ? 'entries' : 'values',
              !IS_MAP,
              true
            );

            // add [@@species], 23.1.2.2, 23.2.2.2
            setSpecies(NAME);
          }
        };
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_for-of': '../../node_modules/core-js/modules/_for-of.js',
        './_iter-define': '../../node_modules/core-js/modules/_iter-define.js',
        './_iter-step': '../../node_modules/core-js/modules/_iter-step.js',
        './_set-species': '../../node_modules/core-js/modules/_set-species.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-pie.js': [
      function(require, module, exports) {
        exports.f = {}.propertyIsEnumerable;
      },
      {}
    ],
    '../../node_modules/core-js/modules/_object-gopd.js': [
      function(require, module, exports) {
        var pIE = require('./_object-pie');
        var createDesc = require('./_property-desc');
        var toIObject = require('./_to-iobject');
        var toPrimitive = require('./_to-primitive');
        var has = require('./_has');
        var IE8_DOM_DEFINE = require('./_ie8-dom-define');
        var gOPD = Object.getOwnPropertyDescriptor;

        exports.f = require('./_descriptors')
          ? gOPD
          : function getOwnPropertyDescriptor(O, P) {
              O = toIObject(O);
              P = toPrimitive(P, true);
              if (IE8_DOM_DEFINE)
                try {
                  return gOPD(O, P);
                } catch (e) {
                  /* empty */
                }
              if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
            };
      },
      {
        './_object-pie': '../../node_modules/core-js/modules/_object-pie.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_ie8-dom-define':
          '../../node_modules/core-js/modules/_ie8-dom-define.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js'
      }
    ],
    '../../node_modules/core-js/modules/_set-proto.js': [
      function(require, module, exports) {
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        var isObject = require('./_is-object');
        var anObject = require('./_an-object');
        var check = function(O, proto) {
          anObject(O);
          if (!isObject(proto) && proto !== null)
            throw TypeError(proto + ": can't set as prototype!");
        };
        module.exports = {
          set:
            Object.setPrototypeOf ||
            ('__proto__' in {} // eslint-disable-line
              ? (function(test, buggy, set) {
                  try {
                    set = require('./_ctx')(
                      Function.call,
                      require('./_object-gopd').f(Object.prototype, '__proto__')
                        .set,
                      2
                    );
                    set(test, []);
                    buggy = !(test instanceof Array);
                  } catch (e) {
                    buggy = true;
                  }
                  return function setPrototypeOf(O, proto) {
                    check(O, proto);
                    if (buggy) O.__proto__ = proto;
                    else set(O, proto);
                    return O;
                  };
                })({}, false)
              : undefined),
          check: check
        };
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js'
      }
    ],
    '../../node_modules/core-js/modules/_inherit-if-required.js': [
      function(require, module, exports) {
        var isObject = require('./_is-object');
        var setPrototypeOf = require('./_set-proto').set;
        module.exports = function(that, target, C) {
          var S = target.constructor;
          var P;
          if (
            S !== C &&
            typeof S == 'function' &&
            (P = S.prototype) !== C.prototype &&
            isObject(P) &&
            setPrototypeOf
          ) {
            setPrototypeOf(that, P);
          }
          return that;
        };
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_set-proto': '../../node_modules/core-js/modules/_set-proto.js'
      }
    ],
    '../../node_modules/core-js/modules/_collection.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('./_global');
        var $export = require('./_export');
        var redefine = require('./_redefine');
        var redefineAll = require('./_redefine-all');
        var meta = require('./_meta');
        var forOf = require('./_for-of');
        var anInstance = require('./_an-instance');
        var isObject = require('./_is-object');
        var fails = require('./_fails');
        var $iterDetect = require('./_iter-detect');
        var setToStringTag = require('./_set-to-string-tag');
        var inheritIfRequired = require('./_inherit-if-required');

        module.exports = function(
          NAME,
          wrapper,
          methods,
          common,
          IS_MAP,
          IS_WEAK
        ) {
          var Base = global[NAME];
          var C = Base;
          var ADDER = IS_MAP ? 'set' : 'add';
          var proto = C && C.prototype;
          var O = {};
          var fixMethod = function(KEY) {
            var fn = proto[KEY];
            redefine(
              proto,
              KEY,
              KEY == 'delete'
                ? function(a) {
                    return IS_WEAK && !isObject(a)
                      ? false
                      : fn.call(this, a === 0 ? 0 : a);
                  }
                : KEY == 'has'
                ? function has(a) {
                    return IS_WEAK && !isObject(a)
                      ? false
                      : fn.call(this, a === 0 ? 0 : a);
                  }
                : KEY == 'get'
                ? function get(a) {
                    return IS_WEAK && !isObject(a)
                      ? undefined
                      : fn.call(this, a === 0 ? 0 : a);
                  }
                : KEY == 'add'
                ? function add(a) {
                    fn.call(this, a === 0 ? 0 : a);
                    return this;
                  }
                : function set(a, b) {
                    fn.call(this, a === 0 ? 0 : a, b);
                    return this;
                  }
            );
          };
          if (
            typeof C != 'function' ||
            !(
              IS_WEAK ||
              (proto.forEach &&
                !fails(function() {
                  new C().entries().next();
                }))
            )
          ) {
            // create collection constructor
            C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
            redefineAll(C.prototype, methods);
            meta.NEED = true;
          } else {
            var instance = new C();
            // early implementations not supports chaining
            var HASNT_CHAINING =
              instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
            // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
            var THROWS_ON_PRIMITIVES = fails(function() {
              instance.has(1);
            });
            // most early implementations doesn't supports iterables, most modern - not close it correctly
            var ACCEPT_ITERABLES = $iterDetect(function(iter) {
              new C(iter);
            }); // eslint-disable-line no-new
            // for early implementations -0 and +0 not the same
            var BUGGY_ZERO =
              !IS_WEAK &&
              fails(function() {
                // V8 ~ Chromium 42- fails only with 5+ elements
                var $instance = new C();
                var index = 5;
                while (index--) $instance[ADDER](index, index);
                return !$instance.has(-0);
              });
            if (!ACCEPT_ITERABLES) {
              C = wrapper(function(target, iterable) {
                anInstance(target, C, NAME);
                var that = inheritIfRequired(new Base(), target, C);
                if (iterable != undefined)
                  forOf(iterable, IS_MAP, that[ADDER], that);
                return that;
              });
              C.prototype = proto;
              proto.constructor = C;
            }
            if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
              fixMethod('delete');
              fixMethod('has');
              IS_MAP && fixMethod('get');
            }
            if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
            // weak collections should not contains .clear method
            if (IS_WEAK && proto.clear) delete proto.clear;
          }

          setToStringTag(C, NAME);

          O[NAME] = C;
          $export($export.G + $export.W + $export.F * (C != Base), O);

          if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

          return C;
        };
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_for-of': '../../node_modules/core-js/modules/_for-of.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_iter-detect': '../../node_modules/core-js/modules/_iter-detect.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js',
        './_inherit-if-required':
          '../../node_modules/core-js/modules/_inherit-if-required.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.map.js': [
      function(require, module, exports) {
        'use strict';
        var strong = require('./_collection-strong');
        var validate = require('./_validate-collection');
        var MAP = 'Map';

        // 23.1 Map Objects
        module.exports = require('./_collection')(
          MAP,
          function(get) {
            return function Map() {
              return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
          },
          {
            // 23.1.3.6 Map.prototype.get(key)
            get: function get(key) {
              var entry = strong.getEntry(validate(this, MAP), key);
              return entry && entry.v;
            },
            // 23.1.3.9 Map.prototype.set(key, value)
            set: function set(key, value) {
              return strong.def(
                validate(this, MAP),
                key === 0 ? 0 : key,
                value
              );
            }
          },
          strong,
          true
        );
      },
      {
        './_collection-strong':
          '../../node_modules/core-js/modules/_collection-strong.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js',
        './_collection': '../../node_modules/core-js/modules/_collection.js'
      }
    ],
    '../../node_modules/core-js/modules/_math-log1p.js': [
      function(require, module, exports) {
        // 20.2.2.20 Math.log1p(x)
        module.exports =
          Math.log1p ||
          function log1p(x) {
            return (x = +x) > -1e-8 && x < 1e-8
              ? x - (x * x) / 2
              : Math.log(1 + x);
          };
      },
      {}
    ],
    '../../node_modules/core-js/modules/es6.math.acosh.js': [
      function(require, module, exports) {
        // 20.2.2.3 Math.acosh(x)
        var $export = require('./_export');
        var log1p = require('./_math-log1p');
        var sqrt = Math.sqrt;
        var $acosh = Math.acosh;

        $export(
          $export.S +
            $export.F *
              !(
                $acosh &&
                // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
                Math.floor($acosh(Number.MAX_VALUE)) == 710 &&
                // Tor Browser bug: Math.acosh(Infinity) -> NaN
                $acosh(Infinity) == Infinity
              ),
          'Math',
          {
            acosh: function acosh(x) {
              return (x = +x) < 1
                ? NaN
                : x > 94906265.62425156
                ? Math.log(x) + Math.LN2
                : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-log1p': '../../node_modules/core-js/modules/_math-log1p.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.asinh.js': [
      function(require, module, exports) {
        // 20.2.2.5 Math.asinh(x)
        var $export = require('./_export');
        var $asinh = Math.asinh;

        function asinh(x) {
          return !isFinite((x = +x)) || x == 0
            ? x
            : x < 0
            ? -asinh(-x)
            : Math.log(x + Math.sqrt(x * x + 1));
        }

        // Tor Browser bug: Math.asinh(0) -> -0
        $export(
          $export.S + $export.F * !($asinh && 1 / $asinh(0) > 0),
          'Math',
          { asinh: asinh }
        );
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.atanh.js': [
      function(require, module, exports) {
        // 20.2.2.7 Math.atanh(x)
        var $export = require('./_export');
        var $atanh = Math.atanh;

        // Tor Browser bug: Math.atanh(-0) -> 0
        $export(
          $export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0),
          'Math',
          {
            atanh: function atanh(x) {
              return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
            }
          }
        );
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/_math-sign.js': [
      function(require, module, exports) {
        // 20.2.2.28 Math.sign(x)
        module.exports =
          Math.sign ||
          function sign(x) {
            // eslint-disable-next-line no-self-compare
            return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
          };
      },
      {}
    ],
    '../../node_modules/core-js/modules/es6.math.cbrt.js': [
      function(require, module, exports) {
        // 20.2.2.9 Math.cbrt(x)
        var $export = require('./_export');
        var sign = require('./_math-sign');

        $export($export.S, 'Math', {
          cbrt: function cbrt(x) {
            return sign((x = +x)) * Math.pow(Math.abs(x), 1 / 3);
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-sign': '../../node_modules/core-js/modules/_math-sign.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.clz32.js': [
      function(require, module, exports) {
        // 20.2.2.11 Math.clz32(x)
        var $export = require('./_export');

        $export($export.S, 'Math', {
          clz32: function clz32(x) {
            return (x >>>= 0)
              ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E)
              : 32;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.cosh.js': [
      function(require, module, exports) {
        // 20.2.2.12 Math.cosh(x)
        var $export = require('./_export');
        var exp = Math.exp;

        $export($export.S, 'Math', {
          cosh: function cosh(x) {
            return (exp((x = +x)) + exp(-x)) / 2;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/_math-expm1.js': [
      function(require, module, exports) {
        // 20.2.2.14 Math.expm1(x)
        var $expm1 = Math.expm1;
        module.exports =
          !$expm1 ||
          // Old FF bug
          $expm1(10) > 22025.465794806719 ||
          $expm1(10) < 22025.4657948067165168 ||
          // Tor Browser bug
          $expm1(-2e-17) != -2e-17
            ? function expm1(x) {
                return (x = +x) == 0
                  ? x
                  : x > -1e-6 && x < 1e-6
                  ? x + (x * x) / 2
                  : Math.exp(x) - 1;
              }
            : $expm1;
      },
      {}
    ],
    '../../node_modules/core-js/modules/es6.math.expm1.js': [
      function(require, module, exports) {
        // 20.2.2.14 Math.expm1(x)
        var $export = require('./_export');
        var $expm1 = require('./_math-expm1');

        $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {
          expm1: $expm1
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-expm1': '../../node_modules/core-js/modules/_math-expm1.js'
      }
    ],
    '../../node_modules/core-js/modules/_math-fround.js': [
      function(require, module, exports) {
        // 20.2.2.16 Math.fround(x)
        var sign = require('./_math-sign');
        var pow = Math.pow;
        var EPSILON = pow(2, -52);
        var EPSILON32 = pow(2, -23);
        var MAX32 = pow(2, 127) * (2 - EPSILON32);
        var MIN32 = pow(2, -126);

        var roundTiesToEven = function(n) {
          return n + 1 / EPSILON - 1 / EPSILON;
        };

        module.exports =
          Math.fround ||
          function fround(x) {
            var $abs = Math.abs(x);
            var $sign = sign(x);
            var a, result;
            if ($abs < MIN32)
              return (
                $sign *
                roundTiesToEven($abs / MIN32 / EPSILON32) *
                MIN32 *
                EPSILON32
              );
            a = (1 + EPSILON32 / EPSILON) * $abs;
            result = a - (a - $abs);
            // eslint-disable-next-line no-self-compare
            if (result > MAX32 || result != result) return $sign * Infinity;
            return $sign * result;
          };
      },
      { './_math-sign': '../../node_modules/core-js/modules/_math-sign.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.fround.js': [
      function(require, module, exports) {
        // 20.2.2.16 Math.fround(x)
        var $export = require('./_export');

        $export($export.S, 'Math', { fround: require('./_math-fround') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-fround': '../../node_modules/core-js/modules/_math-fround.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.hypot.js': [
      function(require, module, exports) {
        // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
        var $export = require('./_export');
        var abs = Math.abs;

        $export($export.S, 'Math', {
          hypot: function hypot(value1, value2) {
            // eslint-disable-line no-unused-vars
            var sum = 0;
            var i = 0;
            var aLen = arguments.length;
            var larg = 0;
            var arg, div;
            while (i < aLen) {
              arg = abs(arguments[i++]);
              if (larg < arg) {
                div = larg / arg;
                sum = sum * div * div + 1;
                larg = arg;
              } else if (arg > 0) {
                div = arg / larg;
                sum += div * div;
              } else sum += arg;
            }
            return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.imul.js': [
      function(require, module, exports) {
        // 20.2.2.18 Math.imul(x, y)
        var $export = require('./_export');
        var $imul = Math.imul;

        // some WebKit versions fails with big numbers, some has wrong arity
        $export(
          $export.S +
            $export.F *
              require('./_fails')(function() {
                return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
              }),
          'Math',
          {
            imul: function imul(x, y) {
              var UINT16 = 0xffff;
              var xn = +x;
              var yn = +y;
              var xl = UINT16 & xn;
              var yl = UINT16 & yn;
              return (
                0 |
                (xl * yl +
                  ((((UINT16 & (xn >>> 16)) * yl +
                    xl * (UINT16 & (yn >>> 16))) <<
                    16) >>>
                    0))
              );
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.log1p.js': [
      function(require, module, exports) {
        // 20.2.2.20 Math.log1p(x)
        var $export = require('./_export');

        $export($export.S, 'Math', { log1p: require('./_math-log1p') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-log1p': '../../node_modules/core-js/modules/_math-log1p.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.log10.js': [
      function(require, module, exports) {
        // 20.2.2.21 Math.log10(x)
        var $export = require('./_export');

        $export($export.S, 'Math', {
          log10: function log10(x) {
            return Math.log(x) * Math.LOG10E;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.log2.js': [
      function(require, module, exports) {
        // 20.2.2.22 Math.log2(x)
        var $export = require('./_export');

        $export($export.S, 'Math', {
          log2: function log2(x) {
            return Math.log(x) / Math.LN2;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.math.sign.js': [
      function(require, module, exports) {
        // 20.2.2.28 Math.sign(x)
        var $export = require('./_export');

        $export($export.S, 'Math', { sign: require('./_math-sign') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-sign': '../../node_modules/core-js/modules/_math-sign.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.sinh.js': [
      function(require, module, exports) {
        // 20.2.2.30 Math.sinh(x)
        var $export = require('./_export');
        var expm1 = require('./_math-expm1');
        var exp = Math.exp;

        // V8 near Chromium 38 has a problem with very small numbers
        $export(
          $export.S +
            $export.F *
              require('./_fails')(function() {
                return !Math.sinh(-2e-17) != -2e-17;
              }),
          'Math',
          {
            sinh: function sinh(x) {
              return Math.abs((x = +x)) < 1
                ? (expm1(x) - expm1(-x)) / 2
                : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-expm1': '../../node_modules/core-js/modules/_math-expm1.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.tanh.js': [
      function(require, module, exports) {
        // 20.2.2.33 Math.tanh(x)
        var $export = require('./_export');
        var expm1 = require('./_math-expm1');
        var exp = Math.exp;

        $export($export.S, 'Math', {
          tanh: function tanh(x) {
            var a = expm1((x = +x));
            var b = expm1(-x);
            return a == Infinity
              ? 1
              : b == Infinity
              ? -1
              : (a - b) / (exp(x) + exp(-x));
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_math-expm1': '../../node_modules/core-js/modules/_math-expm1.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.math.trunc.js': [
      function(require, module, exports) {
        // 20.2.2.34 Math.trunc(x)
        var $export = require('./_export');

        $export($export.S, 'Math', {
          trunc: function trunc(it) {
            return (it > 0 ? Math.floor : Math.ceil)(it);
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/_object-gopn.js': [
      function(require, module, exports) {
        // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
        var $keys = require('./_object-keys-internal');
        var hiddenKeys = require('./_enum-bug-keys').concat(
          'length',
          'prototype'
        );

        exports.f =
          Object.getOwnPropertyNames ||
          function getOwnPropertyNames(O) {
            return $keys(O, hiddenKeys);
          };
      },
      {
        './_object-keys-internal':
          '../../node_modules/core-js/modules/_object-keys-internal.js',
        './_enum-bug-keys':
          '../../node_modules/core-js/modules/_enum-bug-keys.js'
      }
    ],
    '../../node_modules/core-js/modules/_string-ws.js': [
      function(require, module, exports) {
        module.exports =
          '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
          '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
      },
      {}
    ],
    '../../node_modules/core-js/modules/_string-trim.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var defined = require('./_defined');
        var fails = require('./_fails');
        var spaces = require('./_string-ws');
        var space = '[' + spaces + ']';
        var non = '\u200b\u0085';
        var ltrim = RegExp('^' + space + space + '*');
        var rtrim = RegExp(space + space + '*$');

        var exporter = function(KEY, exec, ALIAS) {
          var exp = {};
          var FORCE = fails(function() {
            return !!spaces[KEY]() || non[KEY]() != non;
          });
          var fn = (exp[KEY] = FORCE ? exec(trim) : spaces[KEY]);
          if (ALIAS) exp[ALIAS] = fn;
          $export($export.P + $export.F * FORCE, 'String', exp);
        };

        // 1 -> String#trimLeft
        // 2 -> String#trimRight
        // 3 -> String#trim
        var trim = (exporter.trim = function(string, TYPE) {
          string = String(defined(string));
          if (TYPE & 1) string = string.replace(ltrim, '');
          if (TYPE & 2) string = string.replace(rtrim, '');
          return string;
        });

        module.exports = exporter;
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_string-ws': '../../node_modules/core-js/modules/_string-ws.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.constructor.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('./_global');
        var has = require('./_has');
        var cof = require('./_cof');
        var inheritIfRequired = require('./_inherit-if-required');
        var toPrimitive = require('./_to-primitive');
        var fails = require('./_fails');
        var gOPN = require('./_object-gopn').f;
        var gOPD = require('./_object-gopd').f;
        var dP = require('./_object-dp').f;
        var $trim = require('./_string-trim').trim;
        var NUMBER = 'Number';
        var $Number = global[NUMBER];
        var Base = $Number;
        var proto = $Number.prototype;
        // Opera ~12 has broken Object#toString
        var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
        var TRIM = 'trim' in String.prototype;

        // 7.1.3 ToNumber(argument)
        var toNumber = function(argument) {
          var it = toPrimitive(argument, false);
          if (typeof it == 'string' && it.length > 2) {
            it = TRIM ? it.trim() : $trim(it, 3);
            var first = it.charCodeAt(0);
            var third, radix, maxCode;
            if (first === 43 || first === 45) {
              third = it.charCodeAt(2);
              if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
            } else if (first === 48) {
              switch (it.charCodeAt(1)) {
                case 66:
                case 98:
                  radix = 2;
                  maxCode = 49;
                  break; // fast equal /^0b[01]+$/i
                case 79:
                case 111:
                  radix = 8;
                  maxCode = 55;
                  break; // fast equal /^0o[0-7]+$/i
                default:
                  return +it;
              }
              for (
                var digits = it.slice(2), i = 0, l = digits.length, code;
                i < l;
                i++
              ) {
                code = digits.charCodeAt(i);
                // parseInt parses a string to a first unavailable symbol
                // but ToNumber should return NaN if a string contains unavailable symbols
                if (code < 48 || code > maxCode) return NaN;
              }
              return parseInt(digits, radix);
            }
          }
          return +it;
        };

        if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
          $Number = function Number(value) {
            var it = arguments.length < 1 ? 0 : value;
            var that = this;
            return that instanceof $Number &&
              // check on 1..constructor(foo) case
              (BROKEN_COF
                ? fails(function() {
                    proto.valueOf.call(that);
                  })
                : cof(that) != NUMBER)
              ? inheritIfRequired(new Base(toNumber(it)), that, $Number)
              : toNumber(it);
          };
          for (
            var keys = require('./_descriptors')
                ? gOPN(Base)
                : // ES3:
                  (
                    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
                    // ES6 (in case, if modules with ES6 Number statics required before):
                    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
                    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
                  ).split(','),
              j = 0,
              key;
            keys.length > j;
            j++
          ) {
            if (has(Base, (key = keys[j])) && !has($Number, key)) {
              dP($Number, key, gOPD(Base, key));
            }
          }
          $Number.prototype = proto;
          proto.constructor = $Number;
          require('./_redefine')(global, NUMBER, $Number);
        }
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_cof': '../../node_modules/core-js/modules/_cof.js',
        './_inherit-if-required':
          '../../node_modules/core-js/modules/_inherit-if-required.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_string-trim': '../../node_modules/core-js/modules/_string-trim.js',
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.epsilon.js': [
      function(require, module, exports) {
        // 20.1.2.1 Number.EPSILON
        var $export = require('./_export');

        $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.number.is-finite.js': [
      function(require, module, exports) {
        // 20.1.2.2 Number.isFinite(number)
        var $export = require('./_export');
        var _isFinite = require('./_global').isFinite;

        $export($export.S, 'Number', {
          isFinite: function isFinite(it) {
            return typeof it == 'number' && _isFinite(it);
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/_is-integer.js': [
      function(require, module, exports) {
        // 20.1.2.3 Number.isInteger(number)
        var isObject = require('./_is-object');
        var floor = Math.floor;
        module.exports = function isInteger(it) {
          return !isObject(it) && isFinite(it) && floor(it) === it;
        };
      },
      { './_is-object': '../../node_modules/core-js/modules/_is-object.js' }
    ],
    '../../node_modules/core-js/modules/es6.number.is-integer.js': [
      function(require, module, exports) {
        // 20.1.2.3 Number.isInteger(number)
        var $export = require('./_export');

        $export($export.S, 'Number', { isInteger: require('./_is-integer') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_is-integer': '../../node_modules/core-js/modules/_is-integer.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.is-nan.js': [
      function(require, module, exports) {
        // 20.1.2.4 Number.isNaN(number)
        var $export = require('./_export');

        $export($export.S, 'Number', {
          isNaN: function isNaN(number) {
            // eslint-disable-next-line no-self-compare
            return number != number;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.number.is-safe-integer.js': [
      function(require, module, exports) {
        // 20.1.2.5 Number.isSafeInteger(number)
        var $export = require('./_export');
        var isInteger = require('./_is-integer');
        var abs = Math.abs;

        $export($export.S, 'Number', {
          isSafeInteger: function isSafeInteger(number) {
            return isInteger(number) && abs(number) <= 0x1fffffffffffff;
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_is-integer': '../../node_modules/core-js/modules/_is-integer.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.max-safe-integer.js': [
      function(require, module, exports) {
        // 20.1.2.6 Number.MAX_SAFE_INTEGER
        var $export = require('./_export');

        $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.number.min-safe-integer.js': [
      function(require, module, exports) {
        // 20.1.2.10 Number.MIN_SAFE_INTEGER
        var $export = require('./_export');

        $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/_parse-float.js': [
      function(require, module, exports) {
        var $parseFloat = require('./_global').parseFloat;
        var $trim = require('./_string-trim').trim;

        module.exports =
          1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity
            ? function parseFloat(str) {
                var string = $trim(String(str), 3);
                var result = $parseFloat(string);
                return result === 0 && string.charAt(0) == '-' ? -0 : result;
              }
            : $parseFloat;
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_string-trim': '../../node_modules/core-js/modules/_string-trim.js',
        './_string-ws': '../../node_modules/core-js/modules/_string-ws.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.parse-float.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var $parseFloat = require('./_parse-float');
        // 20.1.2.12 Number.parseFloat(string)
        $export(
          $export.S + $export.F * (Number.parseFloat != $parseFloat),
          'Number',
          { parseFloat: $parseFloat }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_parse-float': '../../node_modules/core-js/modules/_parse-float.js'
      }
    ],
    '../../node_modules/core-js/modules/_parse-int.js': [
      function(require, module, exports) {
        var $parseInt = require('./_global').parseInt;
        var $trim = require('./_string-trim').trim;
        var ws = require('./_string-ws');
        var hex = /^[-+]?0[xX]/;

        module.exports =
          $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22
            ? function parseInt(str, radix) {
                var string = $trim(String(str), 3);
                return $parseInt(
                  string,
                  radix >>> 0 || (hex.test(string) ? 16 : 10)
                );
              }
            : $parseInt;
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_string-trim': '../../node_modules/core-js/modules/_string-trim.js',
        './_string-ws': '../../node_modules/core-js/modules/_string-ws.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.number.parse-int.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var $parseInt = require('./_parse-int');
        // 20.1.2.13 Number.parseInt(string, radix)
        $export(
          $export.S + $export.F * (Number.parseInt != $parseInt),
          'Number',
          { parseInt: $parseInt }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_parse-int': '../../node_modules/core-js/modules/_parse-int.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-gops.js': [
      function(require, module, exports) {
        exports.f = Object.getOwnPropertySymbols;
      },
      {}
    ],
    '../../node_modules/core-js/modules/_object-assign.js': [
      function(require, module, exports) {
        'use strict';
        // 19.1.2.1 Object.assign(target, source, ...)
        var DESCRIPTORS = require('./_descriptors');
        var getKeys = require('./_object-keys');
        var gOPS = require('./_object-gops');
        var pIE = require('./_object-pie');
        var toObject = require('./_to-object');
        var IObject = require('./_iobject');
        var $assign = Object.assign;

        // should work with symbols and should have deterministic property order (V8 bug)
        module.exports =
          !$assign ||
          require('./_fails')(function() {
            var A = {};
            var B = {};
            // eslint-disable-next-line no-undef
            var S = Symbol();
            var K = 'abcdefghijklmnopqrst';
            A[S] = 7;
            K.split('').forEach(function(k) {
              B[k] = k;
            });
            return (
              $assign({}, A)[S] != 7 ||
              Object.keys($assign({}, B)).join('') != K
            );
          })
            ? function assign(target, source) {
                // eslint-disable-line no-unused-vars
                var T = toObject(target);
                var aLen = arguments.length;
                var index = 1;
                var getSymbols = gOPS.f;
                var isEnum = pIE.f;
                while (aLen > index) {
                  var S = IObject(arguments[index++]);
                  var keys = getSymbols
                    ? getKeys(S).concat(getSymbols(S))
                    : getKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) {
                    key = keys[j++];
                    if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
                  }
                }
                return T;
              }
            : $assign;
      },
      {
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_object-gops': '../../node_modules/core-js/modules/_object-gops.js',
        './_object-pie': '../../node_modules/core-js/modules/_object-pie.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_iobject': '../../node_modules/core-js/modules/_iobject.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.assign.js': [
      function(require, module, exports) {
        // 19.1.3.1 Object.assign(target, source)
        var $export = require('./_export');

        $export($export.S + $export.F, 'Object', {
          assign: require('./_object-assign')
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-assign':
          '../../node_modules/core-js/modules/_object-assign.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-forced-pam.js': [
      function(require, module, exports) {
        'use strict';
        // Forced replacement prototype accessors methods
        module.exports =
          require('./_library') ||
          !require('./_fails')(function() {
            var K = Math.random();
            // In FF throws only define methods
            // eslint-disable-next-line no-undef, no-useless-call
            __defineSetter__.call(null, K, function() {
              /* empty */
            });
            delete require('./_global')[K];
          });
      },
      {
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.define-getter.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var toObject = require('./_to-object');
        var aFunction = require('./_a-function');
        var $defineProperty = require('./_object-dp');

        // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
        require('./_descriptors') &&
          $export($export.P + require('./_object-forced-pam'), 'Object', {
            __defineGetter__: function __defineGetter__(P, getter) {
              $defineProperty.f(toObject(this), P, {
                get: aFunction(getter),
                enumerable: true,
                configurable: true
              });
            }
          });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-forced-pam':
          '../../node_modules/core-js/modules/_object-forced-pam.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.define-setter.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var toObject = require('./_to-object');
        var aFunction = require('./_a-function');
        var $defineProperty = require('./_object-dp');

        // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
        require('./_descriptors') &&
          $export($export.P + require('./_object-forced-pam'), 'Object', {
            __defineSetter__: function __defineSetter__(P, setter) {
              $defineProperty.f(toObject(this), P, {
                set: aFunction(setter),
                enumerable: true,
                configurable: true
              });
            }
          });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-forced-pam':
          '../../node_modules/core-js/modules/_object-forced-pam.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-to-array.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('./_descriptors');
        var getKeys = require('./_object-keys');
        var toIObject = require('./_to-iobject');
        var isEnum = require('./_object-pie').f;
        module.exports = function(isEntries) {
          return function(it) {
            var O = toIObject(it);
            var keys = getKeys(O);
            var length = keys.length;
            var i = 0;
            var result = [];
            var key;
            while (length > i) {
              key = keys[i++];
              if (!DESCRIPTORS || isEnum.call(O, key)) {
                result.push(isEntries ? [key, O[key]] : O[key]);
              }
            }
            return result;
          };
        };
      },
      {
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_object-pie': '../../node_modules/core-js/modules/_object-pie.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.entries.js': [
      function(require, module, exports) {
        // https://github.com/tc39/proposal-object-values-entries
        var $export = require('./_export');
        var $entries = require('./_object-to-array')(true);

        $export($export.S, 'Object', {
          entries: function entries(it) {
            return $entries(it);
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-to-array':
          '../../node_modules/core-js/modules/_object-to-array.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-sap.js': [
      function(require, module, exports) {
        // most Object methods by ES6 should accept primitives
        var $export = require('./_export');
        var core = require('./_core');
        var fails = require('./_fails');
        module.exports = function(KEY, exec) {
          var fn = (core.Object || {})[KEY] || Object[KEY];
          var exp = {};
          exp[KEY] = exec(fn);
          $export(
            $export.S +
              $export.F *
                fails(function() {
                  fn(1);
                }),
            'Object',
            exp
          );
        };
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.freeze.js': [
      function(require, module, exports) {
        // 19.1.2.5 Object.freeze(O)
        var isObject = require('./_is-object');
        var meta = require('./_meta').onFreeze;

        require('./_object-sap')('freeze', function($freeze) {
          return function freeze(it) {
            return $freeze && isObject(it) ? $freeze(meta(it)) : it;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js': [
      function(require, module, exports) {
        // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        var toIObject = require('./_to-iobject');
        var $getOwnPropertyDescriptor = require('./_object-gopd').f;

        require('./_object-sap')('getOwnPropertyDescriptor', function() {
          return function getOwnPropertyDescriptor(it, key) {
            return $getOwnPropertyDescriptor(toIObject(it), key);
          };
        });
      },
      {
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/_own-keys.js': [
      function(require, module, exports) {
        // all object keys, includes non-enumerable and symbols
        var gOPN = require('./_object-gopn');
        var gOPS = require('./_object-gops');
        var anObject = require('./_an-object');
        var Reflect = require('./_global').Reflect;
        module.exports =
          (Reflect && Reflect.ownKeys) ||
          function ownKeys(it) {
            var keys = gOPN.f(anObject(it));
            var getSymbols = gOPS.f;
            return getSymbols ? keys.concat(getSymbols(it)) : keys;
          };
      },
      {
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './_object-gops': '../../node_modules/core-js/modules/_object-gops.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js': [
      function(require, module, exports) {
        // https://github.com/tc39/proposal-object-getownpropertydescriptors
        var $export = require('./_export');
        var ownKeys = require('./_own-keys');
        var toIObject = require('./_to-iobject');
        var gOPD = require('./_object-gopd');
        var createProperty = require('./_create-property');

        $export($export.S, 'Object', {
          getOwnPropertyDescriptors: function getOwnPropertyDescriptors(
            object
          ) {
            var O = toIObject(object);
            var getDesc = gOPD.f;
            var keys = ownKeys(O);
            var result = {};
            var i = 0;
            var key, desc;
            while (keys.length > i) {
              desc = getDesc(O, (key = keys[i++]));
              if (desc !== undefined) createProperty(result, key, desc);
            }
            return result;
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_own-keys': '../../node_modules/core-js/modules/_own-keys.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_create-property':
          '../../node_modules/core-js/modules/_create-property.js'
      }
    ],
    '../../node_modules/core-js/modules/_object-gopn-ext.js': [
      function(require, module, exports) {
        // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        var toIObject = require('./_to-iobject');
        var gOPN = require('./_object-gopn').f;
        var toString = {}.toString;

        var windowNames =
          typeof window == 'object' && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [];

        var getWindowNames = function(it) {
          try {
            return gOPN(it);
          } catch (e) {
            return windowNames.slice();
          }
        };

        module.exports.f = function getOwnPropertyNames(it) {
          return windowNames && toString.call(it) == '[object Window]'
            ? getWindowNames(it)
            : gOPN(toIObject(it));
        };
      },
      {
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.get-own-property-names.js': [
      function(require, module, exports) {
        // 19.1.2.7 Object.getOwnPropertyNames(O)
        require('./_object-sap')('getOwnPropertyNames', function() {
          return require('./_object-gopn-ext').f;
        });
      },
      {
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js',
        './_object-gopn-ext':
          '../../node_modules/core-js/modules/_object-gopn-ext.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.get-prototype-of.js': [
      function(require, module, exports) {
        // 19.1.2.9 Object.getPrototypeOf(O)
        var toObject = require('./_to-object');
        var $getPrototypeOf = require('./_object-gpo');

        require('./_object-sap')('getPrototypeOf', function() {
          return function getPrototypeOf(it) {
            return $getPrototypeOf(toObject(it));
          };
        });
      },
      {
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.lookup-getter.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var toObject = require('./_to-object');
        var toPrimitive = require('./_to-primitive');
        var getPrototypeOf = require('./_object-gpo');
        var getOwnPropertyDescriptor = require('./_object-gopd').f;

        // B.2.2.4 Object.prototype.__lookupGetter__(P)
        require('./_descriptors') &&
          $export($export.P + require('./_object-forced-pam'), 'Object', {
            __lookupGetter__: function __lookupGetter__(P) {
              var O = toObject(this);
              var K = toPrimitive(P, true);
              var D;
              do {
                if ((D = getOwnPropertyDescriptor(O, K))) return D.get;
              } while ((O = getPrototypeOf(O)));
            }
          });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-forced-pam':
          '../../node_modules/core-js/modules/_object-forced-pam.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.lookup-setter.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var toObject = require('./_to-object');
        var toPrimitive = require('./_to-primitive');
        var getPrototypeOf = require('./_object-gpo');
        var getOwnPropertyDescriptor = require('./_object-gopd').f;

        // B.2.2.5 Object.prototype.__lookupSetter__(P)
        require('./_descriptors') &&
          $export($export.P + require('./_object-forced-pam'), 'Object', {
            __lookupSetter__: function __lookupSetter__(P) {
              var O = toObject(this);
              var K = toPrimitive(P, true);
              var D;
              do {
                if ((D = getOwnPropertyDescriptor(O, K))) return D.set;
              } while ((O = getPrototypeOf(O)));
            }
          });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-forced-pam':
          '../../node_modules/core-js/modules/_object-forced-pam.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.prevent-extensions.js': [
      function(require, module, exports) {
        // 19.1.2.15 Object.preventExtensions(O)
        var isObject = require('./_is-object');
        var meta = require('./_meta').onFreeze;

        require('./_object-sap')('preventExtensions', function(
          $preventExtensions
        ) {
          return function preventExtensions(it) {
            return $preventExtensions && isObject(it)
              ? $preventExtensions(meta(it))
              : it;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.to-string.js': [
      function(require, module, exports) {
        'use strict';
        // 19.1.3.6 Object.prototype.toString()
        var classof = require('./_classof');
        var test = {};
        test[require('./_wks')('toStringTag')] = 'z';
        if (test + '' != '[object z]') {
          require('./_redefine')(
            Object.prototype,
            'toString',
            function toString() {
              return '[object ' + classof(this) + ']';
            },
            true
          );
        }
      },
      {
        './_classof': '../../node_modules/core-js/modules/_classof.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js'
      }
    ],
    '../../node_modules/core-js/modules/_same-value.js': [
      function(require, module, exports) {
        // 7.2.9 SameValue(x, y)
        module.exports =
          Object.is ||
          function is(x, y) {
            // eslint-disable-next-line no-self-compare
            return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
          };
      },
      {}
    ],
    '../../node_modules/core-js/modules/es6.object.is.js': [
      function(require, module, exports) {
        // 19.1.3.10 Object.is(value1, value2)
        var $export = require('./_export');
        $export($export.S, 'Object', { is: require('./_same-value') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_same-value': '../../node_modules/core-js/modules/_same-value.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.is-frozen.js': [
      function(require, module, exports) {
        // 19.1.2.12 Object.isFrozen(O)
        var isObject = require('./_is-object');

        require('./_object-sap')('isFrozen', function($isFrozen) {
          return function isFrozen(it) {
            return isObject(it) ? ($isFrozen ? $isFrozen(it) : false) : true;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.is-sealed.js': [
      function(require, module, exports) {
        // 19.1.2.13 Object.isSealed(O)
        var isObject = require('./_is-object');

        require('./_object-sap')('isSealed', function($isSealed) {
          return function isSealed(it) {
            return isObject(it) ? ($isSealed ? $isSealed(it) : false) : true;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.is-extensible.js': [
      function(require, module, exports) {
        // 19.1.2.11 Object.isExtensible(O)
        var isObject = require('./_is-object');

        require('./_object-sap')('isExtensible', function($isExtensible) {
          return function isExtensible(it) {
            return isObject(it)
              ? $isExtensible
                ? $isExtensible(it)
                : true
              : false;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.keys.js': [
      function(require, module, exports) {
        // 19.1.2.14 Object.keys(O)
        var toObject = require('./_to-object');
        var $keys = require('./_object-keys');

        require('./_object-sap')('keys', function() {
          return function keys(it) {
            return $keys(toObject(it));
          };
        });
      },
      {
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.object.seal.js': [
      function(require, module, exports) {
        // 19.1.2.17 Object.seal(O)
        var isObject = require('./_is-object');
        var meta = require('./_meta').onFreeze;

        require('./_object-sap')('seal', function($seal) {
          return function seal(it) {
            return $seal && isObject(it) ? $seal(meta(it)) : it;
          };
        });
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_object-sap': '../../node_modules/core-js/modules/_object-sap.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.object.values.js': [
      function(require, module, exports) {
        // https://github.com/tc39/proposal-object-values-entries
        var $export = require('./_export');
        var $values = require('./_object-to-array')(false);

        $export($export.S, 'Object', {
          values: function values(it) {
            return $values(it);
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-to-array':
          '../../node_modules/core-js/modules/_object-to-array.js'
      }
    ],
    '../../node_modules/core-js/modules/_species-constructor.js': [
      function(require, module, exports) {
        // 7.3.20 SpeciesConstructor(O, defaultConstructor)
        var anObject = require('./_an-object');
        var aFunction = require('./_a-function');
        var SPECIES = require('./_wks')('species');
        module.exports = function(O, D) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined || (S = anObject(C)[SPECIES]) == undefined
            ? D
            : aFunction(S);
        };
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_invoke.js': [
      function(require, module, exports) {
        // fast apply, http://jsperf.lnkit.com/fast-apply/5
        module.exports = function(fn, args, that) {
          var un = that === undefined;
          switch (args.length) {
            case 0:
              return un ? fn() : fn.call(that);
            case 1:
              return un ? fn(args[0]) : fn.call(that, args[0]);
            case 2:
              return un
                ? fn(args[0], args[1])
                : fn.call(that, args[0], args[1]);
            case 3:
              return un
                ? fn(args[0], args[1], args[2])
                : fn.call(that, args[0], args[1], args[2]);
            case 4:
              return un
                ? fn(args[0], args[1], args[2], args[3])
                : fn.call(that, args[0], args[1], args[2], args[3]);
          }
          return fn.apply(that, args);
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_task.js': [
      function(require, module, exports) {
        var ctx = require('./_ctx');
        var invoke = require('./_invoke');
        var html = require('./_html');
        var cel = require('./_dom-create');
        var global = require('./_global');
        var process = global.process;
        var setTask = global.setImmediate;
        var clearTask = global.clearImmediate;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var defer, channel, port;
        var run = function() {
          var id = +this;
          // eslint-disable-next-line no-prototype-builtins
          if (queue.hasOwnProperty(id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };
        var listener = function(event) {
          run.call(event.data);
        };
        // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!setTask || !clearTask) {
          setTask = function setImmediate(fn) {
            var args = [];
            var i = 1;
            while (arguments.length > i) args.push(arguments[i++]);
            queue[++counter] = function() {
              // eslint-disable-next-line no-new-func
              invoke(typeof fn == 'function' ? fn : Function(fn), args);
            };
            defer(counter);
            return counter;
          };
          clearTask = function clearImmediate(id) {
            delete queue[id];
          };
          // Node.js 0.8-
          if (require('./_cof')(process) == 'process') {
            defer = function(id) {
              process.nextTick(ctx(run, id, 1));
            };
            // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function(id) {
              Dispatch.now(ctx(run, id, 1));
            };
            // Browsers with MessageChannel, includes WebWorkers
          } else if (MessageChannel) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = listener;
            defer = ctx(port.postMessage, port, 1);
            // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (
            global.addEventListener &&
            typeof postMessage == 'function' &&
            !global.importScripts
          ) {
            defer = function(id) {
              global.postMessage(id + '', '*');
            };
            global.addEventListener('message', listener, false);
            // IE8-
          } else if (ONREADYSTATECHANGE in cel('script')) {
            defer = function(id) {
              html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function() {
                html.removeChild(this);
                run.call(id);
              };
            };
            // Rest old browsers
          } else {
            defer = function(id) {
              setTimeout(ctx(run, id, 1), 0);
            };
          }
        }
        module.exports = {
          set: setTask,
          clear: clearTask
        };
      },
      {
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_invoke': '../../node_modules/core-js/modules/_invoke.js',
        './_html': '../../node_modules/core-js/modules/_html.js',
        './_dom-create': '../../node_modules/core-js/modules/_dom-create.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_cof': '../../node_modules/core-js/modules/_cof.js'
      }
    ],
    '../../node_modules/core-js/modules/_microtask.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var macrotask = require('./_task').set;
        var Observer = global.MutationObserver || global.WebKitMutationObserver;
        var process = global.process;
        var Promise = global.Promise;
        var isNode = require('./_cof')(process) == 'process';

        module.exports = function() {
          var head, last, notify;

          var flush = function() {
            var parent, fn;
            if (isNode && (parent = process.domain)) parent.exit();
            while (head) {
              fn = head.fn;
              head = head.next;
              try {
                fn();
              } catch (e) {
                if (head) notify();
                else last = undefined;
                throw e;
              }
            }
            last = undefined;
            if (parent) parent.enter();
          };

          // Node.js
          if (isNode) {
            notify = function() {
              process.nextTick(flush);
            };
            // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
          } else if (
            Observer &&
            !(global.navigator && global.navigator.standalone)
          ) {
            var toggle = true;
            var node = document.createTextNode('');
            new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
            notify = function() {
              node.data = toggle = !toggle;
            };
            // environments with maybe non-completely correct, but existent Promise
          } else if (Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            var promise = Promise.resolve(undefined);
            notify = function() {
              promise.then(flush);
            };
            // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessag
            // - onreadystatechange
            // - setTimeout
          } else {
            notify = function() {
              // strange IE + webpack dev server bug - use .call(global)
              macrotask.call(global, flush);
            };
          }

          return function(fn) {
            var task = { fn: fn, next: undefined };
            if (last) last.next = task;
            if (!head) {
              head = task;
              notify();
            }
            last = task;
          };
        };
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_task': '../../node_modules/core-js/modules/_task.js',
        './_cof': '../../node_modules/core-js/modules/_cof.js'
      }
    ],
    '../../node_modules/core-js/modules/_new-promise-capability.js': [
      function(require, module, exports) {
        'use strict';
        // 25.4.1.5 NewPromiseCapability(C)
        var aFunction = require('./_a-function');

        function PromiseCapability(C) {
          var resolve, reject;
          this.promise = new C(function($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined)
              throw TypeError('Bad Promise constructor');
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aFunction(resolve);
          this.reject = aFunction(reject);
        }

        module.exports.f = function(C) {
          return new PromiseCapability(C);
        };
      },
      { './_a-function': '../../node_modules/core-js/modules/_a-function.js' }
    ],
    '../../node_modules/core-js/modules/_perform.js': [
      function(require, module, exports) {
        module.exports = function(exec) {
          try {
            return { e: false, v: exec() };
          } catch (e) {
            return { e: true, v: e };
          }
        };
      },
      {}
    ],
    '../../node_modules/core-js/modules/_user-agent.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var navigator = global.navigator;

        module.exports = (navigator && navigator.userAgent) || '';
      },
      { './_global': '../../node_modules/core-js/modules/_global.js' }
    ],
    '../../node_modules/core-js/modules/_promise-resolve.js': [
      function(require, module, exports) {
        var anObject = require('./_an-object');
        var isObject = require('./_is-object');
        var newPromiseCapability = require('./_new-promise-capability');

        module.exports = function(C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_new-promise-capability':
          '../../node_modules/core-js/modules/_new-promise-capability.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.promise.js': [
      function(require, module, exports) {
        'use strict';
        var LIBRARY = require('./_library');
        var global = require('./_global');
        var ctx = require('./_ctx');
        var classof = require('./_classof');
        var $export = require('./_export');
        var isObject = require('./_is-object');
        var aFunction = require('./_a-function');
        var anInstance = require('./_an-instance');
        var forOf = require('./_for-of');
        var speciesConstructor = require('./_species-constructor');
        var task = require('./_task').set;
        var microtask = require('./_microtask')();
        var newPromiseCapabilityModule = require('./_new-promise-capability');
        var perform = require('./_perform');
        var userAgent = require('./_user-agent');
        var promiseResolve = require('./_promise-resolve');
        var PROMISE = 'Promise';
        var TypeError = global.TypeError;
        var process = global.process;
        var versions = process && process.versions;
        var v8 = (versions && versions.v8) || '';
        var $Promise = global[PROMISE];
        var isNode = classof(process) == 'process';
        var empty = function() {
          /* empty */
        };
        var Internal,
          newGenericPromiseCapability,
          OwnPromiseCapability,
          Wrapper;
        var newPromiseCapability = (newGenericPromiseCapability =
          newPromiseCapabilityModule.f);

        var USE_NATIVE = !!(function() {
          try {
            // correct subclassing with @@species support
            var promise = $Promise.resolve(1);
            var FakePromise = ((promise.constructor = {})[
              require('./_wks')('species')
            ] = function(exec) {
              exec(empty, empty);
            });
            // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
            return (
              (isNode || typeof PromiseRejectionEvent == 'function') &&
              promise.then(empty) instanceof FakePromise &&
              // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
              // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
              // we can't detect it synchronously, so just check versions
              v8.indexOf('6.6') !== 0 &&
              userAgent.indexOf('Chrome/66') === -1
            );
          } catch (e) {
            /* empty */
          }
        })();

        // helpers
        var isThenable = function(it) {
          var then;
          return isObject(it) && typeof (then = it.then) == 'function'
            ? then
            : false;
        };
        var notify = function(promise, isReject) {
          if (promise._n) return;
          promise._n = true;
          var chain = promise._c;
          microtask(function() {
            var value = promise._v;
            var ok = promise._s == 1;
            var i = 0;
            var run = function(reaction) {
              var handler = ok ? reaction.ok : reaction.fail;
              var resolve = reaction.resolve;
              var reject = reaction.reject;
              var domain = reaction.domain;
              var result, then, exited;
              try {
                if (handler) {
                  if (!ok) {
                    if (promise._h == 2) onHandleUnhandled(promise);
                    promise._h = 1;
                  }
                  if (handler === true) result = value;
                  else {
                    if (domain) domain.enter();
                    result = handler(value); // may throw
                    if (domain) {
                      domain.exit();
                      exited = true;
                    }
                  }
                  if (result === reaction.promise) {
                    reject(TypeError('Promise-chain cycle'));
                  } else if ((then = isThenable(result))) {
                    then.call(result, resolve, reject);
                  } else resolve(result);
                } else reject(value);
              } catch (e) {
                if (domain && !exited) domain.exit();
                reject(e);
              }
            };
            while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
            promise._c = [];
            promise._n = false;
            if (isReject && !promise._h) onUnhandled(promise);
          });
        };
        var onUnhandled = function(promise) {
          task.call(global, function() {
            var value = promise._v;
            var unhandled = isUnhandled(promise);
            var result, handler, console;
            if (unhandled) {
              result = perform(function() {
                if (isNode) {
                  process.emit('unhandledRejection', value, promise);
                } else if ((handler = global.onunhandledrejection)) {
                  handler({ promise: promise, reason: value });
                } else if ((console = global.console) && console.error) {
                  console.error('Unhandled promise rejection', value);
                }
              });
              // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              promise._h = isNode || isUnhandled(promise) ? 2 : 1;
            }
            promise._a = undefined;
            if (unhandled && result.e) throw result.v;
          });
        };
        var isUnhandled = function(promise) {
          return promise._h !== 1 && (promise._a || promise._c).length === 0;
        };
        var onHandleUnhandled = function(promise) {
          task.call(global, function() {
            var handler;
            if (isNode) {
              process.emit('rejectionHandled', promise);
            } else if ((handler = global.onrejectionhandled)) {
              handler({ promise: promise, reason: promise._v });
            }
          });
        };
        var $reject = function(value) {
          var promise = this;
          if (promise._d) return;
          promise._d = true;
          promise = promise._w || promise; // unwrap
          promise._v = value;
          promise._s = 2;
          if (!promise._a) promise._a = promise._c.slice();
          notify(promise, true);
        };
        var $resolve = function(value) {
          var promise = this;
          var then;
          if (promise._d) return;
          promise._d = true;
          promise = promise._w || promise; // unwrap
          try {
            if (promise === value)
              throw TypeError("Promise can't be resolved itself");
            if ((then = isThenable(value))) {
              microtask(function() {
                var wrapper = { _w: promise, _d: false }; // wrap
                try {
                  then.call(
                    value,
                    ctx($resolve, wrapper, 1),
                    ctx($reject, wrapper, 1)
                  );
                } catch (e) {
                  $reject.call(wrapper, e);
                }
              });
            } else {
              promise._v = value;
              promise._s = 1;
              notify(promise, false);
            }
          } catch (e) {
            $reject.call({ _w: promise, _d: false }, e); // wrap
          }
        };

        // constructor polyfill
        if (!USE_NATIVE) {
          // 25.4.3.1 Promise(executor)
          $Promise = function Promise(executor) {
            anInstance(this, $Promise, PROMISE, '_h');
            aFunction(executor);
            Internal.call(this);
            try {
              executor(ctx($resolve, this, 1), ctx($reject, this, 1));
            } catch (err) {
              $reject.call(this, err);
            }
          };
          // eslint-disable-next-line no-unused-vars
          Internal = function Promise(executor) {
            this._c = []; // <- awaiting reactions
            this._a = undefined; // <- checked in isUnhandled reactions
            this._s = 0; // <- state
            this._d = false; // <- done
            this._v = undefined; // <- value
            this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
            this._n = false; // <- notify
          };
          Internal.prototype = require('./_redefine-all')($Promise.prototype, {
            // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
            then: function then(onFulfilled, onRejected) {
              var reaction = newPromiseCapability(
                speciesConstructor(this, $Promise)
              );
              reaction.ok =
                typeof onFulfilled == 'function' ? onFulfilled : true;
              reaction.fail = typeof onRejected == 'function' && onRejected;
              reaction.domain = isNode ? process.domain : undefined;
              this._c.push(reaction);
              if (this._a) this._a.push(reaction);
              if (this._s) notify(this, false);
              return reaction.promise;
            },
            // 25.4.5.1 Promise.prototype.catch(onRejected)
            catch: function(onRejected) {
              return this.then(undefined, onRejected);
            }
          });
          OwnPromiseCapability = function() {
            var promise = new Internal();
            this.promise = promise;
            this.resolve = ctx($resolve, promise, 1);
            this.reject = ctx($reject, promise, 1);
          };
          newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
            return C === $Promise || C === Wrapper
              ? new OwnPromiseCapability(C)
              : newGenericPromiseCapability(C);
          };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {
          Promise: $Promise
        });
        require('./_set-to-string-tag')($Promise, PROMISE);
        require('./_set-species')(PROMISE);
        Wrapper = require('./_core')[PROMISE];

        // statics
        $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
          // 25.4.4.5 Promise.reject(r)
          reject: function reject(r) {
            var capability = newPromiseCapability(this);
            var $$reject = capability.reject;
            $$reject(r);
            return capability.promise;
          }
        });
        $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
          // 25.4.4.6 Promise.resolve(x)
          resolve: function resolve(x) {
            return promiseResolve(
              LIBRARY && this === Wrapper ? $Promise : this,
              x
            );
          }
        });
        $export(
          $export.S +
            $export.F *
              !(
                USE_NATIVE &&
                require('./_iter-detect')(function(iter) {
                  $Promise.all(iter)['catch'](empty);
                })
              ),
          PROMISE,
          {
            // 25.4.4.1 Promise.all(iterable)
            all: function all(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function() {
                var values = [];
                var index = 0;
                var remaining = 1;
                forOf(iterable, false, function(promise) {
                  var $index = index++;
                  var alreadyCalled = false;
                  values.push(undefined);
                  remaining++;
                  C.resolve(promise).then(function(value) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[$index] = value;
                    --remaining || resolve(values);
                  }, reject);
                });
                --remaining || resolve(values);
              });
              if (result.e) reject(result.v);
              return capability.promise;
            },
            // 25.4.4.4 Promise.race(iterable)
            race: function race(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var reject = capability.reject;
              var result = perform(function() {
                forOf(iterable, false, function(promise) {
                  C.resolve(promise).then(capability.resolve, reject);
                });
              });
              if (result.e) reject(result.v);
              return capability.promise;
            }
          }
        );
      },
      {
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_classof': '../../node_modules/core-js/modules/_classof.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_for-of': '../../node_modules/core-js/modules/_for-of.js',
        './_species-constructor':
          '../../node_modules/core-js/modules/_species-constructor.js',
        './_task': '../../node_modules/core-js/modules/_task.js',
        './_microtask': '../../node_modules/core-js/modules/_microtask.js',
        './_new-promise-capability':
          '../../node_modules/core-js/modules/_new-promise-capability.js',
        './_perform': '../../node_modules/core-js/modules/_perform.js',
        './_user-agent': '../../node_modules/core-js/modules/_user-agent.js',
        './_promise-resolve':
          '../../node_modules/core-js/modules/_promise-resolve.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js',
        './_set-species': '../../node_modules/core-js/modules/_set-species.js',
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_iter-detect': '../../node_modules/core-js/modules/_iter-detect.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.promise.finally.js': [
      function(require, module, exports) {
        // https://github.com/tc39/proposal-promise-finally
        'use strict';
        var $export = require('./_export');
        var core = require('./_core');
        var global = require('./_global');
        var speciesConstructor = require('./_species-constructor');
        var promiseResolve = require('./_promise-resolve');

        $export($export.P + $export.R, 'Promise', {
          finally: function(onFinally) {
            var C = speciesConstructor(this, core.Promise || global.Promise);
            var isFunction = typeof onFinally == 'function';
            return this.then(
              isFunction
                ? function(x) {
                    return promiseResolve(C, onFinally()).then(function() {
                      return x;
                    });
                  }
                : onFinally,
              isFunction
                ? function(e) {
                    return promiseResolve(C, onFinally()).then(function() {
                      throw e;
                    });
                  }
                : onFinally
            );
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_species-constructor':
          '../../node_modules/core-js/modules/_species-constructor.js',
        './_promise-resolve':
          '../../node_modules/core-js/modules/_promise-resolve.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.apply.js': [
      function(require, module, exports) {
        // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
        var $export = require('./_export');
        var aFunction = require('./_a-function');
        var anObject = require('./_an-object');
        var rApply = (require('./_global').Reflect || {}).apply;
        var fApply = Function.apply;
        // MS Edge argumentsList argument is optional
        $export(
          $export.S +
            $export.F *
              !require('./_fails')(function() {
                rApply(function() {
                  /* empty */
                });
              }),
          'Reflect',
          {
            apply: function apply(target, thisArgument, argumentsList) {
              var T = aFunction(target);
              var L = anObject(argumentsList);
              return rApply
                ? rApply(T, thisArgument, L)
                : fApply.call(T, thisArgument, L);
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/_bind.js': [
      function(require, module, exports) {
        'use strict';
        var aFunction = require('./_a-function');
        var isObject = require('./_is-object');
        var invoke = require('./_invoke');
        var arraySlice = [].slice;
        var factories = {};

        var construct = function(F, len, args) {
          if (!(len in factories)) {
            for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
            // eslint-disable-next-line no-new-func
            factories[len] = Function(
              'F,a',
              'return new F(' + n.join(',') + ')'
            );
          }
          return factories[len](F, args);
        };

        module.exports =
          Function.bind ||
          function bind(that /* , ...args */) {
            var fn = aFunction(this);
            var partArgs = arraySlice.call(arguments, 1);
            var bound = function(/* args... */) {
              var args = partArgs.concat(arraySlice.call(arguments));
              return this instanceof bound
                ? construct(fn, args.length, args)
                : invoke(fn, args, that);
            };
            if (isObject(fn.prototype)) bound.prototype = fn.prototype;
            return bound;
          };
      },
      {
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_invoke': '../../node_modules/core-js/modules/_invoke.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.construct.js': [
      function(require, module, exports) {
        // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
        var $export = require('./_export');
        var create = require('./_object-create');
        var aFunction = require('./_a-function');
        var anObject = require('./_an-object');
        var isObject = require('./_is-object');
        var fails = require('./_fails');
        var bind = require('./_bind');
        var rConstruct = (require('./_global').Reflect || {}).construct;

        // MS Edge supports only 2 arguments and argumentsList argument is optional
        // FF Nightly sets third argument as `new.target`, but does not create `this` from it
        var NEW_TARGET_BUG = fails(function() {
          function F() {
            /* empty */
          }
          return !(
            rConstruct(
              function() {
                /* empty */
              },
              [],
              F
            ) instanceof F
          );
        });
        var ARGS_BUG = !fails(function() {
          rConstruct(function() {
            /* empty */
          });
        });

        $export(
          $export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG),
          'Reflect',
          {
            construct: function construct(Target, args /* , newTarget */) {
              aFunction(Target);
              anObject(args);
              var newTarget =
                arguments.length < 3 ? Target : aFunction(arguments[2]);
              if (ARGS_BUG && !NEW_TARGET_BUG)
                return rConstruct(Target, args, newTarget);
              if (Target == newTarget) {
                // w/o altered newTarget, optimization for 0-4 arguments
                switch (args.length) {
                  case 0:
                    return new Target();
                  case 1:
                    return new Target(args[0]);
                  case 2:
                    return new Target(args[0], args[1]);
                  case 3:
                    return new Target(args[0], args[1], args[2]);
                  case 4:
                    return new Target(args[0], args[1], args[2], args[3]);
                }
                // w/o altered newTarget, lot of arguments case
                var $args = [null];
                $args.push.apply($args, args);
                return new (bind.apply(Target, $args))();
              }
              // with altered newTarget, not support built-in constructors
              var proto = newTarget.prototype;
              var instance = create(isObject(proto) ? proto : Object.prototype);
              var result = Function.apply.call(Target, instance, args);
              return isObject(result) ? result : instance;
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_a-function': '../../node_modules/core-js/modules/_a-function.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_bind': '../../node_modules/core-js/modules/_bind.js',
        './_global': '../../node_modules/core-js/modules/_global.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.define-property.js': [
      function(require, module, exports) {
        // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
        var dP = require('./_object-dp');
        var $export = require('./_export');
        var anObject = require('./_an-object');
        var toPrimitive = require('./_to-primitive');

        // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
        $export(
          $export.S +
            $export.F *
              require('./_fails')(function() {
                // eslint-disable-next-line no-undef
                Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, {
                  value: 2
                });
              }),
          'Reflect',
          {
            defineProperty: function defineProperty(
              target,
              propertyKey,
              attributes
            ) {
              anObject(target);
              propertyKey = toPrimitive(propertyKey, true);
              anObject(attributes);
              try {
                dP.f(target, propertyKey, attributes);
                return true;
              } catch (e) {
                return false;
              }
            }
          }
        );
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.delete-property.js': [
      function(require, module, exports) {
        // 26.1.4 Reflect.deleteProperty(target, propertyKey)
        var $export = require('./_export');
        var gOPD = require('./_object-gopd').f;
        var anObject = require('./_an-object');

        $export($export.S, 'Reflect', {
          deleteProperty: function deleteProperty(target, propertyKey) {
            var desc = gOPD(anObject(target), propertyKey);
            return desc && !desc.configurable
              ? false
              : delete target[propertyKey];
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.get.js': [
      function(require, module, exports) {
        // 26.1.6 Reflect.get(target, propertyKey [, receiver])
        var gOPD = require('./_object-gopd');
        var getPrototypeOf = require('./_object-gpo');
        var has = require('./_has');
        var $export = require('./_export');
        var isObject = require('./_is-object');
        var anObject = require('./_an-object');

        function get(target, propertyKey /* , receiver */) {
          var receiver = arguments.length < 3 ? target : arguments[2];
          var desc, proto;
          if (anObject(target) === receiver) return target[propertyKey];
          if ((desc = gOPD.f(target, propertyKey)))
            return has(desc, 'value')
              ? desc.value
              : desc.get !== undefined
              ? desc.get.call(receiver)
              : undefined;
          if (isObject((proto = getPrototypeOf(target))))
            return get(proto, propertyKey, receiver);
        }

        $export($export.S, 'Reflect', { get: get });
      },
      {
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js': [
      function(require, module, exports) {
        // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
        var gOPD = require('./_object-gopd');
        var $export = require('./_export');
        var anObject = require('./_an-object');

        $export($export.S, 'Reflect', {
          getOwnPropertyDescriptor: function getOwnPropertyDescriptor(
            target,
            propertyKey
          ) {
            return gOPD.f(anObject(target), propertyKey);
          }
        });
      },
      {
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js': [
      function(require, module, exports) {
        // 26.1.8 Reflect.getPrototypeOf(target)
        var $export = require('./_export');
        var getProto = require('./_object-gpo');
        var anObject = require('./_an-object');

        $export($export.S, 'Reflect', {
          getPrototypeOf: function getPrototypeOf(target) {
            return getProto(anObject(target));
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.has.js': [
      function(require, module, exports) {
        // 26.1.9 Reflect.has(target, propertyKey)
        var $export = require('./_export');

        $export($export.S, 'Reflect', {
          has: function has(target, propertyKey) {
            return propertyKey in target;
          }
        });
      },
      { './_export': '../../node_modules/core-js/modules/_export.js' }
    ],
    '../../node_modules/core-js/modules/es6.reflect.is-extensible.js': [
      function(require, module, exports) {
        // 26.1.10 Reflect.isExtensible(target)
        var $export = require('./_export');
        var anObject = require('./_an-object');
        var $isExtensible = Object.isExtensible;

        $export($export.S, 'Reflect', {
          isExtensible: function isExtensible(target) {
            anObject(target);
            return $isExtensible ? $isExtensible(target) : true;
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.own-keys.js': [
      function(require, module, exports) {
        // 26.1.11 Reflect.ownKeys(target)
        var $export = require('./_export');

        $export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_own-keys': '../../node_modules/core-js/modules/_own-keys.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js': [
      function(require, module, exports) {
        // 26.1.12 Reflect.preventExtensions(target)
        var $export = require('./_export');
        var anObject = require('./_an-object');
        var $preventExtensions = Object.preventExtensions;

        $export($export.S, 'Reflect', {
          preventExtensions: function preventExtensions(target) {
            anObject(target);
            try {
              if ($preventExtensions) $preventExtensions(target);
              return true;
            } catch (e) {
              return false;
            }
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.set.js': [
      function(require, module, exports) {
        // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
        var dP = require('./_object-dp');
        var gOPD = require('./_object-gopd');
        var getPrototypeOf = require('./_object-gpo');
        var has = require('./_has');
        var $export = require('./_export');
        var createDesc = require('./_property-desc');
        var anObject = require('./_an-object');
        var isObject = require('./_is-object');

        function set(target, propertyKey, V /* , receiver */) {
          var receiver = arguments.length < 4 ? target : arguments[3];
          var ownDesc = gOPD.f(anObject(target), propertyKey);
          var existingDescriptor, proto;
          if (!ownDesc) {
            if (isObject((proto = getPrototypeOf(target)))) {
              return set(proto, propertyKey, V, receiver);
            }
            ownDesc = createDesc(0);
          }
          if (has(ownDesc, 'value')) {
            if (ownDesc.writable === false || !isObject(receiver)) return false;
            if ((existingDescriptor = gOPD.f(receiver, propertyKey))) {
              if (
                existingDescriptor.get ||
                existingDescriptor.set ||
                existingDescriptor.writable === false
              )
                return false;
              existingDescriptor.value = V;
              dP.f(receiver, propertyKey, existingDescriptor);
            } else dP.f(receiver, propertyKey, createDesc(0, V));
            return true;
          }
          return ownDesc.set === undefined
            ? false
            : (ownDesc.set.call(receiver, V), true);
        }

        $export($export.S, 'Reflect', { set: set });
      },
      {
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js': [
      function(require, module, exports) {
        // 26.1.14 Reflect.setPrototypeOf(target, proto)
        var $export = require('./_export');
        var setProto = require('./_set-proto');

        if (setProto)
          $export($export.S, 'Reflect', {
            setPrototypeOf: function setPrototypeOf(target, proto) {
              setProto.check(target, proto);
              try {
                setProto.set(target, proto);
                return true;
              } catch (e) {
                return false;
              }
            }
          });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_set-proto': '../../node_modules/core-js/modules/_set-proto.js'
      }
    ],
    '../../node_modules/core-js/modules/_is-regexp.js': [
      function(require, module, exports) {
        // 7.2.8 IsRegExp(argument)
        var isObject = require('./_is-object');
        var cof = require('./_cof');
        var MATCH = require('./_wks')('match');
        module.exports = function(it) {
          var isRegExp;
          return (
            isObject(it) &&
            ((isRegExp = it[MATCH]) !== undefined
              ? !!isRegExp
              : cof(it) == 'RegExp')
          );
        };
      },
      {
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_cof': '../../node_modules/core-js/modules/_cof.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/core-js/modules/_flags.js': [
      function(require, module, exports) {
        'use strict';
        // 21.2.5.3 get RegExp.prototype.flags
        var anObject = require('./_an-object');
        module.exports = function() {
          var that = anObject(this);
          var result = '';
          if (that.global) result += 'g';
          if (that.ignoreCase) result += 'i';
          if (that.multiline) result += 'm';
          if (that.unicode) result += 'u';
          if (that.sticky) result += 'y';
          return result;
        };
      },
      { './_an-object': '../../node_modules/core-js/modules/_an-object.js' }
    ],
    '../../node_modules/core-js/modules/es6.regexp.constructor.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var inheritIfRequired = require('./_inherit-if-required');
        var dP = require('./_object-dp').f;
        var gOPN = require('./_object-gopn').f;
        var isRegExp = require('./_is-regexp');
        var $flags = require('./_flags');
        var $RegExp = global.RegExp;
        var Base = $RegExp;
        var proto = $RegExp.prototype;
        var re1 = /a/g;
        var re2 = /a/g;
        // "new" creates a new object, old webkit buggy here
        var CORRECT_NEW = new $RegExp(re1) !== re1;

        if (
          require('./_descriptors') &&
          (!CORRECT_NEW ||
            require('./_fails')(function() {
              re2[require('./_wks')('match')] = false;
              // RegExp constructor can alter flags and IsRegExp works correct with @@match
              return (
                $RegExp(re1) != re1 ||
                $RegExp(re2) == re2 ||
                $RegExp(re1, 'i') != '/a/i'
              );
            }))
        ) {
          $RegExp = function RegExp(p, f) {
            var tiRE = this instanceof $RegExp;
            var piRE = isRegExp(p);
            var fiU = f === undefined;
            return !tiRE && piRE && p.constructor === $RegExp && fiU
              ? p
              : inheritIfRequired(
                  CORRECT_NEW
                    ? new Base(piRE && !fiU ? p.source : p, f)
                    : Base(
                        (piRE = p instanceof $RegExp) ? p.source : p,
                        piRE && fiU ? $flags.call(p) : f
                      ),
                  tiRE ? this : proto,
                  $RegExp
                );
          };
          var proxy = function(key) {
            key in $RegExp ||
              dP($RegExp, key, {
                configurable: true,
                get: function() {
                  return Base[key];
                },
                set: function(it) {
                  Base[key] = it;
                }
              });
          };
          for (var keys = gOPN(Base), i = 0; keys.length > i; )
            proxy(keys[i++]);
          proto.constructor = $RegExp;
          $RegExp.prototype = proto;
          require('./_redefine')(global, 'RegExp', $RegExp);
        }

        require('./_set-species')('RegExp');
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_inherit-if-required':
          '../../node_modules/core-js/modules/_inherit-if-required.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './_is-regexp': '../../node_modules/core-js/modules/_is-regexp.js',
        './_flags': '../../node_modules/core-js/modules/_flags.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_set-species': '../../node_modules/core-js/modules/_set-species.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.flags.js': [
      function(require, module, exports) {
        // 21.2.5.3 get RegExp.prototype.flags()
        if (require('./_descriptors') && /./g.flags != 'g')
          require('./_object-dp').f(RegExp.prototype, 'flags', {
            configurable: true,
            get: require('./_flags')
          });
      },
      {
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_flags': '../../node_modules/core-js/modules/_flags.js'
      }
    ],
    '../../node_modules/core-js/modules/_string-at.js': [
      function(require, module, exports) {
        var toInteger = require('./_to-integer');
        var defined = require('./_defined');
        // true  -> String#at
        // false -> String#codePointAt
        module.exports = function(TO_STRING) {
          return function(that, pos) {
            var s = String(defined(that));
            var i = toInteger(pos);
            var l = s.length;
            var a, b;
            if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
            a = s.charCodeAt(i);
            return a < 0xd800 ||
              a > 0xdbff ||
              i + 1 === l ||
              (b = s.charCodeAt(i + 1)) < 0xdc00 ||
              b > 0xdfff
              ? TO_STRING
                ? s.charAt(i)
                : a
              : TO_STRING
              ? s.slice(i, i + 2)
              : ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000;
          };
        };
      },
      {
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/_advance-string-index.js': [
      function(require, module, exports) {
        'use strict';
        var at = require('./_string-at')(true);

        // `AdvanceStringIndex` abstract operation
        // https://tc39.github.io/ecma262/#sec-advancestringindex
        module.exports = function(S, index, unicode) {
          return index + (unicode ? at(S, index).length : 1);
        };
      },
      { './_string-at': '../../node_modules/core-js/modules/_string-at.js' }
    ],
    '../../node_modules/core-js/modules/_regexp-exec-abstract.js': [
      function(require, module, exports) {
        'use strict';

        var classof = require('./_classof');
        var builtinExec = RegExp.prototype.exec;

        // `RegExpExec` abstract operation
        // https://tc39.github.io/ecma262/#sec-regexpexec
        module.exports = function(R, S) {
          var exec = R.exec;
          if (typeof exec === 'function') {
            var result = exec.call(R, S);
            if (typeof result !== 'object') {
              throw new TypeError(
                'RegExp exec method returned something other than an Object or null'
              );
            }
            return result;
          }
          if (classof(R) !== 'RegExp') {
            throw new TypeError('RegExp#exec called on incompatible receiver');
          }
          return builtinExec.call(R, S);
        };
      },
      { './_classof': '../../node_modules/core-js/modules/_classof.js' }
    ],
    '../../node_modules/core-js/modules/_regexp-exec.js': [
      function(require, module, exports) {
        'use strict';

        var regexpFlags = require('./_flags');

        var nativeExec = RegExp.prototype.exec;
        // This always refers to the native implementation, because the
        // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
        // which loads this file before patching the method.
        var nativeReplace = String.prototype.replace;

        var patchedExec = nativeExec;

        var LAST_INDEX = 'lastIndex';

        var UPDATES_LAST_INDEX_WRONG = (function() {
          var re1 = /a/,
            re2 = /b*/g;
          nativeExec.call(re1, 'a');
          nativeExec.call(re2, 'a');
          return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
        })();

        // nonparticipating capturing group, copied from es5-shim's String#split patch.
        var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

        if (PATCH) {
          patchedExec = function exec(str) {
            var re = this;
            var lastIndex, reCopy, match, i;

            if (NPCG_INCLUDED) {
              reCopy = new RegExp(
                '^' + re.source + '$(?!\\s)',
                regexpFlags.call(re)
              );
            }
            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

            match = nativeExec.call(re, str);

            if (UPDATES_LAST_INDEX_WRONG && match) {
              re[LAST_INDEX] = re.global
                ? match.index + match[0].length
                : lastIndex;
            }
            if (NPCG_INCLUDED && match && match.length > 1) {
              // Fix browsers whose `exec` methods don't consistently return `undefined`
              // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
              // eslint-disable-next-line no-loop-func
              nativeReplace.call(match[0], reCopy, function() {
                for (i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undefined) match[i] = undefined;
                }
              });
            }

            return match;
          };
        }

        module.exports = patchedExec;
      },
      { './_flags': '../../node_modules/core-js/modules/_flags.js' }
    ],
    '../../node_modules/core-js/modules/es6.regexp.exec.js': [
      function(require, module, exports) {
        'use strict';
        var regexpExec = require('./_regexp-exec');
        require('./_export')(
          {
            target: 'RegExp',
            proto: true,
            forced: regexpExec !== /./.exec
          },
          {
            exec: regexpExec
          }
        );
      },
      {
        './_regexp-exec': '../../node_modules/core-js/modules/_regexp-exec.js',
        './_export': '../../node_modules/core-js/modules/_export.js'
      }
    ],
    '../../node_modules/core-js/modules/_fix-re-wks.js': [
      function(require, module, exports) {
        'use strict';
        require('./es6.regexp.exec');
        var redefine = require('./_redefine');
        var hide = require('./_hide');
        var fails = require('./_fails');
        var defined = require('./_defined');
        var wks = require('./_wks');
        var regexpExec = require('./_regexp-exec');

        var SPECIES = wks('species');

        var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function() {
          // #replace needs built-in support for named groups.
          // #match works fine because it just return the exec results, even if it has
          // a "grops" property.
          var re = /./;
          re.exec = function() {
            var result = [];
            result.groups = { a: '7' };
            return result;
          };
          return ''.replace(re, '$<a>') !== '7';
        });

        var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function() {
          // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
          var re = /(?:)/;
          var originalExec = re.exec;
          re.exec = function() {
            return originalExec.apply(this, arguments);
          };
          var result = 'ab'.split(re);
          return result.length === 2 && result[0] === 'a' && result[1] === 'b';
        })();

        module.exports = function(KEY, length, exec) {
          var SYMBOL = wks(KEY);

          var DELEGATES_TO_SYMBOL = !fails(function() {
            // String methods call symbol-named RegEp methods
            var O = {};
            O[SYMBOL] = function() {
              return 7;
            };
            return ''[KEY](O) != 7;
          });

          var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL
            ? !fails(function() {
                // Symbol-named RegExp methods call .exec
                var execCalled = false;
                var re = /a/;
                re.exec = function() {
                  execCalled = true;
                  return null;
                };
                if (KEY === 'split') {
                  // RegExp[@@split] doesn't call the regex's exec method, but first creates
                  // a new one. We need to return the patched regex when creating the new one.
                  re.constructor = {};
                  re.constructor[SPECIES] = function() {
                    return re;
                  };
                }
                re[SYMBOL]('');
                return !execCalled;
              })
            : undefined;

          if (
            !DELEGATES_TO_SYMBOL ||
            !DELEGATES_TO_EXEC ||
            (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
            (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
          ) {
            var nativeRegExpMethod = /./[SYMBOL];
            var fns = exec(defined, SYMBOL, ''[KEY], function maybeCallNative(
              nativeMethod,
              regexp,
              str,
              arg2,
              forceStringMethod
            ) {
              if (regexp.exec === regexpExec) {
                if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                  // The native String method already delegates to @@method (this
                  // polyfilled function), leasing to infinite recursion.
                  // We avoid it by directly calling the native @@method method.
                  return {
                    done: true,
                    value: nativeRegExpMethod.call(regexp, str, arg2)
                  };
                }
                return {
                  done: true,
                  value: nativeMethod.call(str, regexp, arg2)
                };
              }
              return { done: false };
            });
            var strfn = fns[0];
            var rxfn = fns[1];

            redefine(String.prototype, KEY, strfn);
            hide(
              RegExp.prototype,
              SYMBOL,
              length == 2
                ? // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                  // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                  function(string, arg) {
                    return rxfn.call(string, this, arg);
                  }
                : // 21.2.5.6 RegExp.prototype[@@match](string)
                  // 21.2.5.9 RegExp.prototype[@@search](string)
                  function(string) {
                    return rxfn.call(string, this);
                  }
            );
          }
        };
      },
      {
        './es6.regexp.exec':
          '../../node_modules/core-js/modules/es6.regexp.exec.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_regexp-exec': '../../node_modules/core-js/modules/_regexp-exec.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.match.js': [
      function(require, module, exports) {
        'use strict';

        var anObject = require('./_an-object');
        var toLength = require('./_to-length');
        var advanceStringIndex = require('./_advance-string-index');
        var regExpExec = require('./_regexp-exec-abstract');

        // @@match logic
        require('./_fix-re-wks')('match', 1, function(
          defined,
          MATCH,
          $match,
          maybeCallNative
        ) {
          return [
            // `String.prototype.match` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.match
            function match(regexp) {
              var O = defined(this);
              var fn = regexp == undefined ? undefined : regexp[MATCH];
              return fn !== undefined
                ? fn.call(regexp, O)
                : new RegExp(regexp)[MATCH](String(O));
            },
            // `RegExp.prototype[@@match]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
            function(regexp) {
              var res = maybeCallNative($match, regexp, this);
              if (res.done) return res.value;
              var rx = anObject(regexp);
              var S = String(this);
              if (!rx.global) return regExpExec(rx, S);
              var fullUnicode = rx.unicode;
              rx.lastIndex = 0;
              var A = [];
              var n = 0;
              var result;
              while ((result = regExpExec(rx, S)) !== null) {
                var matchStr = String(result[0]);
                A[n] = matchStr;
                if (matchStr === '')
                  rx.lastIndex = advanceStringIndex(
                    S,
                    toLength(rx.lastIndex),
                    fullUnicode
                  );
                n++;
              }
              return n === 0 ? null : A;
            }
          ];
        });
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_advance-string-index':
          '../../node_modules/core-js/modules/_advance-string-index.js',
        './_regexp-exec-abstract':
          '../../node_modules/core-js/modules/_regexp-exec-abstract.js',
        './_fix-re-wks': '../../node_modules/core-js/modules/_fix-re-wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.replace.js': [
      function(require, module, exports) {
        var global = arguments[3];
        ('use strict');

        var anObject = require('./_an-object');
        var toObject = require('./_to-object');
        var toLength = require('./_to-length');
        var toInteger = require('./_to-integer');
        var advanceStringIndex = require('./_advance-string-index');
        var regExpExec = require('./_regexp-exec-abstract');
        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;
        var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
        var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

        var maybeToString = function(it) {
          return it === undefined ? it : String(it);
        };

        // @@replace logic
        require('./_fix-re-wks')('replace', 2, function(
          defined,
          REPLACE,
          $replace,
          maybeCallNative
        ) {
          return [
            // `String.prototype.replace` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.replace
            function replace(searchValue, replaceValue) {
              var O = defined(this);
              var fn =
                searchValue == undefined ? undefined : searchValue[REPLACE];
              return fn !== undefined
                ? fn.call(searchValue, O, replaceValue)
                : $replace.call(String(O), searchValue, replaceValue);
            },
            // `RegExp.prototype[@@replace]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
            function(regexp, replaceValue) {
              var res = maybeCallNative($replace, regexp, this, replaceValue);
              if (res.done) return res.value;

              var rx = anObject(regexp);
              var S = String(this);
              var functionalReplace = typeof replaceValue === 'function';
              if (!functionalReplace) replaceValue = String(replaceValue);
              var global = rx.global;
              if (global) {
                var fullUnicode = rx.unicode;
                rx.lastIndex = 0;
              }
              var results = [];
              while (true) {
                var result = regExpExec(rx, S);
                if (result === null) break;
                results.push(result);
                if (!global) break;
                var matchStr = String(result[0]);
                if (matchStr === '')
                  rx.lastIndex = advanceStringIndex(
                    S,
                    toLength(rx.lastIndex),
                    fullUnicode
                  );
              }
              var accumulatedResult = '';
              var nextSourcePosition = 0;
              for (var i = 0; i < results.length; i++) {
                result = results[i];
                var matched = String(result[0]);
                var position = max(min(toInteger(result.index), S.length), 0);
                var captures = [];
                // NOTE: This is equivalent to
                //   captures = result.slice(1).map(maybeToString)
                // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                for (var j = 1; j < result.length; j++)
                  captures.push(maybeToString(result[j]));
                var namedCaptures = result.groups;
                if (functionalReplace) {
                  var replacerArgs = [matched].concat(captures, position, S);
                  if (namedCaptures !== undefined)
                    replacerArgs.push(namedCaptures);
                  var replacement = String(
                    replaceValue.apply(undefined, replacerArgs)
                  );
                } else {
                  replacement = getSubstitution(
                    matched,
                    S,
                    position,
                    captures,
                    namedCaptures,
                    replaceValue
                  );
                }
                if (position >= nextSourcePosition) {
                  accumulatedResult +=
                    S.slice(nextSourcePosition, position) + replacement;
                  nextSourcePosition = position + matched.length;
                }
              }
              return accumulatedResult + S.slice(nextSourcePosition);
            }
          ];

          // https://tc39.github.io/ecma262/#sec-getsubstitution
          function getSubstitution(
            matched,
            str,
            position,
            captures,
            namedCaptures,
            replacement
          ) {
            var tailPos = position + matched.length;
            var m = captures.length;
            var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
            if (namedCaptures !== undefined) {
              namedCaptures = toObject(namedCaptures);
              symbols = SUBSTITUTION_SYMBOLS;
            }
            return $replace.call(replacement, symbols, function(match, ch) {
              var capture;
              switch (ch.charAt(0)) {
                case '$':
                  return '$';
                case '&':
                  return matched;
                case '`':
                  return str.slice(0, position);
                case "'":
                  return str.slice(tailPos);
                case '<':
                  capture = namedCaptures[ch.slice(1, -1)];
                  break;
                default:
                  // \d\d?
                  var n = +ch;
                  if (n === 0) return match;
                  if (n > m) {
                    var f = floor(n / 10);
                    if (f === 0) return match;
                    if (f <= m)
                      return captures[f - 1] === undefined
                        ? ch.charAt(1)
                        : captures[f - 1] + ch.charAt(1);
                    return match;
                  }
                  capture = captures[n - 1];
              }
              return capture === undefined ? '' : capture;
            });
          }
        });
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_advance-string-index':
          '../../node_modules/core-js/modules/_advance-string-index.js',
        './_regexp-exec-abstract':
          '../../node_modules/core-js/modules/_regexp-exec-abstract.js',
        './_fix-re-wks': '../../node_modules/core-js/modules/_fix-re-wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.split.js': [
      function(require, module, exports) {
        'use strict';

        var isRegExp = require('./_is-regexp');
        var anObject = require('./_an-object');
        var speciesConstructor = require('./_species-constructor');
        var advanceStringIndex = require('./_advance-string-index');
        var toLength = require('./_to-length');
        var callRegExpExec = require('./_regexp-exec-abstract');
        var regexpExec = require('./_regexp-exec');
        var fails = require('./_fails');
        var $min = Math.min;
        var $push = [].push;
        var $SPLIT = 'split';
        var LENGTH = 'length';
        var LAST_INDEX = 'lastIndex';
        var MAX_UINT32 = 0xffffffff;

        // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
        var SUPPORTS_Y = !fails(function() {
          RegExp(MAX_UINT32, 'y');
        });

        // @@split logic
        require('./_fix-re-wks')('split', 2, function(
          defined,
          SPLIT,
          $split,
          maybeCallNative
        ) {
          var internalSplit;
          if (
            'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
            'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
            'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
            '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
            '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
            ''[$SPLIT](/.?/)[LENGTH]
          ) {
            // based on es5-shim implementation, need to rework it
            internalSplit = function(separator, limit) {
              var string = String(this);
              if (separator === undefined && limit === 0) return [];
              // If `separator` is not a regex, use native split
              if (!isRegExp(separator))
                return $split.call(string, separator, limit);
              var output = [];
              var flags =
                (separator.ignoreCase ? 'i' : '') +
                (separator.multiline ? 'm' : '') +
                (separator.unicode ? 'u' : '') +
                (separator.sticky ? 'y' : '');
              var lastLastIndex = 0;
              var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
              // Make `global` and avoid `lastIndex` issues by working with a copy
              var separatorCopy = new RegExp(separator.source, flags + 'g');
              var match, lastIndex, lastLength;
              while ((match = regexpExec.call(separatorCopy, string))) {
                lastIndex = separatorCopy[LAST_INDEX];
                if (lastIndex > lastLastIndex) {
                  output.push(string.slice(lastLastIndex, match.index));
                  if (match[LENGTH] > 1 && match.index < string[LENGTH])
                    $push.apply(output, match.slice(1));
                  lastLength = match[0][LENGTH];
                  lastLastIndex = lastIndex;
                  if (output[LENGTH] >= splitLimit) break;
                }
                if (separatorCopy[LAST_INDEX] === match.index)
                  separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
              }
              if (lastLastIndex === string[LENGTH]) {
                if (lastLength || !separatorCopy.test('')) output.push('');
              } else output.push(string.slice(lastLastIndex));
              return output[LENGTH] > splitLimit
                ? output.slice(0, splitLimit)
                : output;
            };
            // Chakra, V8
          } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
            internalSplit = function(separator, limit) {
              return separator === undefined && limit === 0
                ? []
                : $split.call(this, separator, limit);
            };
          } else {
            internalSplit = $split;
          }

          return [
            // `String.prototype.split` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.split
            function split(separator, limit) {
              var O = defined(this);
              var splitter =
                separator == undefined ? undefined : separator[SPLIT];
              return splitter !== undefined
                ? splitter.call(separator, O, limit)
                : internalSplit.call(String(O), separator, limit);
            },
            // `RegExp.prototype[@@split]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
            //
            // NOTE: This cannot be properly polyfilled in engines that don't support
            // the 'y' flag.
            function(regexp, limit) {
              var res = maybeCallNative(
                internalSplit,
                regexp,
                this,
                limit,
                internalSplit !== $split
              );
              if (res.done) return res.value;

              var rx = anObject(regexp);
              var S = String(this);
              var C = speciesConstructor(rx, RegExp);

              var unicodeMatching = rx.unicode;
              var flags =
                (rx.ignoreCase ? 'i' : '') +
                (rx.multiline ? 'm' : '') +
                (rx.unicode ? 'u' : '') +
                (SUPPORTS_Y ? 'y' : 'g');

              // ^(? + rx + ) is needed, in combination with some S slicing, to
              // simulate the 'y' flag.
              var splitter = new C(
                SUPPORTS_Y ? rx : '^(?:' + rx.source + ')',
                flags
              );
              var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
              if (lim === 0) return [];
              if (S.length === 0)
                return callRegExpExec(splitter, S) === null ? [S] : [];
              var p = 0;
              var q = 0;
              var A = [];
              while (q < S.length) {
                splitter.lastIndex = SUPPORTS_Y ? q : 0;
                var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
                var e;
                if (
                  z === null ||
                  (e = $min(
                    toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)),
                    S.length
                  )) === p
                ) {
                  q = advanceStringIndex(S, q, unicodeMatching);
                } else {
                  A.push(S.slice(p, q));
                  if (A.length === lim) return A;
                  for (var i = 1; i <= z.length - 1; i++) {
                    A.push(z[i]);
                    if (A.length === lim) return A;
                  }
                  q = p = e;
                }
              }
              A.push(S.slice(p));
              return A;
            }
          ];
        });
      },
      {
        './_is-regexp': '../../node_modules/core-js/modules/_is-regexp.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_species-constructor':
          '../../node_modules/core-js/modules/_species-constructor.js',
        './_advance-string-index':
          '../../node_modules/core-js/modules/_advance-string-index.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_regexp-exec-abstract':
          '../../node_modules/core-js/modules/_regexp-exec-abstract.js',
        './_regexp-exec': '../../node_modules/core-js/modules/_regexp-exec.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_fix-re-wks': '../../node_modules/core-js/modules/_fix-re-wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.search.js': [
      function(require, module, exports) {
        'use strict';

        var anObject = require('./_an-object');
        var sameValue = require('./_same-value');
        var regExpExec = require('./_regexp-exec-abstract');

        // @@search logic
        require('./_fix-re-wks')('search', 1, function(
          defined,
          SEARCH,
          $search,
          maybeCallNative
        ) {
          return [
            // `String.prototype.search` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.search
            function search(regexp) {
              var O = defined(this);
              var fn = regexp == undefined ? undefined : regexp[SEARCH];
              return fn !== undefined
                ? fn.call(regexp, O)
                : new RegExp(regexp)[SEARCH](String(O));
            },
            // `RegExp.prototype[@@search]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
            function(regexp) {
              var res = maybeCallNative($search, regexp, this);
              if (res.done) return res.value;
              var rx = anObject(regexp);
              var S = String(this);
              var previousLastIndex = rx.lastIndex;
              if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
              var result = regExpExec(rx, S);
              if (!sameValue(rx.lastIndex, previousLastIndex))
                rx.lastIndex = previousLastIndex;
              return result === null ? -1 : result.index;
            }
          ];
        });
      },
      {
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_same-value': '../../node_modules/core-js/modules/_same-value.js',
        './_regexp-exec-abstract':
          '../../node_modules/core-js/modules/_regexp-exec-abstract.js',
        './_fix-re-wks': '../../node_modules/core-js/modules/_fix-re-wks.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.regexp.to-string.js': [
      function(require, module, exports) {
        'use strict';
        require('./es6.regexp.flags');
        var anObject = require('./_an-object');
        var $flags = require('./_flags');
        var DESCRIPTORS = require('./_descriptors');
        var TO_STRING = 'toString';
        var $toString = /./[TO_STRING];

        var define = function(fn) {
          require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
        };

        // 21.2.5.14 RegExp.prototype.toString()
        if (
          require('./_fails')(function() {
            return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
          })
        ) {
          define(function toString() {
            var R = anObject(this);
            return '/'.concat(
              R.source,
              '/',
              'flags' in R
                ? R.flags
                : !DESCRIPTORS && R instanceof RegExp
                ? $flags.call(R)
                : undefined
            );
          });
          // FF44- RegExp#toString has a wrong name
        } else if ($toString.name != TO_STRING) {
          define(function toString() {
            return $toString.call(this);
          });
        }
      },
      {
        './es6.regexp.flags':
          '../../node_modules/core-js/modules/es6.regexp.flags.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_flags': '../../node_modules/core-js/modules/_flags.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.set.js': [
      function(require, module, exports) {
        'use strict';
        var strong = require('./_collection-strong');
        var validate = require('./_validate-collection');
        var SET = 'Set';

        // 23.2 Set Objects
        module.exports = require('./_collection')(
          SET,
          function(get) {
            return function Set() {
              return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
          },
          {
            // 23.2.3.1 Set.prototype.add(value)
            add: function add(value) {
              return strong.def(
                validate(this, SET),
                (value = value === 0 ? 0 : value),
                value
              );
            }
          },
          strong
        );
      },
      {
        './_collection-strong':
          '../../node_modules/core-js/modules/_collection-strong.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js',
        './_collection': '../../node_modules/core-js/modules/_collection.js'
      }
    ],
    '../../node_modules/core-js/modules/_wks-ext.js': [
      function(require, module, exports) {
        exports.f = require('./_wks');
      },
      { './_wks': '../../node_modules/core-js/modules/_wks.js' }
    ],
    '../../node_modules/core-js/modules/_wks-define.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var core = require('./_core');
        var LIBRARY = require('./_library');
        var wksExt = require('./_wks-ext');
        var defineProperty = require('./_object-dp').f;
        module.exports = function(name) {
          var $Symbol =
            core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
          if (name.charAt(0) != '_' && !(name in $Symbol))
            defineProperty($Symbol, name, { value: wksExt.f(name) });
        };
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_core': '../../node_modules/core-js/modules/_core.js',
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_wks-ext': '../../node_modules/core-js/modules/_wks-ext.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js'
      }
    ],
    '../../node_modules/core-js/modules/_enum-keys.js': [
      function(require, module, exports) {
        // all enumerable object keys, includes symbols
        var getKeys = require('./_object-keys');
        var gOPS = require('./_object-gops');
        var pIE = require('./_object-pie');
        module.exports = function(it) {
          var result = getKeys(it);
          var getSymbols = gOPS.f;
          if (getSymbols) {
            var symbols = getSymbols(it);
            var isEnum = pIE.f;
            var i = 0;
            var key;
            while (symbols.length > i)
              if (isEnum.call(it, (key = symbols[i++]))) result.push(key);
          }
          return result;
        };
      },
      {
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_object-gops': '../../node_modules/core-js/modules/_object-gops.js',
        './_object-pie': '../../node_modules/core-js/modules/_object-pie.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.symbol.js': [
      function(require, module, exports) {
        'use strict';
        // ECMAScript 6 symbols shim
        var global = require('./_global');
        var has = require('./_has');
        var DESCRIPTORS = require('./_descriptors');
        var $export = require('./_export');
        var redefine = require('./_redefine');
        var META = require('./_meta').KEY;
        var $fails = require('./_fails');
        var shared = require('./_shared');
        var setToStringTag = require('./_set-to-string-tag');
        var uid = require('./_uid');
        var wks = require('./_wks');
        var wksExt = require('./_wks-ext');
        var wksDefine = require('./_wks-define');
        var enumKeys = require('./_enum-keys');
        var isArray = require('./_is-array');
        var anObject = require('./_an-object');
        var isObject = require('./_is-object');
        var toObject = require('./_to-object');
        var toIObject = require('./_to-iobject');
        var toPrimitive = require('./_to-primitive');
        var createDesc = require('./_property-desc');
        var _create = require('./_object-create');
        var gOPNExt = require('./_object-gopn-ext');
        var $GOPD = require('./_object-gopd');
        var $GOPS = require('./_object-gops');
        var $DP = require('./_object-dp');
        var $keys = require('./_object-keys');
        var gOPD = $GOPD.f;
        var dP = $DP.f;
        var gOPN = gOPNExt.f;
        var $Symbol = global.Symbol;
        var $JSON = global.JSON;
        var _stringify = $JSON && $JSON.stringify;
        var PROTOTYPE = 'prototype';
        var HIDDEN = wks('_hidden');
        var TO_PRIMITIVE = wks('toPrimitive');
        var isEnum = {}.propertyIsEnumerable;
        var SymbolRegistry = shared('symbol-registry');
        var AllSymbols = shared('symbols');
        var OPSymbols = shared('op-symbols');
        var ObjectProto = Object[PROTOTYPE];
        var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
        var QObject = global.QObject;
        // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var setter =
          !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

        // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDesc =
          DESCRIPTORS &&
          $fails(function() {
            return (
              _create(
                dP({}, 'a', {
                  get: function() {
                    return dP(this, 'a', { value: 7 }).a;
                  }
                })
              ).a != 7
            );
          })
            ? function(it, key, D) {
                var protoDesc = gOPD(ObjectProto, key);
                if (protoDesc) delete ObjectProto[key];
                dP(it, key, D);
                if (protoDesc && it !== ObjectProto)
                  dP(ObjectProto, key, protoDesc);
              }
            : dP;

        var wrap = function(tag) {
          var sym = (AllSymbols[tag] = _create($Symbol[PROTOTYPE]));
          sym._k = tag;
          return sym;
        };

        var isSymbol =
          USE_NATIVE && typeof $Symbol.iterator == 'symbol'
            ? function(it) {
                return typeof it == 'symbol';
              }
            : function(it) {
                return it instanceof $Symbol;
              };

        var $defineProperty = function defineProperty(it, key, D) {
          if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
          anObject(it);
          key = toPrimitive(key, true);
          anObject(D);
          if (has(AllSymbols, key)) {
            if (!D.enumerable) {
              if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
              it[HIDDEN][key] = true;
            } else {
              if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
              D = _create(D, { enumerable: createDesc(0, false) });
            }
            return setSymbolDesc(it, key, D);
          }
          return dP(it, key, D);
        };
        var $defineProperties = function defineProperties(it, P) {
          anObject(it);
          var keys = enumKeys((P = toIObject(P)));
          var i = 0;
          var l = keys.length;
          var key;
          while (l > i) $defineProperty(it, (key = keys[i++]), P[key]);
          return it;
        };
        var $create = function create(it, P) {
          return P === undefined
            ? _create(it)
            : $defineProperties(_create(it), P);
        };
        var $propertyIsEnumerable = function propertyIsEnumerable(key) {
          var E = isEnum.call(this, (key = toPrimitive(key, true)));
          if (
            this === ObjectProto &&
            has(AllSymbols, key) &&
            !has(OPSymbols, key)
          )
            return false;
          return E ||
            !has(this, key) ||
            !has(AllSymbols, key) ||
            (has(this, HIDDEN) && this[HIDDEN][key])
            ? E
            : true;
        };
        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(
          it,
          key
        ) {
          it = toIObject(it);
          key = toPrimitive(key, true);
          if (
            it === ObjectProto &&
            has(AllSymbols, key) &&
            !has(OPSymbols, key)
          )
            return;
          var D = gOPD(it, key);
          if (
            D &&
            has(AllSymbols, key) &&
            !(has(it, HIDDEN) && it[HIDDEN][key])
          )
            D.enumerable = true;
          return D;
        };
        var $getOwnPropertyNames = function getOwnPropertyNames(it) {
          var names = gOPN(toIObject(it));
          var result = [];
          var i = 0;
          var key;
          while (names.length > i) {
            if (
              !has(AllSymbols, (key = names[i++])) &&
              key != HIDDEN &&
              key != META
            )
              result.push(key);
          }
          return result;
        };
        var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
          var IS_OP = it === ObjectProto;
          var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
          var result = [];
          var i = 0;
          var key;
          while (names.length > i) {
            if (
              has(AllSymbols, (key = names[i++])) &&
              (IS_OP ? has(ObjectProto, key) : true)
            )
              result.push(AllSymbols[key]);
          }
          return result;
        };

        // 19.4.1.1 Symbol([description])
        if (!USE_NATIVE) {
          $Symbol = function Symbol() {
            if (this instanceof $Symbol)
              throw TypeError('Symbol is not a constructor!');
            var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
            var $set = function(value) {
              if (this === ObjectProto) $set.call(OPSymbols, value);
              if (has(this, HIDDEN) && has(this[HIDDEN], tag))
                this[HIDDEN][tag] = false;
              setSymbolDesc(this, tag, createDesc(1, value));
            };
            if (DESCRIPTORS && setter)
              setSymbolDesc(ObjectProto, tag, {
                configurable: true,
                set: $set
              });
            return wrap(tag);
          };
          redefine($Symbol[PROTOTYPE], 'toString', function toString() {
            return this._k;
          });

          $GOPD.f = $getOwnPropertyDescriptor;
          $DP.f = $defineProperty;
          require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
          require('./_object-pie').f = $propertyIsEnumerable;
          $GOPS.f = $getOwnPropertySymbols;

          if (DESCRIPTORS && !require('./_library')) {
            redefine(
              ObjectProto,
              'propertyIsEnumerable',
              $propertyIsEnumerable,
              true
            );
          }

          wksExt.f = function(name) {
            return wrap(wks(name));
          };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {
          Symbol: $Symbol
        });

        for (
          var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split( // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
              ','
            ),
            j = 0;
          es6Symbols.length > j;

        )
          wks(es6Symbols[j++]);

        for (
          var wellKnownSymbols = $keys(wks.store), k = 0;
          wellKnownSymbols.length > k;

        )
          wksDefine(wellKnownSymbols[k++]);

        $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
          // 19.4.2.1 Symbol.for(key)
          for: function(key) {
            return has(SymbolRegistry, (key += ''))
              ? SymbolRegistry[key]
              : (SymbolRegistry[key] = $Symbol(key));
          },
          // 19.4.2.5 Symbol.keyFor(sym)
          keyFor: function keyFor(sym) {
            if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
            for (var key in SymbolRegistry)
              if (SymbolRegistry[key] === sym) return key;
          },
          useSetter: function() {
            setter = true;
          },
          useSimple: function() {
            setter = false;
          }
        });

        $export($export.S + $export.F * !USE_NATIVE, 'Object', {
          // 19.1.2.2 Object.create(O [, Properties])
          create: $create,
          // 19.1.2.4 Object.defineProperty(O, P, Attributes)
          defineProperty: $defineProperty,
          // 19.1.2.3 Object.defineProperties(O, Properties)
          defineProperties: $defineProperties,
          // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
          getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
          // 19.1.2.7 Object.getOwnPropertyNames(O)
          getOwnPropertyNames: $getOwnPropertyNames,
          // 19.1.2.8 Object.getOwnPropertySymbols(O)
          getOwnPropertySymbols: $getOwnPropertySymbols
        });

        // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
        // https://bugs.chromium.org/p/v8/issues/detail?id=3443
        var FAILS_ON_PRIMITIVES = $fails(function() {
          $GOPS.f(1);
        });

        $export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
          getOwnPropertySymbols: function getOwnPropertySymbols(it) {
            return $GOPS.f(toObject(it));
          }
        });

        // 24.3.2 JSON.stringify(value [, replacer [, space]])
        $JSON &&
          $export(
            $export.S +
              $export.F *
                (!USE_NATIVE ||
                  $fails(function() {
                    var S = $Symbol();
                    // MS Edge converts symbol values to JSON as {}
                    // WebKit converts symbol values to JSON as null
                    // V8 throws on boxed symbols
                    return (
                      _stringify([S]) != '[null]' ||
                      _stringify({ a: S }) != '{}' ||
                      _stringify(Object(S)) != '{}'
                    );
                  })),
            'JSON',
            {
              stringify: function stringify(it) {
                var args = [it];
                var i = 1;
                var replacer, $replacer;
                while (arguments.length > i) args.push(arguments[i++]);
                $replacer = replacer = args[1];
                if ((!isObject(replacer) && it === undefined) || isSymbol(it))
                  return; // IE8 returns string on undefined
                if (!isArray(replacer))
                  replacer = function(key, value) {
                    if (typeof $replacer == 'function')
                      value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                  };
                args[1] = replacer;
                return _stringify.apply($JSON, args);
              }
            }
          );

        // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
        $Symbol[PROTOTYPE][TO_PRIMITIVE] ||
          require('./_hide')(
            $Symbol[PROTOTYPE],
            TO_PRIMITIVE,
            $Symbol[PROTOTYPE].valueOf
          );
        // 19.4.3.5 Symbol.prototype[@@toStringTag]
        setToStringTag($Symbol, 'Symbol');
        // 20.2.1.9 Math[@@toStringTag]
        setToStringTag(Math, 'Math', true);
        // 24.3.3 JSON[@@toStringTag]
        setToStringTag(global.JSON, 'JSON', true);
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_shared': '../../node_modules/core-js/modules/_shared.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_wks-ext': '../../node_modules/core-js/modules/_wks-ext.js',
        './_wks-define': '../../node_modules/core-js/modules/_wks-define.js',
        './_enum-keys': '../../node_modules/core-js/modules/_enum-keys.js',
        './_is-array': '../../node_modules/core-js/modules/_is-array.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_object-gopn-ext':
          '../../node_modules/core-js/modules/_object-gopn-ext.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js',
        './_object-gops': '../../node_modules/core-js/modules/_object-gops.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './_object-pie': '../../node_modules/core-js/modules/_object-pie.js',
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.symbol.async-iterator.js': [
      function(require, module, exports) {
        require('./_wks-define')('asyncIterator');
      },
      { './_wks-define': '../../node_modules/core-js/modules/_wks-define.js' }
    ],
    '../../node_modules/core-js/modules/_string-html.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var fails = require('./_fails');
        var defined = require('./_defined');
        var quot = /"/g;
        // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
        var createHTML = function(string, tag, attribute, value) {
          var S = String(defined(string));
          var p1 = '<' + tag;
          if (attribute !== '')
            p1 +=
              ' ' +
              attribute +
              '="' +
              String(value).replace(quot, '&quot;') +
              '"';
          return p1 + '>' + S + '</' + tag + '>';
        };
        module.exports = function(NAME, exec) {
          var O = {};
          O[NAME] = exec(createHTML);
          $export(
            $export.P +
              $export.F *
                fails(function() {
                  var test = ''[NAME]('"');
                  return (
                    test !== test.toLowerCase() || test.split('"').length > 3
                  );
                }),
            'String',
            O
          );
        };
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.anchor.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.2 String.prototype.anchor(name)
        require('./_string-html')('anchor', function(createHTML) {
          return function anchor(name) {
            return createHTML(this, 'a', 'name', name);
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.big.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.3 String.prototype.big()
        require('./_string-html')('big', function(createHTML) {
          return function big() {
            return createHTML(this, 'big', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.blink.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.4 String.prototype.blink()
        require('./_string-html')('blink', function(createHTML) {
          return function blink() {
            return createHTML(this, 'blink', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.bold.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.5 String.prototype.bold()
        require('./_string-html')('bold', function(createHTML) {
          return function bold() {
            return createHTML(this, 'b', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.code-point-at.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var $at = require('./_string-at')(false);
        $export($export.P, 'String', {
          // 21.1.3.3 String.prototype.codePointAt(pos)
          codePointAt: function codePointAt(pos) {
            return $at(this, pos);
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_string-at': '../../node_modules/core-js/modules/_string-at.js'
      }
    ],
    '../../node_modules/core-js/modules/_string-context.js': [
      function(require, module, exports) {
        // helper for String#{startsWith, endsWith, includes}
        var isRegExp = require('./_is-regexp');
        var defined = require('./_defined');

        module.exports = function(that, searchString, NAME) {
          if (isRegExp(searchString))
            throw TypeError('String#' + NAME + " doesn't accept regex!");
          return String(defined(that));
        };
      },
      {
        './_is-regexp': '../../node_modules/core-js/modules/_is-regexp.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/_fails-is-regexp.js': [
      function(require, module, exports) {
        var MATCH = require('./_wks')('match');
        module.exports = function(KEY) {
          var re = /./;
          try {
            '/./'[KEY](re);
          } catch (e) {
            try {
              re[MATCH] = false;
              return !'/./'[KEY](re);
            } catch (f) {
              /* empty */
            }
          }
          return true;
        };
      },
      { './_wks': '../../node_modules/core-js/modules/_wks.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.ends-with.js': [
      function(require, module, exports) {
        // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
        'use strict';
        var $export = require('./_export');
        var toLength = require('./_to-length');
        var context = require('./_string-context');
        var ENDS_WITH = 'endsWith';
        var $endsWith = ''[ENDS_WITH];

        $export(
          $export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH),
          'String',
          {
            endsWith: function endsWith(
              searchString /* , endPosition = @length */
            ) {
              var that = context(this, searchString, ENDS_WITH);
              var endPosition = arguments.length > 1 ? arguments[1] : undefined;
              var len = toLength(that.length);
              var end =
                endPosition === undefined
                  ? len
                  : Math.min(toLength(endPosition), len);
              var search = String(searchString);
              return $endsWith
                ? $endsWith.call(that, search, end)
                : that.slice(end - search.length, end) === search;
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_string-context':
          '../../node_modules/core-js/modules/_string-context.js',
        './_fails-is-regexp':
          '../../node_modules/core-js/modules/_fails-is-regexp.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.fixed.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.6 String.prototype.fixed()
        require('./_string-html')('fixed', function(createHTML) {
          return function fixed() {
            return createHTML(this, 'tt', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.fontcolor.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.7 String.prototype.fontcolor(color)
        require('./_string-html')('fontcolor', function(createHTML) {
          return function fontcolor(color) {
            return createHTML(this, 'font', 'color', color);
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.fontsize.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.8 String.prototype.fontsize(size)
        require('./_string-html')('fontsize', function(createHTML) {
          return function fontsize(size) {
            return createHTML(this, 'font', 'size', size);
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.from-code-point.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var toAbsoluteIndex = require('./_to-absolute-index');
        var fromCharCode = String.fromCharCode;
        var $fromCodePoint = String.fromCodePoint;

        // length should be 1, old FF problem
        $export(
          $export.S +
            $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1),
          'String',
          {
            // 21.1.2.2 String.fromCodePoint(...codePoints)
            fromCodePoint: function fromCodePoint(x) {
              // eslint-disable-line no-unused-vars
              var res = [];
              var aLen = arguments.length;
              var i = 0;
              var code;
              while (aLen > i) {
                code = +arguments[i++];
                if (toAbsoluteIndex(code, 0x10ffff) !== code)
                  throw RangeError(code + ' is not a valid code point');
                res.push(
                  code < 0x10000
                    ? fromCharCode(code)
                    : fromCharCode(
                        ((code -= 0x10000) >> 10) + 0xd800,
                        (code % 0x400) + 0xdc00
                      )
                );
              }
              return res.join('');
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.includes.js': [
      function(require, module, exports) {
        // 21.1.3.7 String.prototype.includes(searchString, position = 0)
        'use strict';
        var $export = require('./_export');
        var context = require('./_string-context');
        var INCLUDES = 'includes';

        $export(
          $export.P + $export.F * require('./_fails-is-regexp')(INCLUDES),
          'String',
          {
            includes: function includes(searchString /* , position = 0 */) {
              return !!~context(this, searchString, INCLUDES).indexOf(
                searchString,
                arguments.length > 1 ? arguments[1] : undefined
              );
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_string-context':
          '../../node_modules/core-js/modules/_string-context.js',
        './_fails-is-regexp':
          '../../node_modules/core-js/modules/_fails-is-regexp.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.italics.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.9 String.prototype.italics()
        require('./_string-html')('italics', function(createHTML) {
          return function italics() {
            return createHTML(this, 'i', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.iterator.js': [
      function(require, module, exports) {
        'use strict';
        var $at = require('./_string-at')(true);

        // 21.1.3.27 String.prototype[@@iterator]()
        require('./_iter-define')(
          String,
          'String',
          function(iterated) {
            this._t = String(iterated); // target
            this._i = 0; // next index
            // 21.1.5.2.1 %StringIteratorPrototype%.next()
          },
          function() {
            var O = this._t;
            var index = this._i;
            var point;
            if (index >= O.length) return { value: undefined, done: true };
            point = $at(O, index);
            this._i += point.length;
            return { value: point, done: false };
          }
        );
      },
      {
        './_string-at': '../../node_modules/core-js/modules/_string-at.js',
        './_iter-define': '../../node_modules/core-js/modules/_iter-define.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.link.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.10 String.prototype.link(url)
        require('./_string-html')('link', function(createHTML) {
          return function link(url) {
            return createHTML(this, 'a', 'href', url);
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/_string-repeat.js': [
      function(require, module, exports) {
        'use strict';
        var toInteger = require('./_to-integer');
        var defined = require('./_defined');

        module.exports = function repeat(count) {
          var str = String(defined(this));
          var res = '';
          var n = toInteger(count);
          if (n < 0 || n == Infinity)
            throw RangeError("Count can't be negative");
          for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
          return res;
        };
      },
      {
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/_string-pad.js': [
      function(require, module, exports) {
        // https://github.com/tc39/proposal-string-pad-start-end
        var toLength = require('./_to-length');
        var repeat = require('./_string-repeat');
        var defined = require('./_defined');

        module.exports = function(that, maxLength, fillString, left) {
          var S = String(defined(that));
          var stringLength = S.length;
          var fillStr = fillString === undefined ? ' ' : String(fillString);
          var intMaxLength = toLength(maxLength);
          if (intMaxLength <= stringLength || fillStr == '') return S;
          var fillLen = intMaxLength - stringLength;
          var stringFiller = repeat.call(
            fillStr,
            Math.ceil(fillLen / fillStr.length)
          );
          if (stringFiller.length > fillLen)
            stringFiller = stringFiller.slice(0, fillLen);
          return left ? stringFiller + S : S + stringFiller;
        };
      },
      {
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_string-repeat':
          '../../node_modules/core-js/modules/_string-repeat.js',
        './_defined': '../../node_modules/core-js/modules/_defined.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.string.pad-start.js': [
      function(require, module, exports) {
        'use strict';
        // https://github.com/tc39/proposal-string-pad-start-end
        var $export = require('./_export');
        var $pad = require('./_string-pad');
        var userAgent = require('./_user-agent');

        // https://github.com/zloirock/core-js/issues/280
        var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(
          userAgent
        );

        $export($export.P + $export.F * WEBKIT_BUG, 'String', {
          padStart: function padStart(maxLength /* , fillString = ' ' */) {
            return $pad(
              this,
              maxLength,
              arguments.length > 1 ? arguments[1] : undefined,
              true
            );
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_string-pad': '../../node_modules/core-js/modules/_string-pad.js',
        './_user-agent': '../../node_modules/core-js/modules/_user-agent.js'
      }
    ],
    '../../node_modules/core-js/modules/es7.string.pad-end.js': [
      function(require, module, exports) {
        'use strict';
        // https://github.com/tc39/proposal-string-pad-start-end
        var $export = require('./_export');
        var $pad = require('./_string-pad');
        var userAgent = require('./_user-agent');

        // https://github.com/zloirock/core-js/issues/280
        var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(
          userAgent
        );

        $export($export.P + $export.F * WEBKIT_BUG, 'String', {
          padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
            return $pad(
              this,
              maxLength,
              arguments.length > 1 ? arguments[1] : undefined,
              false
            );
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_string-pad': '../../node_modules/core-js/modules/_string-pad.js',
        './_user-agent': '../../node_modules/core-js/modules/_user-agent.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.raw.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var toIObject = require('./_to-iobject');
        var toLength = require('./_to-length');

        $export($export.S, 'String', {
          // 21.1.2.4 String.raw(callSite, ...substitutions)
          raw: function raw(callSite) {
            var tpl = toIObject(callSite.raw);
            var len = toLength(tpl.length);
            var aLen = arguments.length;
            var res = [];
            var i = 0;
            while (len > i) {
              res.push(String(tpl[i++]));
              if (i < aLen) res.push(String(arguments[i]));
            }
            return res.join('');
          }
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-iobject': '../../node_modules/core-js/modules/_to-iobject.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.repeat.js': [
      function(require, module, exports) {
        var $export = require('./_export');

        $export($export.P, 'String', {
          // 21.1.3.13 String.prototype.repeat(count)
          repeat: require('./_string-repeat')
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_string-repeat':
          '../../node_modules/core-js/modules/_string-repeat.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.small.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.11 String.prototype.small()
        require('./_string-html')('small', function(createHTML) {
          return function small() {
            return createHTML(this, 'small', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.starts-with.js': [
      function(require, module, exports) {
        // 21.1.3.18 String.prototype.startsWith(searchString [, position ])
        'use strict';
        var $export = require('./_export');
        var toLength = require('./_to-length');
        var context = require('./_string-context');
        var STARTS_WITH = 'startsWith';
        var $startsWith = ''[STARTS_WITH];

        $export(
          $export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH),
          'String',
          {
            startsWith: function startsWith(searchString /* , position = 0 */) {
              var that = context(this, searchString, STARTS_WITH);
              var index = toLength(
                Math.min(
                  arguments.length > 1 ? arguments[1] : undefined,
                  that.length
                )
              );
              var search = String(searchString);
              return $startsWith
                ? $startsWith.call(that, search, index)
                : that.slice(index, index + search.length) === search;
            }
          }
        );
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_string-context':
          '../../node_modules/core-js/modules/_string-context.js',
        './_fails-is-regexp':
          '../../node_modules/core-js/modules/_fails-is-regexp.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.string.strike.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.12 String.prototype.strike()
        require('./_string-html')('strike', function(createHTML) {
          return function strike() {
            return createHTML(this, 'strike', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.sub.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.13 String.prototype.sub()
        require('./_string-html')('sub', function(createHTML) {
          return function sub() {
            return createHTML(this, 'sub', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es6.string.sup.js': [
      function(require, module, exports) {
        'use strict';
        // B.2.3.14 String.prototype.sup()
        require('./_string-html')('sup', function(createHTML) {
          return function sup() {
            return createHTML(this, 'sup', '', '');
          };
        });
      },
      { './_string-html': '../../node_modules/core-js/modules/_string-html.js' }
    ],
    '../../node_modules/core-js/modules/es7.string.trim-left.js': [
      function(require, module, exports) {
        'use strict';
        // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
        require('./_string-trim')(
          'trimLeft',
          function($trim) {
            return function trimLeft() {
              return $trim(this, 1);
            };
          },
          'trimStart'
        );
      },
      { './_string-trim': '../../node_modules/core-js/modules/_string-trim.js' }
    ],
    '../../node_modules/core-js/modules/es7.string.trim-right.js': [
      function(require, module, exports) {
        'use strict';
        // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
        require('./_string-trim')(
          'trimRight',
          function($trim) {
            return function trimRight() {
              return $trim(this, 2);
            };
          },
          'trimEnd'
        );
      },
      { './_string-trim': '../../node_modules/core-js/modules/_string-trim.js' }
    ],
    '../../node_modules/core-js/modules/_typed.js': [
      function(require, module, exports) {
        var global = require('./_global');
        var hide = require('./_hide');
        var uid = require('./_uid');
        var TYPED = uid('typed_array');
        var VIEW = uid('view');
        var ABV = !!(global.ArrayBuffer && global.DataView);
        var CONSTR = ABV;
        var i = 0;
        var l = 9;
        var Typed;

        var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(
          ','
        );

        while (i < l) {
          if ((Typed = global[TypedArrayConstructors[i++]])) {
            hide(Typed.prototype, TYPED, true);
            hide(Typed.prototype, VIEW, true);
          } else CONSTR = false;
        }

        module.exports = {
          ABV: ABV,
          CONSTR: CONSTR,
          TYPED: TYPED,
          VIEW: VIEW
        };
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js'
      }
    ],
    '../../node_modules/core-js/modules/_to-index.js': [
      function(require, module, exports) {
        // https://tc39.github.io/ecma262/#sec-toindex
        var toInteger = require('./_to-integer');
        var toLength = require('./_to-length');
        module.exports = function(it) {
          if (it === undefined) return 0;
          var number = toInteger(it);
          var length = toLength(number);
          if (number !== length) throw RangeError('Wrong length!');
          return length;
        };
      },
      {
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js'
      }
    ],
    '../../node_modules/core-js/modules/_typed-buffer.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('./_global');
        var DESCRIPTORS = require('./_descriptors');
        var LIBRARY = require('./_library');
        var $typed = require('./_typed');
        var hide = require('./_hide');
        var redefineAll = require('./_redefine-all');
        var fails = require('./_fails');
        var anInstance = require('./_an-instance');
        var toInteger = require('./_to-integer');
        var toLength = require('./_to-length');
        var toIndex = require('./_to-index');
        var gOPN = require('./_object-gopn').f;
        var dP = require('./_object-dp').f;
        var arrayFill = require('./_array-fill');
        var setToStringTag = require('./_set-to-string-tag');
        var ARRAY_BUFFER = 'ArrayBuffer';
        var DATA_VIEW = 'DataView';
        var PROTOTYPE = 'prototype';
        var WRONG_LENGTH = 'Wrong length!';
        var WRONG_INDEX = 'Wrong index!';
        var $ArrayBuffer = global[ARRAY_BUFFER];
        var $DataView = global[DATA_VIEW];
        var Math = global.Math;
        var RangeError = global.RangeError;
        // eslint-disable-next-line no-shadow-restricted-names
        var Infinity = global.Infinity;
        var BaseBuffer = $ArrayBuffer;
        var abs = Math.abs;
        var pow = Math.pow;
        var floor = Math.floor;
        var log = Math.log;
        var LN2 = Math.LN2;
        var BUFFER = 'buffer';
        var BYTE_LENGTH = 'byteLength';
        var BYTE_OFFSET = 'byteOffset';
        var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
        var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
        var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

        // IEEE754 conversions based on https://github.com/feross/ieee754
        function packIEEE754(value, mLen, nBytes) {
          var buffer = new Array(nBytes);
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
          var i = 0;
          var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;
          var e, m, c;
          value = abs(value);
          // eslint-disable-next-line no-self-compare
          if (value != value || value === Infinity) {
            // eslint-disable-next-line no-self-compare
            m = value != value ? 1 : 0;
            e = eMax;
          } else {
            e = floor(log(value) / LN2);
            if (value * (c = pow(2, -e)) < 1) {
              e--;
              c *= 2;
            }
            if (e + eBias >= 1) {
              value += rt / c;
            } else {
              value += rt * pow(2, 1 - eBias);
            }
            if (value * c >= 2) {
              e++;
              c /= 2;
            }
            if (e + eBias >= eMax) {
              m = 0;
              e = eMax;
            } else if (e + eBias >= 1) {
              m = (value * c - 1) * pow(2, mLen);
              e = e + eBias;
            } else {
              m = value * pow(2, eBias - 1) * pow(2, mLen);
              e = 0;
            }
          }
          for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
          e = (e << mLen) | m;
          eLen += mLen;
          for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
          buffer[--i] |= s * 128;
          return buffer;
        }
        function unpackIEEE754(buffer, mLen, nBytes) {
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var nBits = eLen - 7;
          var i = nBytes - 1;
          var s = buffer[i--];
          var e = s & 127;
          var m;
          s >>= 7;
          for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
          m = e & ((1 << -nBits) - 1);
          e >>= -nBits;
          nBits += mLen;
          for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
          if (e === 0) {
            e = 1 - eBias;
          } else if (e === eMax) {
            return m ? NaN : s ? -Infinity : Infinity;
          } else {
            m = m + pow(2, mLen);
            e = e - eBias;
          }
          return (s ? -1 : 1) * m * pow(2, e - mLen);
        }

        function unpackI32(bytes) {
          return (
            (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0]
          );
        }
        function packI8(it) {
          return [it & 0xff];
        }
        function packI16(it) {
          return [it & 0xff, (it >> 8) & 0xff];
        }
        function packI32(it) {
          return [
            it & 0xff,
            (it >> 8) & 0xff,
            (it >> 16) & 0xff,
            (it >> 24) & 0xff
          ];
        }
        function packF64(it) {
          return packIEEE754(it, 52, 8);
        }
        function packF32(it) {
          return packIEEE754(it, 23, 4);
        }

        function addGetter(C, key, internal) {
          dP(C[PROTOTYPE], key, {
            get: function() {
              return this[internal];
            }
          });
        }

        function get(view, bytes, index, isLittleEndian) {
          var numIndex = +index;
          var intIndex = toIndex(numIndex);
          if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
          var store = view[$BUFFER]._b;
          var start = intIndex + view[$OFFSET];
          var pack = store.slice(start, start + bytes);
          return isLittleEndian ? pack : pack.reverse();
        }
        function set(view, bytes, index, conversion, value, isLittleEndian) {
          var numIndex = +index;
          var intIndex = toIndex(numIndex);
          if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
          var store = view[$BUFFER]._b;
          var start = intIndex + view[$OFFSET];
          var pack = conversion(+value);
          for (var i = 0; i < bytes; i++)
            store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
        }

        if (!$typed.ABV) {
          $ArrayBuffer = function ArrayBuffer(length) {
            anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
            var byteLength = toIndex(length);
            this._b = arrayFill.call(new Array(byteLength), 0);
            this[$LENGTH] = byteLength;
          };

          $DataView = function DataView(buffer, byteOffset, byteLength) {
            anInstance(this, $DataView, DATA_VIEW);
            anInstance(buffer, $ArrayBuffer, DATA_VIEW);
            var bufferLength = buffer[$LENGTH];
            var offset = toInteger(byteOffset);
            if (offset < 0 || offset > bufferLength)
              throw RangeError('Wrong offset!');
            byteLength =
              byteLength === undefined
                ? bufferLength - offset
                : toLength(byteLength);
            if (offset + byteLength > bufferLength)
              throw RangeError(WRONG_LENGTH);
            this[$BUFFER] = buffer;
            this[$OFFSET] = offset;
            this[$LENGTH] = byteLength;
          };

          if (DESCRIPTORS) {
            addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
            addGetter($DataView, BUFFER, '_b');
            addGetter($DataView, BYTE_LENGTH, '_l');
            addGetter($DataView, BYTE_OFFSET, '_o');
          }

          redefineAll($DataView[PROTOTYPE], {
            getInt8: function getInt8(byteOffset) {
              return (get(this, 1, byteOffset)[0] << 24) >> 24;
            },
            getUint8: function getUint8(byteOffset) {
              return get(this, 1, byteOffset)[0];
            },
            getInt16: function getInt16(byteOffset /* , littleEndian */) {
              var bytes = get(this, 2, byteOffset, arguments[1]);
              return (((bytes[1] << 8) | bytes[0]) << 16) >> 16;
            },
            getUint16: function getUint16(byteOffset /* , littleEndian */) {
              var bytes = get(this, 2, byteOffset, arguments[1]);
              return (bytes[1] << 8) | bytes[0];
            },
            getInt32: function getInt32(byteOffset /* , littleEndian */) {
              return unpackI32(get(this, 4, byteOffset, arguments[1]));
            },
            getUint32: function getUint32(byteOffset /* , littleEndian */) {
              return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
            },
            getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
              return unpackIEEE754(
                get(this, 4, byteOffset, arguments[1]),
                23,
                4
              );
            },
            getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
              return unpackIEEE754(
                get(this, 8, byteOffset, arguments[1]),
                52,
                8
              );
            },
            setInt8: function setInt8(byteOffset, value) {
              set(this, 1, byteOffset, packI8, value);
            },
            setUint8: function setUint8(byteOffset, value) {
              set(this, 1, byteOffset, packI8, value);
            },
            setInt16: function setInt16(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 2, byteOffset, packI16, value, arguments[2]);
            },
            setUint16: function setUint16(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 2, byteOffset, packI16, value, arguments[2]);
            },
            setInt32: function setInt32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 4, byteOffset, packI32, value, arguments[2]);
            },
            setUint32: function setUint32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 4, byteOffset, packI32, value, arguments[2]);
            },
            setFloat32: function setFloat32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 4, byteOffset, packF32, value, arguments[2]);
            },
            setFloat64: function setFloat64(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(this, 8, byteOffset, packF64, value, arguments[2]);
            }
          });
        } else {
          if (
            !fails(function() {
              $ArrayBuffer(1);
            }) ||
            !fails(function() {
              new $ArrayBuffer(-1); // eslint-disable-line no-new
            }) ||
            fails(function() {
              new $ArrayBuffer(); // eslint-disable-line no-new
              new $ArrayBuffer(1.5); // eslint-disable-line no-new
              new $ArrayBuffer(NaN); // eslint-disable-line no-new
              return $ArrayBuffer.name != ARRAY_BUFFER;
            })
          ) {
            $ArrayBuffer = function ArrayBuffer(length) {
              anInstance(this, $ArrayBuffer);
              return new BaseBuffer(toIndex(length));
            };
            var ArrayBufferProto = ($ArrayBuffer[PROTOTYPE] =
              BaseBuffer[PROTOTYPE]);
            for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ) {
              if (!((key = keys[j++]) in $ArrayBuffer))
                hide($ArrayBuffer, key, BaseBuffer[key]);
            }
            if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
          }
          // iOS Safari 7.x bug
          var view = new $DataView(new $ArrayBuffer(2));
          var $setInt8 = $DataView[PROTOTYPE].setInt8;
          view.setInt8(0, 2147483648);
          view.setInt8(1, 2147483649);
          if (view.getInt8(0) || !view.getInt8(1))
            redefineAll(
              $DataView[PROTOTYPE],
              {
                setInt8: function setInt8(byteOffset, value) {
                  $setInt8.call(this, byteOffset, (value << 24) >> 24);
                },
                setUint8: function setUint8(byteOffset, value) {
                  $setInt8.call(this, byteOffset, (value << 24) >> 24);
                }
              },
              true
            );
        }
        setToStringTag($ArrayBuffer, ARRAY_BUFFER);
        setToStringTag($DataView, DATA_VIEW);
        hide($DataView[PROTOTYPE], $typed.VIEW, true);
        exports[ARRAY_BUFFER] = $ArrayBuffer;
        exports[DATA_VIEW] = $DataView;
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_typed': '../../node_modules/core-js/modules/_typed.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_to-index': '../../node_modules/core-js/modules/_to-index.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_array-fill': '../../node_modules/core-js/modules/_array-fill.js',
        './_set-to-string-tag':
          '../../node_modules/core-js/modules/_set-to-string-tag.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.typed.array-buffer.js': [
      function(require, module, exports) {
        'use strict';
        var $export = require('./_export');
        var $typed = require('./_typed');
        var buffer = require('./_typed-buffer');
        var anObject = require('./_an-object');
        var toAbsoluteIndex = require('./_to-absolute-index');
        var toLength = require('./_to-length');
        var isObject = require('./_is-object');
        var ArrayBuffer = require('./_global').ArrayBuffer;
        var speciesConstructor = require('./_species-constructor');
        var $ArrayBuffer = buffer.ArrayBuffer;
        var $DataView = buffer.DataView;
        var $isView = $typed.ABV && ArrayBuffer.isView;
        var $slice = $ArrayBuffer.prototype.slice;
        var VIEW = $typed.VIEW;
        var ARRAY_BUFFER = 'ArrayBuffer';

        $export(
          $export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer),
          { ArrayBuffer: $ArrayBuffer }
        );

        $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
          // 24.1.3.1 ArrayBuffer.isView(arg)
          isView: function isView(it) {
            return ($isView && $isView(it)) || (isObject(it) && VIEW in it);
          }
        });

        $export(
          $export.P +
            $export.U +
            $export.F *
              require('./_fails')(function() {
                return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
              }),
          ARRAY_BUFFER,
          {
            // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
            slice: function slice(start, end) {
              if ($slice !== undefined && end === undefined)
                return $slice.call(anObject(this), start); // FF fix
              var len = anObject(this).byteLength;
              var first = toAbsoluteIndex(start, len);
              var fin = toAbsoluteIndex(end === undefined ? len : end, len);
              var result = new (speciesConstructor(this, $ArrayBuffer))(
                toLength(fin - first)
              );
              var viewS = new $DataView(this);
              var viewT = new $DataView(result);
              var index = 0;
              while (first < fin) {
                viewT.setUint8(index++, viewS.getUint8(first++));
              }
              return result;
            }
          }
        );

        require('./_set-species')(ARRAY_BUFFER);
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_typed': '../../node_modules/core-js/modules/_typed.js',
        './_typed-buffer':
          '../../node_modules/core-js/modules/_typed-buffer.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_species-constructor':
          '../../node_modules/core-js/modules/_species-constructor.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_set-species': '../../node_modules/core-js/modules/_set-species.js'
      }
    ],
    '../../node_modules/core-js/modules/_typed-array.js': [
      function(require, module, exports) {
        var global = arguments[3];
        ('use strict');
        if (require('./_descriptors')) {
          var LIBRARY = require('./_library');
          var global = require('./_global');
          var fails = require('./_fails');
          var $export = require('./_export');
          var $typed = require('./_typed');
          var $buffer = require('./_typed-buffer');
          var ctx = require('./_ctx');
          var anInstance = require('./_an-instance');
          var propertyDesc = require('./_property-desc');
          var hide = require('./_hide');
          var redefineAll = require('./_redefine-all');
          var toInteger = require('./_to-integer');
          var toLength = require('./_to-length');
          var toIndex = require('./_to-index');
          var toAbsoluteIndex = require('./_to-absolute-index');
          var toPrimitive = require('./_to-primitive');
          var has = require('./_has');
          var classof = require('./_classof');
          var isObject = require('./_is-object');
          var toObject = require('./_to-object');
          var isArrayIter = require('./_is-array-iter');
          var create = require('./_object-create');
          var getPrototypeOf = require('./_object-gpo');
          var gOPN = require('./_object-gopn').f;
          var getIterFn = require('./core.get-iterator-method');
          var uid = require('./_uid');
          var wks = require('./_wks');
          var createArrayMethod = require('./_array-methods');
          var createArrayIncludes = require('./_array-includes');
          var speciesConstructor = require('./_species-constructor');
          var ArrayIterators = require('./es6.array.iterator');
          var Iterators = require('./_iterators');
          var $iterDetect = require('./_iter-detect');
          var setSpecies = require('./_set-species');
          var arrayFill = require('./_array-fill');
          var arrayCopyWithin = require('./_array-copy-within');
          var $DP = require('./_object-dp');
          var $GOPD = require('./_object-gopd');
          var dP = $DP.f;
          var gOPD = $GOPD.f;
          var RangeError = global.RangeError;
          var TypeError = global.TypeError;
          var Uint8Array = global.Uint8Array;
          var ARRAY_BUFFER = 'ArrayBuffer';
          var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
          var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
          var PROTOTYPE = 'prototype';
          var ArrayProto = Array[PROTOTYPE];
          var $ArrayBuffer = $buffer.ArrayBuffer;
          var $DataView = $buffer.DataView;
          var arrayForEach = createArrayMethod(0);
          var arrayFilter = createArrayMethod(2);
          var arraySome = createArrayMethod(3);
          var arrayEvery = createArrayMethod(4);
          var arrayFind = createArrayMethod(5);
          var arrayFindIndex = createArrayMethod(6);
          var arrayIncludes = createArrayIncludes(true);
          var arrayIndexOf = createArrayIncludes(false);
          var arrayValues = ArrayIterators.values;
          var arrayKeys = ArrayIterators.keys;
          var arrayEntries = ArrayIterators.entries;
          var arrayLastIndexOf = ArrayProto.lastIndexOf;
          var arrayReduce = ArrayProto.reduce;
          var arrayReduceRight = ArrayProto.reduceRight;
          var arrayJoin = ArrayProto.join;
          var arraySort = ArrayProto.sort;
          var arraySlice = ArrayProto.slice;
          var arrayToString = ArrayProto.toString;
          var arrayToLocaleString = ArrayProto.toLocaleString;
          var ITERATOR = wks('iterator');
          var TAG = wks('toStringTag');
          var TYPED_CONSTRUCTOR = uid('typed_constructor');
          var DEF_CONSTRUCTOR = uid('def_constructor');
          var ALL_CONSTRUCTORS = $typed.CONSTR;
          var TYPED_ARRAY = $typed.TYPED;
          var VIEW = $typed.VIEW;
          var WRONG_LENGTH = 'Wrong length!';

          var $map = createArrayMethod(1, function(O, length) {
            return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
          });

          var LITTLE_ENDIAN = fails(function() {
            // eslint-disable-next-line no-undef
            return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
          });

          var FORCED_SET =
            !!Uint8Array &&
            !!Uint8Array[PROTOTYPE].set &&
            fails(function() {
              new Uint8Array(1).set({});
            });

          var toOffset = function(it, BYTES) {
            var offset = toInteger(it);
            if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
            return offset;
          };

          var validate = function(it) {
            if (isObject(it) && TYPED_ARRAY in it) return it;
            throw TypeError(it + ' is not a typed array!');
          };

          var allocate = function(C, length) {
            if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
              throw TypeError('It is not a typed array constructor!');
            }
            return new C(length);
          };

          var speciesFromList = function(O, list) {
            return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
          };

          var fromList = function(C, list) {
            var index = 0;
            var length = list.length;
            var result = allocate(C, length);
            while (length > index) result[index] = list[index++];
            return result;
          };

          var addGetter = function(it, key, internal) {
            dP(it, key, {
              get: function() {
                return this._d[internal];
              }
            });
          };

          var $from = function from(source /* , mapfn, thisArg */) {
            var O = toObject(source);
            var aLen = arguments.length;
            var mapfn = aLen > 1 ? arguments[1] : undefined;
            var mapping = mapfn !== undefined;
            var iterFn = getIterFn(O);
            var i, length, values, result, step, iterator;
            if (iterFn != undefined && !isArrayIter(iterFn)) {
              for (
                iterator = iterFn.call(O), values = [], i = 0;
                !(step = iterator.next()).done;
                i++
              ) {
                values.push(step.value);
              }
              O = values;
            }
            if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
            for (
              i = 0,
                length = toLength(O.length),
                result = allocate(this, length);
              length > i;
              i++
            ) {
              result[i] = mapping ? mapfn(O[i], i) : O[i];
            }
            return result;
          };

          var $of = function of(/* ...items */) {
            var index = 0;
            var length = arguments.length;
            var result = allocate(this, length);
            while (length > index) result[index] = arguments[index++];
            return result;
          };

          // iOS Safari 6.x fails here
          var TO_LOCALE_BUG =
            !!Uint8Array &&
            fails(function() {
              arrayToLocaleString.call(new Uint8Array(1));
            });

          var $toLocaleString = function toLocaleString() {
            return arrayToLocaleString.apply(
              TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this),
              arguments
            );
          };

          var proto = {
            copyWithin: function copyWithin(target, start /* , end */) {
              return arrayCopyWithin.call(
                validate(this),
                target,
                start,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            every: function every(callbackfn /* , thisArg */) {
              return arrayEvery(
                validate(this),
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            fill: function fill(value /* , start, end */) {
              // eslint-disable-line no-unused-vars
              return arrayFill.apply(validate(this), arguments);
            },
            filter: function filter(callbackfn /* , thisArg */) {
              return speciesFromList(
                this,
                arrayFilter(
                  validate(this),
                  callbackfn,
                  arguments.length > 1 ? arguments[1] : undefined
                )
              );
            },
            find: function find(predicate /* , thisArg */) {
              return arrayFind(
                validate(this),
                predicate,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            findIndex: function findIndex(predicate /* , thisArg */) {
              return arrayFindIndex(
                validate(this),
                predicate,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            forEach: function forEach(callbackfn /* , thisArg */) {
              arrayForEach(
                validate(this),
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            indexOf: function indexOf(searchElement /* , fromIndex */) {
              return arrayIndexOf(
                validate(this),
                searchElement,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            includes: function includes(searchElement /* , fromIndex */) {
              return arrayIncludes(
                validate(this),
                searchElement,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            join: function join(separator) {
              // eslint-disable-line no-unused-vars
              return arrayJoin.apply(validate(this), arguments);
            },
            lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) {
              // eslint-disable-line no-unused-vars
              return arrayLastIndexOf.apply(validate(this), arguments);
            },
            map: function map(mapfn /* , thisArg */) {
              return $map(
                validate(this),
                mapfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            reduce: function reduce(callbackfn /* , initialValue */) {
              // eslint-disable-line no-unused-vars
              return arrayReduce.apply(validate(this), arguments);
            },
            reduceRight: function reduceRight(callbackfn /* , initialValue */) {
              // eslint-disable-line no-unused-vars
              return arrayReduceRight.apply(validate(this), arguments);
            },
            reverse: function reverse() {
              var that = this;
              var length = validate(that).length;
              var middle = Math.floor(length / 2);
              var index = 0;
              var value;
              while (index < middle) {
                value = that[index];
                that[index++] = that[--length];
                that[length] = value;
              }
              return that;
            },
            some: function some(callbackfn /* , thisArg */) {
              return arraySome(
                validate(this),
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
            sort: function sort(comparefn) {
              return arraySort.call(validate(this), comparefn);
            },
            subarray: function subarray(begin, end) {
              var O = validate(this);
              var length = O.length;
              var $begin = toAbsoluteIndex(begin, length);
              return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
                O.buffer,
                O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
                toLength(
                  (end === undefined ? length : toAbsoluteIndex(end, length)) -
                    $begin
                )
              );
            }
          };

          var $slice = function slice(start, end) {
            return speciesFromList(
              this,
              arraySlice.call(validate(this), start, end)
            );
          };

          var $set = function set(arrayLike /* , offset */) {
            validate(this);
            var offset = toOffset(arguments[1], 1);
            var length = this.length;
            var src = toObject(arrayLike);
            var len = toLength(src.length);
            var index = 0;
            if (len + offset > length) throw RangeError(WRONG_LENGTH);
            while (index < len) this[offset + index] = src[index++];
          };

          var $iterators = {
            entries: function entries() {
              return arrayEntries.call(validate(this));
            },
            keys: function keys() {
              return arrayKeys.call(validate(this));
            },
            values: function values() {
              return arrayValues.call(validate(this));
            }
          };

          var isTAIndex = function(target, key) {
            return (
              isObject(target) &&
              target[TYPED_ARRAY] &&
              typeof key != 'symbol' &&
              key in target &&
              String(+key) == String(key)
            );
          };
          var $getDesc = function getOwnPropertyDescriptor(target, key) {
            return isTAIndex(target, (key = toPrimitive(key, true)))
              ? propertyDesc(2, target[key])
              : gOPD(target, key);
          };
          var $setDesc = function defineProperty(target, key, desc) {
            if (
              isTAIndex(target, (key = toPrimitive(key, true))) &&
              isObject(desc) &&
              has(desc, 'value') &&
              !has(desc, 'get') &&
              !has(desc, 'set') &&
              // TODO: add validation descriptor w/o calling accessors
              !desc.configurable &&
              (!has(desc, 'writable') || desc.writable) &&
              (!has(desc, 'enumerable') || desc.enumerable)
            ) {
              target[key] = desc.value;
              return target;
            }
            return dP(target, key, desc);
          };

          if (!ALL_CONSTRUCTORS) {
            $GOPD.f = $getDesc;
            $DP.f = $setDesc;
          }

          $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
            getOwnPropertyDescriptor: $getDesc,
            defineProperty: $setDesc
          });

          if (
            fails(function() {
              arrayToString.call({});
            })
          ) {
            arrayToString = arrayToLocaleString = function toString() {
              return arrayJoin.call(this);
            };
          }

          var $TypedArrayPrototype$ = redefineAll({}, proto);
          redefineAll($TypedArrayPrototype$, $iterators);
          hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
          redefineAll($TypedArrayPrototype$, {
            slice: $slice,
            set: $set,
            constructor: function() {
              /* noop */
            },
            toString: arrayToString,
            toLocaleString: $toLocaleString
          });
          addGetter($TypedArrayPrototype$, 'buffer', 'b');
          addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
          addGetter($TypedArrayPrototype$, 'byteLength', 'l');
          addGetter($TypedArrayPrototype$, 'length', 'e');
          dP($TypedArrayPrototype$, TAG, {
            get: function() {
              return this[TYPED_ARRAY];
            }
          });

          // eslint-disable-next-line max-statements
          module.exports = function(KEY, BYTES, wrapper, CLAMPED) {
            CLAMPED = !!CLAMPED;
            var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
            var GETTER = 'get' + KEY;
            var SETTER = 'set' + KEY;
            var TypedArray = global[NAME];
            var Base = TypedArray || {};
            var TAC = TypedArray && getPrototypeOf(TypedArray);
            var FORCED = !TypedArray || !$typed.ABV;
            var O = {};
            var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
            var getter = function(that, index) {
              var data = that._d;
              return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
            };
            var setter = function(that, index, value) {
              var data = that._d;
              if (CLAMPED)
                value =
                  (value = Math.round(value)) < 0
                    ? 0
                    : value > 0xff
                    ? 0xff
                    : value & 0xff;
              data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
            };
            var addElement = function(that, index) {
              dP(that, index, {
                get: function() {
                  return getter(this, index);
                },
                set: function(value) {
                  return setter(this, index, value);
                },
                enumerable: true
              });
            };
            if (FORCED) {
              TypedArray = wrapper(function(that, data, $offset, $length) {
                anInstance(that, TypedArray, NAME, '_d');
                var index = 0;
                var offset = 0;
                var buffer, byteLength, length, klass;
                if (!isObject(data)) {
                  length = toIndex(data);
                  byteLength = length * BYTES;
                  buffer = new $ArrayBuffer(byteLength);
                } else if (
                  data instanceof $ArrayBuffer ||
                  (klass = classof(data)) == ARRAY_BUFFER ||
                  klass == SHARED_BUFFER
                ) {
                  buffer = data;
                  offset = toOffset($offset, BYTES);
                  var $len = data.byteLength;
                  if ($length === undefined) {
                    if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                    byteLength = $len - offset;
                    if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                  } else {
                    byteLength = toLength($length) * BYTES;
                    if (byteLength + offset > $len)
                      throw RangeError(WRONG_LENGTH);
                  }
                  length = byteLength / BYTES;
                } else if (TYPED_ARRAY in data) {
                  return fromList(TypedArray, data);
                } else {
                  return $from.call(TypedArray, data);
                }
                hide(that, '_d', {
                  b: buffer,
                  o: offset,
                  l: byteLength,
                  e: length,
                  v: new $DataView(buffer)
                });
                while (index < length) addElement(that, index++);
              });
              TypedArrayPrototype = TypedArray[PROTOTYPE] = create(
                $TypedArrayPrototype$
              );
              hide(TypedArrayPrototype, 'constructor', TypedArray);
            } else if (
              !fails(function() {
                TypedArray(1);
              }) ||
              !fails(function() {
                new TypedArray(-1); // eslint-disable-line no-new
              }) ||
              !$iterDetect(function(iter) {
                new TypedArray(); // eslint-disable-line no-new
                new TypedArray(null); // eslint-disable-line no-new
                new TypedArray(1.5); // eslint-disable-line no-new
                new TypedArray(iter); // eslint-disable-line no-new
              }, true)
            ) {
              TypedArray = wrapper(function(that, data, $offset, $length) {
                anInstance(that, TypedArray, NAME);
                var klass;
                // `ws` module bug, temporarily remove validation length for Uint8Array
                // https://github.com/websockets/ws/pull/645
                if (!isObject(data)) return new Base(toIndex(data));
                if (
                  data instanceof $ArrayBuffer ||
                  (klass = classof(data)) == ARRAY_BUFFER ||
                  klass == SHARED_BUFFER
                ) {
                  return $length !== undefined
                    ? new Base(data, toOffset($offset, BYTES), $length)
                    : $offset !== undefined
                    ? new Base(data, toOffset($offset, BYTES))
                    : new Base(data);
                }
                if (TYPED_ARRAY in data) return fromList(TypedArray, data);
                return $from.call(TypedArray, data);
              });
              arrayForEach(
                TAC !== Function.prototype
                  ? gOPN(Base).concat(gOPN(TAC))
                  : gOPN(Base),
                function(key) {
                  if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
                }
              );
              TypedArray[PROTOTYPE] = TypedArrayPrototype;
              if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
            }
            var $nativeIterator = TypedArrayPrototype[ITERATOR];
            var CORRECT_ITER_NAME =
              !!$nativeIterator &&
              ($nativeIterator.name == 'values' ||
                $nativeIterator.name == undefined);
            var $iterator = $iterators.values;
            hide(TypedArray, TYPED_CONSTRUCTOR, true);
            hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
            hide(TypedArrayPrototype, VIEW, true);
            hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

            if (
              CLAMPED
                ? new TypedArray(1)[TAG] != NAME
                : !(TAG in TypedArrayPrototype)
            ) {
              dP(TypedArrayPrototype, TAG, {
                get: function() {
                  return NAME;
                }
              });
            }

            O[NAME] = TypedArray;

            $export(
              $export.G + $export.W + $export.F * (TypedArray != Base),
              O
            );

            $export($export.S, NAME, {
              BYTES_PER_ELEMENT: BYTES
            });

            $export(
              $export.S +
                $export.F *
                  fails(function() {
                    Base.of.call(TypedArray, 1);
                  }),
              NAME,
              {
                from: $from,
                of: $of
              }
            );

            if (!(BYTES_PER_ELEMENT in TypedArrayPrototype))
              hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

            $export($export.P, NAME, proto);

            setSpecies(NAME);

            $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

            $export(
              $export.P + $export.F * !CORRECT_ITER_NAME,
              NAME,
              $iterators
            );

            if (!LIBRARY && TypedArrayPrototype.toString != arrayToString)
              TypedArrayPrototype.toString = arrayToString;

            $export(
              $export.P +
                $export.F *
                  fails(function() {
                    new TypedArray(1).slice();
                  }),
              NAME,
              { slice: $slice }
            );

            $export(
              $export.P +
                $export.F *
                  (fails(function() {
                    return (
                      [1, 2].toLocaleString() !=
                      new TypedArray([1, 2]).toLocaleString()
                    );
                  }) ||
                    !fails(function() {
                      TypedArrayPrototype.toLocaleString.call([1, 2]);
                    })),
              NAME,
              { toLocaleString: $toLocaleString }
            );

            Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
            if (!LIBRARY && !CORRECT_ITER_NAME)
              hide(TypedArrayPrototype, ITERATOR, $iterator);
          };
        } else
          module.exports = function() {
            /* empty */
          };
      },
      {
        './_descriptors': '../../node_modules/core-js/modules/_descriptors.js',
        './_library': '../../node_modules/core-js/modules/_library.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_fails': '../../node_modules/core-js/modules/_fails.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_typed': '../../node_modules/core-js/modules/_typed.js',
        './_typed-buffer':
          '../../node_modules/core-js/modules/_typed-buffer.js',
        './_ctx': '../../node_modules/core-js/modules/_ctx.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_property-desc':
          '../../node_modules/core-js/modules/_property-desc.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_to-integer': '../../node_modules/core-js/modules/_to-integer.js',
        './_to-length': '../../node_modules/core-js/modules/_to-length.js',
        './_to-index': '../../node_modules/core-js/modules/_to-index.js',
        './_to-absolute-index':
          '../../node_modules/core-js/modules/_to-absolute-index.js',
        './_to-primitive':
          '../../node_modules/core-js/modules/_to-primitive.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_classof': '../../node_modules/core-js/modules/_classof.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_to-object': '../../node_modules/core-js/modules/_to-object.js',
        './_is-array-iter':
          '../../node_modules/core-js/modules/_is-array-iter.js',
        './_object-create':
          '../../node_modules/core-js/modules/_object-create.js',
        './_object-gpo': '../../node_modules/core-js/modules/_object-gpo.js',
        './_object-gopn': '../../node_modules/core-js/modules/_object-gopn.js',
        './core.get-iterator-method':
          '../../node_modules/core-js/modules/core.get-iterator-method.js',
        './_uid': '../../node_modules/core-js/modules/_uid.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js',
        './_array-methods':
          '../../node_modules/core-js/modules/_array-methods.js',
        './_array-includes':
          '../../node_modules/core-js/modules/_array-includes.js',
        './_species-constructor':
          '../../node_modules/core-js/modules/_species-constructor.js',
        './es6.array.iterator':
          '../../node_modules/core-js/modules/es6.array.iterator.js',
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_iter-detect': '../../node_modules/core-js/modules/_iter-detect.js',
        './_set-species': '../../node_modules/core-js/modules/_set-species.js',
        './_array-fill': '../../node_modules/core-js/modules/_array-fill.js',
        './_array-copy-within':
          '../../node_modules/core-js/modules/_array-copy-within.js',
        './_object-dp': '../../node_modules/core-js/modules/_object-dp.js',
        './_object-gopd': '../../node_modules/core-js/modules/_object-gopd.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.typed.int8-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Int8', 1, function(init) {
          return function Int8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.uint8-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Uint8', 1, function(init) {
          return function Uint8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js': [
      function(require, module, exports) {
        require('./_typed-array')(
          'Uint8',
          1,
          function(init) {
            return function Uint8ClampedArray(data, byteOffset, length) {
              return init(this, data, byteOffset, length);
            };
          },
          true
        );
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.int16-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Int16', 2, function(init) {
          return function Int16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.uint16-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Uint16', 2, function(init) {
          return function Uint16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.int32-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Int32', 4, function(init) {
          return function Int32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.uint32-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Uint32', 4, function(init) {
          return function Uint32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.float32-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Float32', 4, function(init) {
          return function Float32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/es6.typed.float64-array.js': [
      function(require, module, exports) {
        require('./_typed-array')('Float64', 8, function(init) {
          return function Float64Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });
      },
      { './_typed-array': '../../node_modules/core-js/modules/_typed-array.js' }
    ],
    '../../node_modules/core-js/modules/_collection-weak.js': [
      function(require, module, exports) {
        'use strict';
        var redefineAll = require('./_redefine-all');
        var getWeak = require('./_meta').getWeak;
        var anObject = require('./_an-object');
        var isObject = require('./_is-object');
        var anInstance = require('./_an-instance');
        var forOf = require('./_for-of');
        var createArrayMethod = require('./_array-methods');
        var $has = require('./_has');
        var validate = require('./_validate-collection');
        var arrayFind = createArrayMethod(5);
        var arrayFindIndex = createArrayMethod(6);
        var id = 0;

        // fallback for uncaught frozen keys
        var uncaughtFrozenStore = function(that) {
          return that._l || (that._l = new UncaughtFrozenStore());
        };
        var UncaughtFrozenStore = function() {
          this.a = [];
        };
        var findUncaughtFrozen = function(store, key) {
          return arrayFind(store.a, function(it) {
            return it[0] === key;
          });
        };
        UncaughtFrozenStore.prototype = {
          get: function(key) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) return entry[1];
          },
          has: function(key) {
            return !!findUncaughtFrozen(this, key);
          },
          set: function(key, value) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) entry[1] = value;
            else this.a.push([key, value]);
          },
          delete: function(key) {
            var index = arrayFindIndex(this.a, function(it) {
              return it[0] === key;
            });
            if (~index) this.a.splice(index, 1);
            return !!~index;
          }
        };

        module.exports = {
          getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
            var C = wrapper(function(that, iterable) {
              anInstance(that, C, NAME, '_i');
              that._t = NAME; // collection type
              that._i = id++; // collection id
              that._l = undefined; // leak store for uncaught frozen objects
              if (iterable != undefined)
                forOf(iterable, IS_MAP, that[ADDER], that);
            });
            redefineAll(C.prototype, {
              // 23.3.3.2 WeakMap.prototype.delete(key)
              // 23.4.3.3 WeakSet.prototype.delete(value)
              delete: function(key) {
                if (!isObject(key)) return false;
                var data = getWeak(key);
                if (data === true)
                  return uncaughtFrozenStore(validate(this, NAME))['delete'](
                    key
                  );
                return data && $has(data, this._i) && delete data[this._i];
              },
              // 23.3.3.4 WeakMap.prototype.has(key)
              // 23.4.3.4 WeakSet.prototype.has(value)
              has: function has(key) {
                if (!isObject(key)) return false;
                var data = getWeak(key);
                if (data === true)
                  return uncaughtFrozenStore(validate(this, NAME)).has(key);
                return data && $has(data, this._i);
              }
            });
            return C;
          },
          def: function(that, key, value) {
            var data = getWeak(anObject(key), true);
            if (data === true) uncaughtFrozenStore(that).set(key, value);
            else data[that._i] = value;
            return that;
          },
          ufstore: uncaughtFrozenStore
        };
      },
      {
        './_redefine-all':
          '../../node_modules/core-js/modules/_redefine-all.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_an-object': '../../node_modules/core-js/modules/_an-object.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_an-instance': '../../node_modules/core-js/modules/_an-instance.js',
        './_for-of': '../../node_modules/core-js/modules/_for-of.js',
        './_array-methods':
          '../../node_modules/core-js/modules/_array-methods.js',
        './_has': '../../node_modules/core-js/modules/_has.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.weak-map.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('./_global');
        var each = require('./_array-methods')(0);
        var redefine = require('./_redefine');
        var meta = require('./_meta');
        var assign = require('./_object-assign');
        var weak = require('./_collection-weak');
        var isObject = require('./_is-object');
        var validate = require('./_validate-collection');
        var NATIVE_WEAK_MAP = require('./_validate-collection');
        var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
        var WEAK_MAP = 'WeakMap';
        var getWeak = meta.getWeak;
        var isExtensible = Object.isExtensible;
        var uncaughtFrozenStore = weak.ufstore;
        var InternalMap;

        var wrapper = function(get) {
          return function WeakMap() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        };

        var methods = {
          // 23.3.3.3 WeakMap.prototype.get(key)
          get: function get(key) {
            if (isObject(key)) {
              var data = getWeak(key);
              if (data === true)
                return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
              return data ? data[this._i] : undefined;
            }
          },
          // 23.3.3.5 WeakMap.prototype.set(key, value)
          set: function set(key, value) {
            return weak.def(validate(this, WEAK_MAP), key, value);
          }
        };

        // 23.3 WeakMap Objects
        var $WeakMap = (module.exports = require('./_collection')(
          WEAK_MAP,
          wrapper,
          methods,
          weak,
          true,
          true
        ));

        // IE11 WeakMap frozen keys fix
        if (NATIVE_WEAK_MAP && IS_IE11) {
          InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
          assign(InternalMap.prototype, methods);
          meta.NEED = true;
          each(['delete', 'has', 'get', 'set'], function(key) {
            var proto = $WeakMap.prototype;
            var method = proto[key];
            redefine(proto, key, function(a, b) {
              // store frozen objects on internal weakmap shim
              if (isObject(a) && !isExtensible(a)) {
                if (!this._f) this._f = new InternalMap();
                var result = this._f[key](a, b);
                return key == 'set' ? this : result;
                // store all the rest on native weakmap
              }
              return method.call(this, a, b);
            });
          });
        }
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_array-methods':
          '../../node_modules/core-js/modules/_array-methods.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_meta': '../../node_modules/core-js/modules/_meta.js',
        './_object-assign':
          '../../node_modules/core-js/modules/_object-assign.js',
        './_collection-weak':
          '../../node_modules/core-js/modules/_collection-weak.js',
        './_is-object': '../../node_modules/core-js/modules/_is-object.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js',
        './_collection': '../../node_modules/core-js/modules/_collection.js'
      }
    ],
    '../../node_modules/core-js/modules/es6.weak-set.js': [
      function(require, module, exports) {
        'use strict';
        var weak = require('./_collection-weak');
        var validate = require('./_validate-collection');
        var WEAK_SET = 'WeakSet';

        // 23.4 WeakSet Objects
        require('./_collection')(
          WEAK_SET,
          function(get) {
            return function WeakSet() {
              return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
          },
          {
            // 23.4.3.1 WeakSet.prototype.add(value)
            add: function add(value) {
              return weak.def(validate(this, WEAK_SET), value, true);
            }
          },
          weak,
          false,
          true
        );
      },
      {
        './_collection-weak':
          '../../node_modules/core-js/modules/_collection-weak.js',
        './_validate-collection':
          '../../node_modules/core-js/modules/_validate-collection.js',
        './_collection': '../../node_modules/core-js/modules/_collection.js'
      }
    ],
    '../../node_modules/core-js/modules/web.timers.js': [
      function(require, module, exports) {
        // ie9- setTimeout & setInterval additional parameters fix
        var global = require('./_global');
        var $export = require('./_export');
        var userAgent = require('./_user-agent');
        var slice = [].slice;
        var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
        var wrap = function(set) {
          return function(fn, time /* , ...args */) {
            var boundArgs = arguments.length > 2;
            var args = boundArgs ? slice.call(arguments, 2) : false;
            return set(
              boundArgs
                ? function() {
                    // eslint-disable-next-line no-new-func
                    (typeof fn == 'function' ? fn : Function(fn)).apply(
                      this,
                      args
                    );
                  }
                : fn,
              time
            );
          };
        };
        $export($export.G + $export.B + $export.F * MSIE, {
          setTimeout: wrap(global.setTimeout),
          setInterval: wrap(global.setInterval)
        });
      },
      {
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_user-agent': '../../node_modules/core-js/modules/_user-agent.js'
      }
    ],
    '../../node_modules/core-js/modules/web.immediate.js': [
      function(require, module, exports) {
        var $export = require('./_export');
        var $task = require('./_task');
        $export($export.G + $export.B, {
          setImmediate: $task.set,
          clearImmediate: $task.clear
        });
      },
      {
        './_export': '../../node_modules/core-js/modules/_export.js',
        './_task': '../../node_modules/core-js/modules/_task.js'
      }
    ],
    '../../node_modules/core-js/modules/web.dom.iterable.js': [
      function(require, module, exports) {
        var $iterators = require('./es6.array.iterator');
        var getKeys = require('./_object-keys');
        var redefine = require('./_redefine');
        var global = require('./_global');
        var hide = require('./_hide');
        var Iterators = require('./_iterators');
        var wks = require('./_wks');
        var ITERATOR = wks('iterator');
        var TO_STRING_TAG = wks('toStringTag');
        var ArrayValues = Iterators.Array;

        var DOMIterables = {
          CSSRuleList: true, // TODO: Not spec compliant, should be false.
          CSSStyleDeclaration: false,
          CSSValueList: false,
          ClientRectList: false,
          DOMRectList: false,
          DOMStringList: false,
          DOMTokenList: true,
          DataTransferItemList: false,
          FileList: false,
          HTMLAllCollection: false,
          HTMLCollection: false,
          HTMLFormElement: false,
          HTMLSelectElement: false,
          MediaList: true, // TODO: Not spec compliant, should be false.
          MimeTypeArray: false,
          NamedNodeMap: false,
          NodeList: true,
          PaintRequestList: false,
          Plugin: false,
          PluginArray: false,
          SVGLengthList: false,
          SVGNumberList: false,
          SVGPathSegList: false,
          SVGPointList: false,
          SVGStringList: false,
          SVGTransformList: false,
          SourceBufferList: false,
          StyleSheetList: true, // TODO: Not spec compliant, should be false.
          TextTrackCueList: false,
          TextTrackList: false,
          TouchList: false
        };

        for (
          var collections = getKeys(DOMIterables), i = 0;
          i < collections.length;
          i++
        ) {
          var NAME = collections[i];
          var explicit = DOMIterables[NAME];
          var Collection = global[NAME];
          var proto = Collection && Collection.prototype;
          var key;
          if (proto) {
            if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
            if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
            Iterators[NAME] = ArrayValues;
            if (explicit)
              for (key in $iterators)
                if (!proto[key]) redefine(proto, key, $iterators[key], true);
          }
        }
      },
      {
        './es6.array.iterator':
          '../../node_modules/core-js/modules/es6.array.iterator.js',
        './_object-keys': '../../node_modules/core-js/modules/_object-keys.js',
        './_redefine': '../../node_modules/core-js/modules/_redefine.js',
        './_global': '../../node_modules/core-js/modules/_global.js',
        './_hide': '../../node_modules/core-js/modules/_hide.js',
        './_iterators': '../../node_modules/core-js/modules/_iterators.js',
        './_wks': '../../node_modules/core-js/modules/_wks.js'
      }
    ],
    '../../node_modules/regenerator-runtime/runtime.js': [
      function(require, module, exports) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var runtime = (function(exports) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          exports.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function() {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[
            toStringTagSymbol
          ] = GeneratorFunction.displayName = 'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function(method) {
              prototype[method] = function(arg) {
                return this._invoke(method, arg);
              };
            });
          }

          exports.isGeneratorFunction = function(genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          exports.mark = function(genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          exports.awrap = function(arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === 'object' &&
                  hasOwn.call(value, '__await')
                ) {
                  return PromiseImpl.resolve(value.__await).then(
                    function(value) {
                      invoke('next', value, resolve, reject);
                    },
                    function(err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return PromiseImpl.resolve(value).then(
                  function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                  },
                  function(error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke('throw', error, resolve, reject);
                  }
                );
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function(resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function() {
            return this;
          };
          exports.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          exports.async = function(
            innerFn,
            outerFn,
            self,
            tryLocsList,
            PromiseImpl
          ) {
            if (PromiseImpl === void 0) PromiseImpl = Promise;

            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList),
              PromiseImpl
            );

            return exports.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function(result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done
                  };
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw';
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === 'throw') {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator['return']) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return';
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = 'throw';
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === 'throw') {
              context.method = 'throw';
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = 'throw';
              context.arg = new TypeError('iterator result is not an object');
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next';
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function() {
            return this;
          };

          Gp.toString = function() {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          exports.keys = function(object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          exports.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function(skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = 'next';
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === 't' &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function() {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function(exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next';
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function(type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = 'next';
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function(record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg;
                this.method = 'return';
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function(finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function(tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function(iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
              };

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            }
          };

          // Regardless of whether this script is executing as a CommonJS module
          // or not, return the runtime object so that we can declare the variable
          // regeneratorRuntime in the outer scope, which allows this module to be
          // injected easily by `bin/regenerator --include-runtime script.js`.
          return exports;
        })(
          // If this script is executing as a CommonJS module, use module.exports
          // as the regeneratorRuntime namespace. Otherwise create a new empty
          // object. Either way, the resulting object will be used to initialize
          // the regeneratorRuntime variable at the top of this file.
          typeof module === 'object' ? module.exports : {}
        );

        try {
          regeneratorRuntime = runtime;
        } catch (accidentalStrictMode) {
          // This module should not be running in strict mode, so the above
          // assignment should always work unless something is misconfigured. Just
          // in case runtime.js accidentally runs in strict mode, we can escape
          // strict mode using a global Function call. This could conceivably fail
          // if a Content Security Policy forbids using Function, but in that case
          // the proper solution is to fix the accidental strict mode problem. If
          // you've misconfigured your bundler to force strict mode and applied a
          // CSP to forbid Function, and you're not willing to fix either of those
          // problems, please detail your unique predicament in a GitHub issue.
          Function('r', 'regeneratorRuntime = r')(runtime);
        }
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/global.js': [
      function(require, module, exports) {
        var global = arguments[3];
        var check = function(it) {
          return it && it.Math == Math && it;
        };

        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        module.exports =
          // eslint-disable-next-line no-undef
          check(typeof globalThis == 'object' && globalThis) ||
          check(typeof window == 'object' && window) ||
          check(typeof self == 'object' && self) ||
          check(typeof global == 'object' && global) ||
          // eslint-disable-next-line no-new-func
          Function('return this')();
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/fails.js': [
      function(require, module, exports) {
        module.exports = function(exec) {
          try {
            return !!exec();
          } catch (error) {
            return true;
          }
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');

        // Thank's IE8 for his funny defineProperty
        module.exports = !fails(function() {
          return (
            Object.defineProperty({}, 1, {
              get: function() {
                return 7;
              }
            })[1] != 7
          );
        });
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-property-is-enumerable.js': [
      function(require, module, exports) {
        'use strict';
        var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // Nashorn ~ JDK8 bug
        var NASHORN_BUG =
          getOwnPropertyDescriptor &&
          !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

        // `Object.prototype.propertyIsEnumerable` method implementation
        // https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
        exports.f = NASHORN_BUG
          ? function propertyIsEnumerable(V) {
              var descriptor = getOwnPropertyDescriptor(this, V);
              return !!descriptor && descriptor.enumerable;
            }
          : nativePropertyIsEnumerable;
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/create-property-descriptor.js': [
      function(require, module, exports) {
        module.exports = function(bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value
          };
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/classof-raw.js': [
      function(require, module, exports) {
        var toString = {}.toString;

        module.exports = function(it) {
          return toString.call(it).slice(8, -1);
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/indexed-object.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');
        var classof = require('../internals/classof-raw');

        var split = ''.split;

        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        module.exports = fails(function() {
          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
          // eslint-disable-next-line no-prototype-builtins
          return !Object('z').propertyIsEnumerable(0);
        })
          ? function(it) {
              return classof(it) == 'String' ? split.call(it, '') : Object(it);
            }
          : Object;
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/classof-raw':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof-raw.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js': [
      function(require, module, exports) {
        // `RequireObjectCoercible` abstract operation
        // https://tc39.github.io/ecma262/#sec-requireobjectcoercible
        module.exports = function(it) {
          if (it == undefined) throw TypeError("Can't call method on " + it);
          return it;
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-indexed-object.js': [
      function(require, module, exports) {
        // toObject with fallback for non-array-like ES3 strings
        var IndexedObject = require('../internals/indexed-object');
        var requireObjectCoercible = require('../internals/require-object-coercible');

        module.exports = function(it) {
          return IndexedObject(requireObjectCoercible(it));
        };
      },
      {
        '../internals/indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/indexed-object.js',
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js': [
      function(require, module, exports) {
        module.exports = function(it) {
          return typeof it === 'object'
            ? it !== null
            : typeof it === 'function';
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-primitive.js': [
      function(require, module, exports) {
        var isObject = require('../internals/is-object');

        // `ToPrimitive` abstract operation
        // https://tc39.github.io/ecma262/#sec-toprimitive
        // instead of the ES6 spec version, we didn't implement @@toPrimitive case
        // and the second argument - flag - preferred type is a string
        module.exports = function(input, PREFERRED_STRING) {
          if (!isObject(input)) return input;
          var fn, val;
          if (
            PREFERRED_STRING &&
            typeof (fn = input.toString) == 'function' &&
            !isObject((val = fn.call(input)))
          )
            return val;
          if (
            typeof (fn = input.valueOf) == 'function' &&
            !isObject((val = fn.call(input)))
          )
            return val;
          if (
            !PREFERRED_STRING &&
            typeof (fn = input.toString) == 'function' &&
            !isObject((val = fn.call(input)))
          )
            return val;
          throw TypeError("Can't convert object to primitive value");
        };
      },
      {
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/has.js': [
      function(require, module, exports) {
        var hasOwnProperty = {}.hasOwnProperty;

        module.exports = function(it, key) {
          return hasOwnProperty.call(it, key);
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/document-create-element.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var isObject = require('../internals/is-object');

        var document = global.document;
        // typeof document.createElement is 'object' in old IE
        var EXISTS = isObject(document) && isObject(document.createElement);

        module.exports = function(it) {
          return EXISTS ? document.createElement(it) : {};
        };
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/ie8-dom-define.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');
        var createElement = require('../internals/document-create-element');

        // Thank's IE8 for his funny defineProperty
        module.exports =
          !DESCRIPTORS &&
          !fails(function() {
            return (
              Object.defineProperty(createElement('div'), 'a', {
                get: function() {
                  return 7;
                }
              }).a != 7
            );
          });
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/document-create-element':
          '../../node_modules/simplebar/node_modules/core-js/internals/document-create-element.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-descriptor.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        var toIndexedObject = require('../internals/to-indexed-object');
        var toPrimitive = require('../internals/to-primitive');
        var has = require('../internals/has');
        var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');

        var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
        exports.f = DESCRIPTORS
          ? nativeGetOwnPropertyDescriptor
          : function getOwnPropertyDescriptor(O, P) {
              O = toIndexedObject(O);
              P = toPrimitive(P, true);
              if (IE8_DOM_DEFINE)
                try {
                  return nativeGetOwnPropertyDescriptor(O, P);
                } catch (error) {
                  /* empty */
                }
              if (has(O, P))
                return createPropertyDescriptor(
                  !propertyIsEnumerableModule.f.call(O, P),
                  O[P]
                );
            };
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/object-property-is-enumerable':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-property-is-enumerable.js',
        '../internals/create-property-descriptor':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-property-descriptor.js',
        '../internals/to-indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-indexed-object.js',
        '../internals/to-primitive':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-primitive.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/ie8-dom-define':
          '../../node_modules/simplebar/node_modules/core-js/internals/ie8-dom-define.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js': [
      function(require, module, exports) {
        var isObject = require('../internals/is-object');

        module.exports = function(it) {
          if (!isObject(it)) {
            throw TypeError(String(it) + ' is not an object');
          }
          return it;
        };
      },
      {
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');
        var anObject = require('../internals/an-object');
        var toPrimitive = require('../internals/to-primitive');

        var nativeDefineProperty = Object.defineProperty;

        // `Object.defineProperty` method
        // https://tc39.github.io/ecma262/#sec-object.defineproperty
        exports.f = DESCRIPTORS
          ? nativeDefineProperty
          : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPrimitive(P, true);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return nativeDefineProperty(O, P, Attributes);
                } catch (error) {
                  /* empty */
                }
              if ('get' in Attributes || 'set' in Attributes)
                throw TypeError('Accessors not supported');
              if ('value' in Attributes) O[P] = Attributes.value;
              return O;
            };
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/ie8-dom-define':
          '../../node_modules/simplebar/node_modules/core-js/internals/ie8-dom-define.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/to-primitive':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-primitive.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var definePropertyModule = require('../internals/object-define-property');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');

        module.exports = DESCRIPTORS
          ? function(object, key, value) {
              return definePropertyModule.f(
                object,
                key,
                createPropertyDescriptor(1, value)
              );
            }
          : function(object, key, value) {
              object[key] = value;
              return object;
            };
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js',
        '../internals/create-property-descriptor':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-property-descriptor.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/set-global.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');

        module.exports = function(key, value) {
          try {
            createNonEnumerableProperty(global, key, value);
          } catch (error) {
            global[key] = value;
          }
          return value;
        };
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/shared-store.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var setGlobal = require('../internals/set-global');

        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || setGlobal(SHARED, {});

        module.exports = store;
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/set-global':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-global.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/inspect-source.js': [
      function(require, module, exports) {
        var store = require('../internals/shared-store');

        var functionToString = Function.toString;

        // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
        if (typeof store.inspectSource != 'function') {
          store.inspectSource = function(it) {
            return functionToString.call(it);
          };
        }

        module.exports = store.inspectSource;
      },
      {
        '../internals/shared-store':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared-store.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/native-weak-map.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var inspectSource = require('../internals/inspect-source');

        var WeakMap = global.WeakMap;

        module.exports =
          typeof WeakMap === 'function' &&
          /native code/.test(inspectSource(WeakMap));
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/inspect-source':
          '../../node_modules/simplebar/node_modules/core-js/internals/inspect-source.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/is-pure.js': [
      function(require, module, exports) {
        module.exports = false;
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/shared.js': [
      function(require, module, exports) {
        var IS_PURE = require('../internals/is-pure');
        var store = require('../internals/shared-store');

        (module.exports = function(key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {});
        })('versions', []).push({
          version: '3.6.5',
          mode: IS_PURE ? 'pure' : 'global',
          copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
        });
      },
      {
        '../internals/is-pure':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-pure.js',
        '../internals/shared-store':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared-store.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/uid.js': [
      function(require, module, exports) {
        var id = 0;
        var postfix = Math.random();

        module.exports = function(key) {
          return (
            'Symbol(' +
            String(key === undefined ? '' : key) +
            ')_' +
            (++id + postfix).toString(36)
          );
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/shared-key.js': [
      function(require, module, exports) {
        var shared = require('../internals/shared');
        var uid = require('../internals/uid');

        var keys = shared('keys');

        module.exports = function(key) {
          return keys[key] || (keys[key] = uid(key));
        };
      },
      {
        '../internals/shared':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared.js',
        '../internals/uid':
          '../../node_modules/simplebar/node_modules/core-js/internals/uid.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/hidden-keys.js': [
      function(require, module, exports) {
        module.exports = {};
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js': [
      function(require, module, exports) {
        var NATIVE_WEAK_MAP = require('../internals/native-weak-map');
        var global = require('../internals/global');
        var isObject = require('../internals/is-object');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var objectHas = require('../internals/has');
        var sharedKey = require('../internals/shared-key');
        var hiddenKeys = require('../internals/hidden-keys');

        var WeakMap = global.WeakMap;
        var set, get, has;

        var enforce = function(it) {
          return has(it) ? get(it) : set(it, {});
        };

        var getterFor = function(TYPE) {
          return function(it) {
            var state;
            if (!isObject(it) || (state = get(it)).type !== TYPE) {
              throw TypeError('Incompatible receiver, ' + TYPE + ' required');
            }
            return state;
          };
        };

        if (NATIVE_WEAK_MAP) {
          var store = new WeakMap();
          var wmget = store.get;
          var wmhas = store.has;
          var wmset = store.set;
          set = function(it, metadata) {
            wmset.call(store, it, metadata);
            return metadata;
          };
          get = function(it) {
            return wmget.call(store, it) || {};
          };
          has = function(it) {
            return wmhas.call(store, it);
          };
        } else {
          var STATE = sharedKey('state');
          hiddenKeys[STATE] = true;
          set = function(it, metadata) {
            createNonEnumerableProperty(it, STATE, metadata);
            return metadata;
          };
          get = function(it) {
            return objectHas(it, STATE) ? it[STATE] : {};
          };
          has = function(it) {
            return objectHas(it, STATE);
          };
        }

        module.exports = {
          set: set,
          get: get,
          has: has,
          enforce: enforce,
          getterFor: getterFor
        };
      },
      {
        '../internals/native-weak-map':
          '../../node_modules/simplebar/node_modules/core-js/internals/native-weak-map.js',
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/shared-key':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared-key.js',
        '../internals/hidden-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/hidden-keys.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var has = require('../internals/has');
        var setGlobal = require('../internals/set-global');
        var inspectSource = require('../internals/inspect-source');
        var InternalStateModule = require('../internals/internal-state');

        var getInternalState = InternalStateModule.get;
        var enforceInternalState = InternalStateModule.enforce;
        var TEMPLATE = String(String).split('String');

        (module.exports = function(O, key, value, options) {
          var unsafe = options ? !!options.unsafe : false;
          var simple = options ? !!options.enumerable : false;
          var noTargetGet = options ? !!options.noTargetGet : false;
          if (typeof value == 'function') {
            if (typeof key == 'string' && !has(value, 'name'))
              createNonEnumerableProperty(value, 'name', key);
            enforceInternalState(value).source = TEMPLATE.join(
              typeof key == 'string' ? key : ''
            );
          }
          if (O === global) {
            if (simple) O[key] = value;
            else setGlobal(key, value);
            return;
          } else if (!unsafe) {
            delete O[key];
          } else if (!noTargetGet && O[key]) {
            simple = true;
          }
          if (simple) O[key] = value;
          else createNonEnumerableProperty(O, key, value);
          // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        })(Function.prototype, 'toString', function toString() {
          return (
            (typeof this == 'function' && getInternalState(this).source) ||
            inspectSource(this)
          );
        });
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/set-global':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-global.js',
        '../internals/inspect-source':
          '../../node_modules/simplebar/node_modules/core-js/internals/inspect-source.js',
        '../internals/internal-state':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/path.js': [
      function(require, module, exports) {
        var global = require('../internals/global');

        module.exports = global;
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/get-built-in.js': [
      function(require, module, exports) {
        var path = require('../internals/path');
        var global = require('../internals/global');

        var aFunction = function(variable) {
          return typeof variable == 'function' ? variable : undefined;
        };

        module.exports = function(namespace, method) {
          return arguments.length < 2
            ? aFunction(path[namespace]) || aFunction(global[namespace])
            : (path[namespace] && path[namespace][method]) ||
                (global[namespace] && global[namespace][method]);
        };
      },
      {
        '../internals/path':
          '../../node_modules/simplebar/node_modules/core-js/internals/path.js',
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-integer.js': [
      function(require, module, exports) {
        var ceil = Math.ceil;
        var floor = Math.floor;

        // `ToInteger` abstract operation
        // https://tc39.github.io/ecma262/#sec-tointeger
        module.exports = function(argument) {
          return isNaN((argument = +argument))
            ? 0
            : (argument > 0 ? floor : ceil)(argument);
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js': [
      function(require, module, exports) {
        var toInteger = require('../internals/to-integer');

        var min = Math.min;

        // `ToLength` abstract operation
        // https://tc39.github.io/ecma262/#sec-tolength
        module.exports = function(argument) {
          return argument > 0 ? min(toInteger(argument), 0x1fffffffffffff) : 0; // 2 ** 53 - 1 == 9007199254740991
        };
      },
      {
        '../internals/to-integer':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-integer.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-absolute-index.js': [
      function(require, module, exports) {
        var toInteger = require('../internals/to-integer');

        var max = Math.max;
        var min = Math.min;

        // Helper for a popular repeating case of the spec:
        // Let integer be ? ToInteger(index).
        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
        module.exports = function(index, length) {
          var integer = toInteger(index);
          return integer < 0 ? max(integer + length, 0) : min(integer, length);
        };
      },
      {
        '../internals/to-integer':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-integer.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-includes.js': [
      function(require, module, exports) {
        var toIndexedObject = require('../internals/to-indexed-object');
        var toLength = require('../internals/to-length');
        var toAbsoluteIndex = require('../internals/to-absolute-index');

        // `Array.prototype.{ indexOf, includes }` methods implementation
        var createMethod = function(IS_INCLUDES) {
          return function($this, el, fromIndex) {
            var O = toIndexedObject($this);
            var length = toLength(O.length);
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare
            if (IS_INCLUDES && el != el)
              while (length > index) {
                value = O[index++];
                // eslint-disable-next-line no-self-compare
                if (value != value) return true;
                // Array#indexOf ignores holes, Array#includes - not
              }
            else
              for (; length > index; index++) {
                if ((IS_INCLUDES || index in O) && O[index] === el)
                  return IS_INCLUDES || index || 0;
              }
            return !IS_INCLUDES && -1;
          };
        };

        module.exports = {
          // `Array.prototype.includes` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.includes
          includes: createMethod(true),
          // `Array.prototype.indexOf` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
          indexOf: createMethod(false)
        };
      },
      {
        '../internals/to-indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-indexed-object.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js',
        '../internals/to-absolute-index':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-absolute-index.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-keys-internal.js': [
      function(require, module, exports) {
        var has = require('../internals/has');
        var toIndexedObject = require('../internals/to-indexed-object');
        var indexOf = require('../internals/array-includes').indexOf;
        var hiddenKeys = require('../internals/hidden-keys');

        module.exports = function(object, names) {
          var O = toIndexedObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O)
            !has(hiddenKeys, key) && has(O, key) && result.push(key);
          // Don't enum bug & hidden keys
          while (names.length > i)
            if (has(O, (key = names[i++]))) {
              ~indexOf(result, key) || result.push(key);
            }
          return result;
        };
      },
      {
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/to-indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-indexed-object.js',
        '../internals/array-includes':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-includes.js',
        '../internals/hidden-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/hidden-keys.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/enum-bug-keys.js': [
      function(require, module, exports) {
        // IE8- don't enum bug keys
        module.exports = [
          'constructor',
          'hasOwnProperty',
          'isPrototypeOf',
          'propertyIsEnumerable',
          'toLocaleString',
          'toString',
          'valueOf'
        ];
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-names.js': [
      function(require, module, exports) {
        var internalObjectKeys = require('../internals/object-keys-internal');
        var enumBugKeys = require('../internals/enum-bug-keys');

        var hiddenKeys = enumBugKeys.concat('length', 'prototype');

        // `Object.getOwnPropertyNames` method
        // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
        exports.f =
          Object.getOwnPropertyNames ||
          function getOwnPropertyNames(O) {
            return internalObjectKeys(O, hiddenKeys);
          };
      },
      {
        '../internals/object-keys-internal':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-keys-internal.js',
        '../internals/enum-bug-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/enum-bug-keys.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-symbols.js': [
      function(require, module, exports) {
        exports.f = Object.getOwnPropertySymbols;
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/own-keys.js': [
      function(require, module, exports) {
        var getBuiltIn = require('../internals/get-built-in');
        var getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');
        var getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');
        var anObject = require('../internals/an-object');

        // all object keys, includes non-enumerable and symbols
        module.exports =
          getBuiltIn('Reflect', 'ownKeys') ||
          function ownKeys(it) {
            var keys = getOwnPropertyNamesModule.f(anObject(it));
            var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
            return getOwnPropertySymbols
              ? keys.concat(getOwnPropertySymbols(it))
              : keys;
          };
      },
      {
        '../internals/get-built-in':
          '../../node_modules/simplebar/node_modules/core-js/internals/get-built-in.js',
        '../internals/object-get-own-property-names':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-names.js',
        '../internals/object-get-own-property-symbols':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-symbols.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/copy-constructor-properties.js': [
      function(require, module, exports) {
        var has = require('../internals/has');
        var ownKeys = require('../internals/own-keys');
        var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');
        var definePropertyModule = require('../internals/object-define-property');

        module.exports = function(target, source) {
          var keys = ownKeys(source);
          var defineProperty = definePropertyModule.f;
          var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (!has(target, key))
              defineProperty(
                target,
                key,
                getOwnPropertyDescriptor(source, key)
              );
          }
        };
      },
      {
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/own-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/own-keys.js',
        '../internals/object-get-own-property-descriptor':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-descriptor.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/is-forced.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');

        var replacement = /#|\.prototype\./;

        var isForced = function(feature, detection) {
          var value = data[normalize(feature)];
          return value == POLYFILL
            ? true
            : value == NATIVE
            ? false
            : typeof detection == 'function'
            ? fails(detection)
            : !!detection;
        };

        var normalize = (isForced.normalize = function(string) {
          return String(string)
            .replace(replacement, '.')
            .toLowerCase();
        });

        var data = (isForced.data = {});
        var NATIVE = (isForced.NATIVE = 'N');
        var POLYFILL = (isForced.POLYFILL = 'P');

        module.exports = isForced;
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/export.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor')
          .f;
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var redefine = require('../internals/redefine');
        var setGlobal = require('../internals/set-global');
        var copyConstructorProperties = require('../internals/copy-constructor-properties');
        var isForced = require('../internals/is-forced');

        /*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
        module.exports = function(options, source) {
          var TARGET = options.target;
          var GLOBAL = options.global;
          var STATIC = options.stat;
          var FORCED, target, key, targetProperty, sourceProperty, descriptor;
          if (GLOBAL) {
            target = global;
          } else if (STATIC) {
            target = global[TARGET] || setGlobal(TARGET, {});
          } else {
            target = (global[TARGET] || {}).prototype;
          }
          if (target)
            for (key in source) {
              sourceProperty = source[key];
              if (options.noTargetGet) {
                descriptor = getOwnPropertyDescriptor(target, key);
                targetProperty = descriptor && descriptor.value;
              } else targetProperty = target[key];
              FORCED = isForced(
                GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key,
                options.forced
              );
              // contained in target
              if (!FORCED && targetProperty !== undefined) {
                if (typeof sourceProperty === typeof targetProperty) continue;
                copyConstructorProperties(sourceProperty, targetProperty);
              }
              // add a flag to not completely full polyfills
              if (options.sham || (targetProperty && targetProperty.sham)) {
                createNonEnumerableProperty(sourceProperty, 'sham', true);
              }
              // extend global
              redefine(target, key, sourceProperty, options);
            }
        };
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/object-get-own-property-descriptor':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-descriptor.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js',
        '../internals/set-global':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-global.js',
        '../internals/copy-constructor-properties':
          '../../node_modules/simplebar/node_modules/core-js/internals/copy-constructor-properties.js',
        '../internals/is-forced':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-forced.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/a-function.js': [
      function(require, module, exports) {
        module.exports = function(it) {
          if (typeof it != 'function') {
            throw TypeError(String(it) + ' is not a function');
          }
          return it;
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/function-bind-context.js': [
      function(require, module, exports) {
        var aFunction = require('../internals/a-function');

        // optional / simple context binding
        module.exports = function(fn, that, length) {
          aFunction(fn);
          if (that === undefined) return fn;
          switch (length) {
            case 0:
              return function() {
                return fn.call(that);
              };
            case 1:
              return function(a) {
                return fn.call(that, a);
              };
            case 2:
              return function(a, b) {
                return fn.call(that, a, b);
              };
            case 3:
              return function(a, b, c) {
                return fn.call(that, a, b, c);
              };
          }
          return function(/* ...args */) {
            return fn.apply(that, arguments);
          };
        };
      },
      {
        '../internals/a-function':
          '../../node_modules/simplebar/node_modules/core-js/internals/a-function.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js': [
      function(require, module, exports) {
        var requireObjectCoercible = require('../internals/require-object-coercible');

        // `ToObject` abstract operation
        // https://tc39.github.io/ecma262/#sec-toobject
        module.exports = function(argument) {
          return Object(requireObjectCoercible(argument));
        };
      },
      {
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/is-array.js': [
      function(require, module, exports) {
        var classof = require('../internals/classof-raw');

        // `IsArray` abstract operation
        // https://tc39.github.io/ecma262/#sec-isarray
        module.exports =
          Array.isArray ||
          function isArray(arg) {
            return classof(arg) == 'Array';
          };
      },
      {
        '../internals/classof-raw':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof-raw.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/native-symbol.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');

        module.exports =
          !!Object.getOwnPropertySymbols &&
          !fails(function() {
            // Chrome 38 Symbol has incorrect toString conversion
            // eslint-disable-next-line no-undef
            return !String(Symbol());
          });
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/use-symbol-as-uid.js': [
      function(require, module, exports) {
        var NATIVE_SYMBOL = require('../internals/native-symbol');

        module.exports =
          NATIVE_SYMBOL &&
          // eslint-disable-next-line no-undef
          !Symbol.sham &&
          // eslint-disable-next-line no-undef
          typeof Symbol.iterator == 'symbol';
      },
      {
        '../internals/native-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/native-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var shared = require('../internals/shared');
        var has = require('../internals/has');
        var uid = require('../internals/uid');
        var NATIVE_SYMBOL = require('../internals/native-symbol');
        var USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');

        var WellKnownSymbolsStore = shared('wks');
        var Symbol = global.Symbol;
        var createWellKnownSymbol = USE_SYMBOL_AS_UID
          ? Symbol
          : (Symbol && Symbol.withoutSetter) || uid;

        module.exports = function(name) {
          if (!has(WellKnownSymbolsStore, name)) {
            if (NATIVE_SYMBOL && has(Symbol, name))
              WellKnownSymbolsStore[name] = Symbol[name];
            else
              WellKnownSymbolsStore[name] = createWellKnownSymbol(
                'Symbol.' + name
              );
          }
          return WellKnownSymbolsStore[name];
        };
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/shared':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/uid':
          '../../node_modules/simplebar/node_modules/core-js/internals/uid.js',
        '../internals/native-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/native-symbol.js',
        '../internals/use-symbol-as-uid':
          '../../node_modules/simplebar/node_modules/core-js/internals/use-symbol-as-uid.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-species-create.js': [
      function(require, module, exports) {
        var isObject = require('../internals/is-object');
        var isArray = require('../internals/is-array');
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var SPECIES = wellKnownSymbol('species');

        // `ArraySpeciesCreate` abstract operation
        // https://tc39.github.io/ecma262/#sec-arrayspeciescreate
        module.exports = function(originalArray, length) {
          var C;
          if (isArray(originalArray)) {
            C = originalArray.constructor;
            // cross-realm fallback
            if (typeof C == 'function' && (C === Array || isArray(C.prototype)))
              C = undefined;
            else if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
        };
      },
      {
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/is-array':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-array.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-iteration.js': [
      function(require, module, exports) {
        var bind = require('../internals/function-bind-context');
        var IndexedObject = require('../internals/indexed-object');
        var toObject = require('../internals/to-object');
        var toLength = require('../internals/to-length');
        var arraySpeciesCreate = require('../internals/array-species-create');

        var push = [].push;

        // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
        var createMethod = function(TYPE) {
          var IS_MAP = TYPE == 1;
          var IS_FILTER = TYPE == 2;
          var IS_SOME = TYPE == 3;
          var IS_EVERY = TYPE == 4;
          var IS_FIND_INDEX = TYPE == 6;
          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
          return function($this, callbackfn, that, specificCreate) {
            var O = toObject($this);
            var self = IndexedObject(O);
            var boundFunction = bind(callbackfn, that, 3);
            var length = toLength(self.length);
            var index = 0;
            var create = specificCreate || arraySpeciesCreate;
            var target = IS_MAP
              ? create($this, length)
              : IS_FILTER
              ? create($this, 0)
              : undefined;
            var value, result;
            for (; length > index; index++)
              if (NO_HOLES || index in self) {
                value = self[index];
                result = boundFunction(value, index, O);
                if (TYPE) {
                  if (IS_MAP) target[index] = result;
                  // map
                  else if (result)
                    switch (TYPE) {
                      case 3:
                        return true; // some
                      case 5:
                        return value; // find
                      case 6:
                        return index; // findIndex
                      case 2:
                        push.call(target, value); // filter
                    }
                  else if (IS_EVERY) return false; // every
                }
              }
            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
          };
        };

        module.exports = {
          // `Array.prototype.forEach` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
          forEach: createMethod(0),
          // `Array.prototype.map` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.map
          map: createMethod(1),
          // `Array.prototype.filter` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.filter
          filter: createMethod(2),
          // `Array.prototype.some` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.some
          some: createMethod(3),
          // `Array.prototype.every` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.every
          every: createMethod(4),
          // `Array.prototype.find` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.find
          find: createMethod(5),
          // `Array.prototype.findIndex` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
          findIndex: createMethod(6)
        };
      },
      {
        '../internals/function-bind-context':
          '../../node_modules/simplebar/node_modules/core-js/internals/function-bind-context.js',
        '../internals/indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/indexed-object.js',
        '../internals/to-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js',
        '../internals/array-species-create':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-species-create.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-method-is-strict.js': [
      function(require, module, exports) {
        'use strict';
        var fails = require('../internals/fails');

        module.exports = function(METHOD_NAME, argument) {
          var method = [][METHOD_NAME];
          return (
            !!method &&
            fails(function() {
              // eslint-disable-next-line no-useless-call,no-throw-literal
              method.call(
                null,
                argument ||
                  function() {
                    throw 1;
                  },
                1
              );
            })
          );
        };
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-method-uses-to-length.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');
        var has = require('../internals/has');

        var defineProperty = Object.defineProperty;
        var cache = {};

        var thrower = function(it) {
          throw it;
        };

        module.exports = function(METHOD_NAME, options) {
          if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
          if (!options) options = {};
          var method = [][METHOD_NAME];
          var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
          var argument0 = has(options, 0) ? options[0] : thrower;
          var argument1 = has(options, 1) ? options[1] : undefined;

          return (cache[METHOD_NAME] =
            !!method &&
            !fails(function() {
              if (ACCESSORS && !DESCRIPTORS) return true;
              var O = { length: -1 };

              if (ACCESSORS)
                defineProperty(O, 1, { enumerable: true, get: thrower });
              else O[1] = 1;

              method.call(O, argument0, argument1);
            }));
        };
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-for-each.js': [
      function(require, module, exports) {
        'use strict';
        var $forEach = require('../internals/array-iteration').forEach;
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');

        var STRICT_METHOD = arrayMethodIsStrict('forEach');
        var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

        // `Array.prototype.forEach` method implementation
        // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
        module.exports =
          !STRICT_METHOD || !USES_TO_LENGTH
            ? function forEach(callbackfn /* , thisArg */) {
                return $forEach(
                  this,
                  callbackfn,
                  arguments.length > 1 ? arguments[1] : undefined
                );
              }
            : [].forEach;
      },
      {
        '../internals/array-iteration':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-iteration.js',
        '../internals/array-method-is-strict':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-is-strict.js',
        '../internals/array-method-uses-to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-uses-to-length.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.array.for-each.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var forEach = require('../internals/array-for-each');

        // `Array.prototype.forEach` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
        $(
          { target: 'Array', proto: true, forced: [].forEach != forEach },
          {
            forEach: forEach
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/array-for-each':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-for-each.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/dom-iterables.js': [
      function(require, module, exports) {
        // iterable DOM collections
        // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
        module.exports = {
          CSSRuleList: 0,
          CSSStyleDeclaration: 0,
          CSSValueList: 0,
          ClientRectList: 0,
          DOMRectList: 0,
          DOMStringList: 0,
          DOMTokenList: 1,
          DataTransferItemList: 0,
          FileList: 0,
          HTMLAllCollection: 0,
          HTMLCollection: 0,
          HTMLFormElement: 0,
          HTMLSelectElement: 0,
          MediaList: 0,
          MimeTypeArray: 0,
          NamedNodeMap: 0,
          NodeList: 1,
          PaintRequestList: 0,
          Plugin: 0,
          PluginArray: 0,
          SVGLengthList: 0,
          SVGNumberList: 0,
          SVGPathSegList: 0,
          SVGPointList: 0,
          SVGStringList: 0,
          SVGTransformList: 0,
          SourceBufferList: 0,
          StyleSheetList: 0,
          TextTrackCueList: 0,
          TextTrackList: 0,
          TouchList: 0
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/web.dom-collections.for-each.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var DOMIterables = require('../internals/dom-iterables');
        var forEach = require('../internals/array-for-each');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');

        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype;
          // some Chrome versions have non-configurable methods on DOMTokenList
          if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
            try {
              createNonEnumerableProperty(
                CollectionPrototype,
                'forEach',
                forEach
              );
            } catch (error) {
              CollectionPrototype.forEach = forEach;
            }
        }
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/dom-iterables':
          '../../node_modules/simplebar/node_modules/core-js/internals/dom-iterables.js',
        '../internals/array-for-each':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-for-each.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js'
      }
    ],
    '../../node_modules/can-use-dom/index.js': [
      function(require, module, exports) {
        var canUseDOM = !!(
          typeof window !== 'undefined' &&
          window.document &&
          window.document.createElement
        );

        module.exports = canUseDOM;
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/engine-user-agent.js': [
      function(require, module, exports) {
        var getBuiltIn = require('../internals/get-built-in');

        module.exports = getBuiltIn('navigator', 'userAgent') || '';
      },
      {
        '../internals/get-built-in':
          '../../node_modules/simplebar/node_modules/core-js/internals/get-built-in.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/engine-v8-version.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var userAgent = require('../internals/engine-user-agent');

        var process = global.process;
        var versions = process && process.versions;
        var v8 = versions && versions.v8;
        var match, version;

        if (v8) {
          match = v8.split('.');
          version = match[0] + match[1];
        } else if (userAgent) {
          match = userAgent.match(/Edge\/(\d+)/);
          if (!match || match[1] >= 74) {
            match = userAgent.match(/Chrome\/(\d+)/);
            if (match) version = match[1];
          }
        }

        module.exports = version && +version;
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/engine-user-agent':
          '../../node_modules/simplebar/node_modules/core-js/internals/engine-user-agent.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-method-has-species-support.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var V8_VERSION = require('../internals/engine-v8-version');

        var SPECIES = wellKnownSymbol('species');

        module.exports = function(METHOD_NAME) {
          // We can't use this feature detection in V8 since it causes
          // deoptimization and serious performance degradation
          // https://github.com/zloirock/core-js/issues/677
          return (
            V8_VERSION >= 51 ||
            !fails(function() {
              var array = [];
              var constructor = (array.constructor = {});
              constructor[SPECIES] = function() {
                return { foo: 1 };
              };
              return array[METHOD_NAME](Boolean).foo !== 1;
            })
          );
        };
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/engine-v8-version':
          '../../node_modules/simplebar/node_modules/core-js/internals/engine-v8-version.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.array.filter.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var $filter = require('../internals/array-iteration').filter;
        var arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');
        var arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');

        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
        // Edge 14- issue
        var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

        // `Array.prototype.filter` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.filter
        // with adding support of @@species
        $(
          {
            target: 'Array',
            proto: true,
            forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH
          },
          {
            filter: function filter(callbackfn /* , thisArg */) {
              return $filter(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            }
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/array-iteration':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-iteration.js',
        '../internals/array-method-has-species-support':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-has-species-support.js',
        '../internals/array-method-uses-to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-uses-to-length.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-keys.js': [
      function(require, module, exports) {
        var internalObjectKeys = require('../internals/object-keys-internal');
        var enumBugKeys = require('../internals/enum-bug-keys');

        // `Object.keys` method
        // https://tc39.github.io/ecma262/#sec-object.keys
        module.exports =
          Object.keys ||
          function keys(O) {
            return internalObjectKeys(O, enumBugKeys);
          };
      },
      {
        '../internals/object-keys-internal':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-keys-internal.js',
        '../internals/enum-bug-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/enum-bug-keys.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-define-properties.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var definePropertyModule = require('../internals/object-define-property');
        var anObject = require('../internals/an-object');
        var objectKeys = require('../internals/object-keys');

        // `Object.defineProperties` method
        // https://tc39.github.io/ecma262/#sec-object.defineproperties
        module.exports = DESCRIPTORS
          ? Object.defineProperties
          : function defineProperties(O, Properties) {
              anObject(O);
              var keys = objectKeys(Properties);
              var length = keys.length;
              var index = 0;
              var key;
              while (length > index)
                definePropertyModule.f(
                  O,
                  (key = keys[index++]),
                  Properties[key]
                );
              return O;
            };
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/object-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-keys.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/html.js': [
      function(require, module, exports) {
        var getBuiltIn = require('../internals/get-built-in');

        module.exports = getBuiltIn('document', 'documentElement');
      },
      {
        '../internals/get-built-in':
          '../../node_modules/simplebar/node_modules/core-js/internals/get-built-in.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-create.js': [
      function(require, module, exports) {
        var anObject = require('../internals/an-object');
        var defineProperties = require('../internals/object-define-properties');
        var enumBugKeys = require('../internals/enum-bug-keys');
        var hiddenKeys = require('../internals/hidden-keys');
        var html = require('../internals/html');
        var documentCreateElement = require('../internals/document-create-element');
        var sharedKey = require('../internals/shared-key');

        var GT = '>';
        var LT = '<';
        var PROTOTYPE = 'prototype';
        var SCRIPT = 'script';
        var IE_PROTO = sharedKey('IE_PROTO');

        var EmptyConstructor = function() {
          /* empty */
        };

        var scriptTag = function(content) {
          return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
        };

        // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
        var NullProtoObjectViaActiveX = function(activeXDocument) {
          activeXDocument.write(scriptTag(''));
          activeXDocument.close();
          var temp = activeXDocument.parentWindow.Object;
          activeXDocument = null; // avoid memory leak
          return temp;
        };

        // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var NullProtoObjectViaIFrame = function() {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = documentCreateElement('iframe');
          var JS = 'java' + SCRIPT + ':';
          var iframeDocument;
          iframe.style.display = 'none';
          html.appendChild(iframe);
          // https://github.com/zloirock/core-js/issues/475
          iframe.src = String(JS);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(scriptTag('document.F=Object'));
          iframeDocument.close();
          return iframeDocument.F;
        };

        // Check for document.domain and active x support
        // No need to use active x approach when document.domain is not set
        // see https://github.com/es-shims/es5-shim/issues/150
        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
        // avoid IE GC bug
        var activeXDocument;
        var NullProtoObject = function() {
          try {
            /* global ActiveXObject */
            activeXDocument = document.domain && new ActiveXObject('htmlfile');
          } catch (error) {
            /* ignore */
          }
          NullProtoObject = activeXDocument
            ? NullProtoObjectViaActiveX(activeXDocument)
            : NullProtoObjectViaIFrame();
          var length = enumBugKeys.length;
          while (length--)
            delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
          return NullProtoObject();
        };

        hiddenKeys[IE_PROTO] = true;

        // `Object.create` method
        // https://tc39.github.io/ecma262/#sec-object.create
        module.exports =
          Object.create ||
          function create(O, Properties) {
            var result;
            if (O !== null) {
              EmptyConstructor[PROTOTYPE] = anObject(O);
              result = new EmptyConstructor();
              EmptyConstructor[PROTOTYPE] = null;
              // add "__proto__" for Object.getPrototypeOf polyfill
              result[IE_PROTO] = O;
            } else result = NullProtoObject();
            return Properties === undefined
              ? result
              : defineProperties(result, Properties);
          };
      },
      {
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/object-define-properties':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-properties.js',
        '../internals/enum-bug-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/enum-bug-keys.js',
        '../internals/hidden-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/hidden-keys.js',
        '../internals/html':
          '../../node_modules/simplebar/node_modules/core-js/internals/html.js',
        '../internals/document-create-element':
          '../../node_modules/simplebar/node_modules/core-js/internals/document-create-element.js',
        '../internals/shared-key':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared-key.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/add-to-unscopables.js': [
      function(require, module, exports) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var create = require('../internals/object-create');
        var definePropertyModule = require('../internals/object-define-property');

        var UNSCOPABLES = wellKnownSymbol('unscopables');
        var ArrayPrototype = Array.prototype;

        // Array.prototype[@@unscopables]
        // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        if (ArrayPrototype[UNSCOPABLES] == undefined) {
          definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
            configurable: true,
            value: create(null)
          });
        }

        // add a key to Array.prototype[@@unscopables]
        module.exports = function(key) {
          ArrayPrototype[UNSCOPABLES][key] = true;
        };
      },
      {
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/object-create':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-create.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js': [
      function(require, module, exports) {
        module.exports = {};
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/correct-prototype-getter.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');

        module.exports = !fails(function() {
          function F() {
            /* empty */
          }
          F.prototype.constructor = null;
          return Object.getPrototypeOf(new F()) !== F.prototype;
        });
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-get-prototype-of.js': [
      function(require, module, exports) {
        var has = require('../internals/has');
        var toObject = require('../internals/to-object');
        var sharedKey = require('../internals/shared-key');
        var CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');

        var IE_PROTO = sharedKey('IE_PROTO');
        var ObjectPrototype = Object.prototype;

        // `Object.getPrototypeOf` method
        // https://tc39.github.io/ecma262/#sec-object.getprototypeof
        module.exports = CORRECT_PROTOTYPE_GETTER
          ? Object.getPrototypeOf
          : function(O) {
              O = toObject(O);
              if (has(O, IE_PROTO)) return O[IE_PROTO];
              if (
                typeof O.constructor == 'function' &&
                O instanceof O.constructor
              ) {
                return O.constructor.prototype;
              }
              return O instanceof Object ? ObjectPrototype : null;
            };
      },
      {
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/to-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js',
        '../internals/shared-key':
          '../../node_modules/simplebar/node_modules/core-js/internals/shared-key.js',
        '../internals/correct-prototype-getter':
          '../../node_modules/simplebar/node_modules/core-js/internals/correct-prototype-getter.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/iterators-core.js': [
      function(require, module, exports) {
        'use strict';
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var has = require('../internals/has');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var IS_PURE = require('../internals/is-pure');

        var ITERATOR = wellKnownSymbol('iterator');
        var BUGGY_SAFARI_ITERATORS = false;

        var returnThis = function() {
          return this;
        };

        // `%IteratorPrototype%` object
        // https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
        var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

        if ([].keys) {
          arrayIterator = [].keys();
          // Safari 8 has buggy iterators w/o `next`
          if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
          else {
            PrototypeOfArrayIteratorPrototype = getPrototypeOf(
              getPrototypeOf(arrayIterator)
            );
            if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
              IteratorPrototype = PrototypeOfArrayIteratorPrototype;
          }
        }

        if (IteratorPrototype == undefined) IteratorPrototype = {};

        // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
          createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
        }

        module.exports = {
          IteratorPrototype: IteratorPrototype,
          BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
        };
      },
      {
        '../internals/object-get-prototype-of':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-prototype-of.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/is-pure':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-pure.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/set-to-string-tag.js': [
      function(require, module, exports) {
        var defineProperty = require('../internals/object-define-property').f;
        var has = require('../internals/has');
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');

        module.exports = function(it, TAG, STATIC) {
          if (it && !has((it = STATIC ? it : it.prototype), TO_STRING_TAG)) {
            defineProperty(it, TO_STRING_TAG, {
              configurable: true,
              value: TAG
            });
          }
        };
      },
      {
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/create-iterator-constructor.js': [
      function(require, module, exports) {
        'use strict';
        var IteratorPrototype = require('../internals/iterators-core')
          .IteratorPrototype;
        var create = require('../internals/object-create');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        var setToStringTag = require('../internals/set-to-string-tag');
        var Iterators = require('../internals/iterators');

        var returnThis = function() {
          return this;
        };

        module.exports = function(IteratorConstructor, NAME, next) {
          var TO_STRING_TAG = NAME + ' Iterator';
          IteratorConstructor.prototype = create(IteratorPrototype, {
            next: createPropertyDescriptor(1, next)
          });
          setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
          Iterators[TO_STRING_TAG] = returnThis;
          return IteratorConstructor;
        };
      },
      {
        '../internals/iterators-core':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators-core.js',
        '../internals/object-create':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-create.js',
        '../internals/create-property-descriptor':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-property-descriptor.js',
        '../internals/set-to-string-tag':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-to-string-tag.js',
        '../internals/iterators':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/a-possible-prototype.js': [
      function(require, module, exports) {
        var isObject = require('../internals/is-object');

        module.exports = function(it) {
          if (!isObject(it) && it !== null) {
            throw TypeError("Can't set " + String(it) + ' as a prototype');
          }
          return it;
        };
      },
      {
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-set-prototype-of.js': [
      function(require, module, exports) {
        var anObject = require('../internals/an-object');
        var aPossiblePrototype = require('../internals/a-possible-prototype');

        // `Object.setPrototypeOf` method
        // https://tc39.github.io/ecma262/#sec-object.setprototypeof
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        module.exports =
          Object.setPrototypeOf ||
          ('__proto__' in {}
            ? (function() {
                var CORRECT_SETTER = false;
                var test = {};
                var setter;
                try {
                  setter = Object.getOwnPropertyDescriptor(
                    Object.prototype,
                    '__proto__'
                  ).set;
                  setter.call(test, []);
                  CORRECT_SETTER = test instanceof Array;
                } catch (error) {
                  /* empty */
                }
                return function setPrototypeOf(O, proto) {
                  anObject(O);
                  aPossiblePrototype(proto);
                  if (CORRECT_SETTER) setter.call(O, proto);
                  else O.__proto__ = proto;
                  return O;
                };
              })()
            : undefined);
      },
      {
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/a-possible-prototype':
          '../../node_modules/simplebar/node_modules/core-js/internals/a-possible-prototype.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/define-iterator.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var createIteratorConstructor = require('../internals/create-iterator-constructor');
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var setToStringTag = require('../internals/set-to-string-tag');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var redefine = require('../internals/redefine');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var IS_PURE = require('../internals/is-pure');
        var Iterators = require('../internals/iterators');
        var IteratorsCore = require('../internals/iterators-core');

        var IteratorPrototype = IteratorsCore.IteratorPrototype;
        var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
        var ITERATOR = wellKnownSymbol('iterator');
        var KEYS = 'keys';
        var VALUES = 'values';
        var ENTRIES = 'entries';

        var returnThis = function() {
          return this;
        };

        module.exports = function(
          Iterable,
          NAME,
          IteratorConstructor,
          next,
          DEFAULT,
          IS_SET,
          FORCED
        ) {
          createIteratorConstructor(IteratorConstructor, NAME, next);

          var getIterationMethod = function(KIND) {
            if (KIND === DEFAULT && defaultIterator) return defaultIterator;
            if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
              return IterablePrototype[KIND];
            switch (KIND) {
              case KEYS:
                return function keys() {
                  return new IteratorConstructor(this, KIND);
                };
              case VALUES:
                return function values() {
                  return new IteratorConstructor(this, KIND);
                };
              case ENTRIES:
                return function entries() {
                  return new IteratorConstructor(this, KIND);
                };
            }
            return function() {
              return new IteratorConstructor(this);
            };
          };

          var TO_STRING_TAG = NAME + ' Iterator';
          var INCORRECT_VALUES_NAME = false;
          var IterablePrototype = Iterable.prototype;
          var nativeIterator =
            IterablePrototype[ITERATOR] ||
            IterablePrototype['@@iterator'] ||
            (DEFAULT && IterablePrototype[DEFAULT]);
          var defaultIterator =
            (!BUGGY_SAFARI_ITERATORS && nativeIterator) ||
            getIterationMethod(DEFAULT);
          var anyNativeIterator =
            NAME == 'Array'
              ? IterablePrototype.entries || nativeIterator
              : nativeIterator;
          var CurrentIteratorPrototype, methods, KEY;

          // fix native
          if (anyNativeIterator) {
            CurrentIteratorPrototype = getPrototypeOf(
              anyNativeIterator.call(new Iterable())
            );
            if (
              IteratorPrototype !== Object.prototype &&
              CurrentIteratorPrototype.next
            ) {
              if (
                !IS_PURE &&
                getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype
              ) {
                if (setPrototypeOf) {
                  setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                } else if (
                  typeof CurrentIteratorPrototype[ITERATOR] != 'function'
                ) {
                  createNonEnumerableProperty(
                    CurrentIteratorPrototype,
                    ITERATOR,
                    returnThis
                  );
                }
              }
              // Set @@toStringTag to native iterators
              setToStringTag(
                CurrentIteratorPrototype,
                TO_STRING_TAG,
                true,
                true
              );
              if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
            }
          }

          // fix Array#{values, @@iterator}.name in V8 / FF
          if (
            DEFAULT == VALUES &&
            nativeIterator &&
            nativeIterator.name !== VALUES
          ) {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values() {
              return nativeIterator.call(this);
            };
          }

          // define iterator
          if (
            (!IS_PURE || FORCED) &&
            IterablePrototype[ITERATOR] !== defaultIterator
          ) {
            createNonEnumerableProperty(
              IterablePrototype,
              ITERATOR,
              defaultIterator
            );
          }
          Iterators[NAME] = defaultIterator;

          // export additional methods
          if (DEFAULT) {
            methods = {
              values: getIterationMethod(VALUES),
              keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
              entries: getIterationMethod(ENTRIES)
            };
            if (FORCED)
              for (KEY in methods) {
                if (
                  BUGGY_SAFARI_ITERATORS ||
                  INCORRECT_VALUES_NAME ||
                  !(KEY in IterablePrototype)
                ) {
                  redefine(IterablePrototype, KEY, methods[KEY]);
                }
              }
            else
              $(
                {
                  target: NAME,
                  proto: true,
                  forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
                },
                methods
              );
          }

          return methods;
        };
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/create-iterator-constructor':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-iterator-constructor.js',
        '../internals/object-get-prototype-of':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-prototype-of.js',
        '../internals/object-set-prototype-of':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-set-prototype-of.js',
        '../internals/set-to-string-tag':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-to-string-tag.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/is-pure':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-pure.js',
        '../internals/iterators':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js',
        '../internals/iterators-core':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators-core.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.array.iterator.js': [
      function(require, module, exports) {
        'use strict';
        var toIndexedObject = require('../internals/to-indexed-object');
        var addToUnscopables = require('../internals/add-to-unscopables');
        var Iterators = require('../internals/iterators');
        var InternalStateModule = require('../internals/internal-state');
        var defineIterator = require('../internals/define-iterator');

        var ARRAY_ITERATOR = 'Array Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

        // `Array.prototype.entries` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.entries
        // `Array.prototype.keys` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.keys
        // `Array.prototype.values` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.values
        // `Array.prototype[@@iterator]` method
        // https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
        // `CreateArrayIterator` internal method
        // https://tc39.github.io/ecma262/#sec-createarrayiterator
        module.exports = defineIterator(
          Array,
          'Array',
          function(iterated, kind) {
            setInternalState(this, {
              type: ARRAY_ITERATOR,
              target: toIndexedObject(iterated), // target
              index: 0, // next index
              kind: kind // kind
            });
            // `%ArrayIteratorPrototype%.next` method
            // https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
          },
          function() {
            var state = getInternalState(this);
            var target = state.target;
            var kind = state.kind;
            var index = state.index++;
            if (!target || index >= target.length) {
              state.target = undefined;
              return { value: undefined, done: true };
            }
            if (kind == 'keys') return { value: index, done: false };
            if (kind == 'values') return { value: target[index], done: false };
            return { value: [index, target[index]], done: false };
          },
          'values'
        );

        // argumentsList[@@iterator] is %ArrayProto_values%
        // https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
        // https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
        Iterators.Arguments = Iterators.Array;

        // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');
      },
      {
        '../internals/to-indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-indexed-object.js',
        '../internals/add-to-unscopables':
          '../../node_modules/simplebar/node_modules/core-js/internals/add-to-unscopables.js',
        '../internals/iterators':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js',
        '../internals/internal-state':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js',
        '../internals/define-iterator':
          '../../node_modules/simplebar/node_modules/core-js/internals/define-iterator.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-assign.js': [
      function(require, module, exports) {
        'use strict';
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');
        var objectKeys = require('../internals/object-keys');
        var getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');
        var propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');
        var toObject = require('../internals/to-object');
        var IndexedObject = require('../internals/indexed-object');

        var nativeAssign = Object.assign;
        var defineProperty = Object.defineProperty;

        // `Object.assign` method
        // https://tc39.github.io/ecma262/#sec-object.assign
        module.exports =
          !nativeAssign ||
          fails(function() {
            // should have correct order of operations (Edge bug)
            if (
              DESCRIPTORS &&
              nativeAssign(
                { b: 1 },
                nativeAssign(
                  defineProperty({}, 'a', {
                    enumerable: true,
                    get: function() {
                      defineProperty(this, 'b', {
                        value: 3,
                        enumerable: false
                      });
                    }
                  }),
                  { b: 2 }
                )
              ).b !== 1
            )
              return true;
            // should work with symbols and should have deterministic property order (V8 bug)
            var A = {};
            var B = {};
            // eslint-disable-next-line no-undef
            var symbol = Symbol();
            var alphabet = 'abcdefghijklmnopqrst';
            A[symbol] = 7;
            alphabet.split('').forEach(function(chr) {
              B[chr] = chr;
            });
            return (
              nativeAssign({}, A)[symbol] != 7 ||
              objectKeys(nativeAssign({}, B)).join('') != alphabet
            );
          })
            ? function assign(target, source) {
                // eslint-disable-line no-unused-vars
                var T = toObject(target);
                var argumentsLength = arguments.length;
                var index = 1;
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                var propertyIsEnumerable = propertyIsEnumerableModule.f;
                while (argumentsLength > index) {
                  var S = IndexedObject(arguments[index++]);
                  var keys = getOwnPropertySymbols
                    ? objectKeys(S).concat(getOwnPropertySymbols(S))
                    : objectKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) {
                    key = keys[j++];
                    if (!DESCRIPTORS || propertyIsEnumerable.call(S, key))
                      T[key] = S[key];
                  }
                }
                return T;
              }
            : nativeAssign;
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/object-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-keys.js',
        '../internals/object-get-own-property-symbols':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-get-own-property-symbols.js',
        '../internals/object-property-is-enumerable':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-property-is-enumerable.js',
        '../internals/to-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js',
        '../internals/indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/indexed-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.object.assign.js': [
      function(require, module, exports) {
        var $ = require('../internals/export');
        var assign = require('../internals/object-assign');

        // `Object.assign` method
        // https://tc39.github.io/ecma262/#sec-object.assign
        $(
          { target: 'Object', stat: true, forced: Object.assign !== assign },
          {
            assign: assign
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/object-assign':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-assign.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/to-string-tag-support.js': [
      function(require, module, exports) {
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var test = {};

        test[TO_STRING_TAG] = 'z';

        module.exports = String(test) === '[object z]';
      },
      {
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/classof.js': [
      function(require, module, exports) {
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var classofRaw = require('../internals/classof-raw');
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        // ES3 wrong here
        var CORRECT_ARGUMENTS =
          classofRaw(
            (function() {
              return arguments;
            })()
          ) == 'Arguments';

        // fallback for IE11 Script Access Denied error
        var tryGet = function(it, key) {
          try {
            return it[key];
          } catch (error) {
            /* empty */
          }
        };

        // getting tag from ES6+ `Object.prototype.toString`
        module.exports = TO_STRING_TAG_SUPPORT
          ? classofRaw
          : function(it) {
              var O, tag, result;
              return it === undefined
                ? 'Undefined'
                : it === null
                ? 'Null'
                : // @@toStringTag case
                typeof (tag = tryGet((O = Object(it)), TO_STRING_TAG)) ==
                  'string'
                ? tag
                : // builtinTag case
                CORRECT_ARGUMENTS
                ? classofRaw(O)
                : // ES3 arguments fallback
                (result = classofRaw(O)) == 'Object' &&
                  typeof O.callee == 'function'
                ? 'Arguments'
                : result;
            };
      },
      {
        '../internals/to-string-tag-support':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-string-tag-support.js',
        '../internals/classof-raw':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof-raw.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/object-to-string.js': [
      function(require, module, exports) {
        'use strict';
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var classof = require('../internals/classof');

        // `Object.prototype.toString` method implementation
        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring
        module.exports = TO_STRING_TAG_SUPPORT
          ? {}.toString
          : function toString() {
              return '[object ' + classof(this) + ']';
            };
      },
      {
        '../internals/to-string-tag-support':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-string-tag-support.js',
        '../internals/classof':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.object.to-string.js': [
      function(require, module, exports) {
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var redefine = require('../internals/redefine');
        var toString = require('../internals/object-to-string');

        // `Object.prototype.toString` method
        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring
        if (!TO_STRING_TAG_SUPPORT) {
          redefine(Object.prototype, 'toString', toString, { unsafe: true });
        }
      },
      {
        '../internals/to-string-tag-support':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-string-tag-support.js',
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js',
        '../internals/object-to-string':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-to-string.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/whitespaces.js': [
      function(require, module, exports) {
        // a string of all valid unicode whitespaces
        // eslint-disable-next-line max-len
        module.exports =
          '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/string-trim.js': [
      function(require, module, exports) {
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var whitespaces = require('../internals/whitespaces');

        var whitespace = '[' + whitespaces + ']';
        var ltrim = RegExp('^' + whitespace + whitespace + '*');
        var rtrim = RegExp(whitespace + whitespace + '*$');

        // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
        var createMethod = function(TYPE) {
          return function($this) {
            var string = String(requireObjectCoercible($this));
            if (TYPE & 1) string = string.replace(ltrim, '');
            if (TYPE & 2) string = string.replace(rtrim, '');
            return string;
          };
        };

        module.exports = {
          // `String.prototype.{ trimLeft, trimStart }` methods
          // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
          start: createMethod(1),
          // `String.prototype.{ trimRight, trimEnd }` methods
          // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
          end: createMethod(2),
          // `String.prototype.trim` method
          // https://tc39.github.io/ecma262/#sec-string.prototype.trim
          trim: createMethod(3)
        };
      },
      {
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js',
        '../internals/whitespaces':
          '../../node_modules/simplebar/node_modules/core-js/internals/whitespaces.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/number-parse-int.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var trim = require('../internals/string-trim').trim;
        var whitespaces = require('../internals/whitespaces');

        var $parseInt = global.parseInt;
        var hex = /^[+-]?0[Xx]/;
        var FORCED =
          $parseInt(whitespaces + '08') !== 8 ||
          $parseInt(whitespaces + '0x16') !== 22;

        // `parseInt` method
        // https://tc39.github.io/ecma262/#sec-parseint-string-radix
        module.exports = FORCED
          ? function parseInt(string, radix) {
              var S = trim(String(string));
              return $parseInt(S, radix >>> 0 || (hex.test(S) ? 16 : 10));
            }
          : $parseInt;
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/string-trim':
          '../../node_modules/simplebar/node_modules/core-js/internals/string-trim.js',
        '../internals/whitespaces':
          '../../node_modules/simplebar/node_modules/core-js/internals/whitespaces.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.parse-int.js': [
      function(require, module, exports) {
        var $ = require('../internals/export');
        var parseIntImplementation = require('../internals/number-parse-int');

        // `parseInt` method
        // https://tc39.github.io/ecma262/#sec-parseint-string-radix
        $(
          { global: true, forced: parseInt != parseIntImplementation },
          {
            parseInt: parseIntImplementation
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/number-parse-int':
          '../../node_modules/simplebar/node_modules/core-js/internals/number-parse-int.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/string-multibyte.js': [
      function(require, module, exports) {
        var toInteger = require('../internals/to-integer');
        var requireObjectCoercible = require('../internals/require-object-coercible');

        // `String.prototype.{ codePointAt, at }` methods implementation
        var createMethod = function(CONVERT_TO_STRING) {
          return function($this, pos) {
            var S = String(requireObjectCoercible($this));
            var position = toInteger(pos);
            var size = S.length;
            var first, second;
            if (position < 0 || position >= size)
              return CONVERT_TO_STRING ? '' : undefined;
            first = S.charCodeAt(position);
            return first < 0xd800 ||
              first > 0xdbff ||
              position + 1 === size ||
              (second = S.charCodeAt(position + 1)) < 0xdc00 ||
              second > 0xdfff
              ? CONVERT_TO_STRING
                ? S.charAt(position)
                : first
              : CONVERT_TO_STRING
              ? S.slice(position, position + 2)
              : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;
          };
        };

        module.exports = {
          // `String.prototype.codePointAt` method
          // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
          codeAt: createMethod(false),
          // `String.prototype.at` method
          // https://github.com/mathiasbynens/String.prototype.at
          charAt: createMethod(true)
        };
      },
      {
        '../internals/to-integer':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-integer.js',
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.string.iterator.js': [
      function(require, module, exports) {
        'use strict';
        var charAt = require('../internals/string-multibyte').charAt;
        var InternalStateModule = require('../internals/internal-state');
        var defineIterator = require('../internals/define-iterator');

        var STRING_ITERATOR = 'String Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

        // `String.prototype[@@iterator]` method
        // https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
        defineIterator(
          String,
          'String',
          function(iterated) {
            setInternalState(this, {
              type: STRING_ITERATOR,
              string: String(iterated),
              index: 0
            });
            // `%StringIteratorPrototype%.next` method
            // https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
          },
          function next() {
            var state = getInternalState(this);
            var string = state.string;
            var index = state.index;
            var point;
            if (index >= string.length) return { value: undefined, done: true };
            point = charAt(string, index);
            state.index += point.length;
            return { value: point, done: false };
          }
        );
      },
      {
        '../internals/string-multibyte':
          '../../node_modules/simplebar/node_modules/core-js/internals/string-multibyte.js',
        '../internals/internal-state':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js',
        '../internals/define-iterator':
          '../../node_modules/simplebar/node_modules/core-js/internals/define-iterator.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/redefine-all.js': [
      function(require, module, exports) {
        var redefine = require('../internals/redefine');

        module.exports = function(target, src, options) {
          for (var key in src) redefine(target, key, src[key], options);
          return target;
        };
      },
      {
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/freezing.js': [
      function(require, module, exports) {
        var fails = require('../internals/fails');

        module.exports = !fails(function() {
          return Object.isExtensible(Object.preventExtensions({}));
        });
      },
      {
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/internal-metadata.js': [
      function(require, module, exports) {
        var hiddenKeys = require('../internals/hidden-keys');
        var isObject = require('../internals/is-object');
        var has = require('../internals/has');
        var defineProperty = require('../internals/object-define-property').f;
        var uid = require('../internals/uid');
        var FREEZING = require('../internals/freezing');

        var METADATA = uid('meta');
        var id = 0;

        var isExtensible =
          Object.isExtensible ||
          function() {
            return true;
          };

        var setMetadata = function(it) {
          defineProperty(it, METADATA, {
            value: {
              objectID: 'O' + ++id, // object ID
              weakData: {} // weak collections IDs
            }
          });
        };

        var fastKey = function(it, create) {
          // return a primitive with prefix
          if (!isObject(it))
            return typeof it == 'symbol'
              ? it
              : (typeof it == 'string' ? 'S' : 'P') + it;
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return 'F';
            // not necessary to add metadata
            if (!create) return 'E';
            // add missing metadata
            setMetadata(it);
            // return object ID
          }
          return it[METADATA].objectID;
        };

        var getWeakData = function(it, create) {
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return true;
            // not necessary to add metadata
            if (!create) return false;
            // add missing metadata
            setMetadata(it);
            // return the store of weak collections IDs
          }
          return it[METADATA].weakData;
        };

        // add metadata on freeze-family methods calling
        var onFreeze = function(it) {
          if (
            FREEZING &&
            meta.REQUIRED &&
            isExtensible(it) &&
            !has(it, METADATA)
          )
            setMetadata(it);
          return it;
        };

        var meta = (module.exports = {
          REQUIRED: false,
          fastKey: fastKey,
          getWeakData: getWeakData,
          onFreeze: onFreeze
        });

        hiddenKeys[METADATA] = true;
      },
      {
        '../internals/hidden-keys':
          '../../node_modules/simplebar/node_modules/core-js/internals/hidden-keys.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js',
        '../internals/uid':
          '../../node_modules/simplebar/node_modules/core-js/internals/uid.js',
        '../internals/freezing':
          '../../node_modules/simplebar/node_modules/core-js/internals/freezing.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/is-array-iterator-method.js': [
      function(require, module, exports) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var Iterators = require('../internals/iterators');

        var ITERATOR = wellKnownSymbol('iterator');
        var ArrayPrototype = Array.prototype;

        // check on default Array iterator
        module.exports = function(it) {
          return (
            it !== undefined &&
            (Iterators.Array === it || ArrayPrototype[ITERATOR] === it)
          );
        };
      },
      {
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/iterators':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/get-iterator-method.js': [
      function(require, module, exports) {
        var classof = require('../internals/classof');
        var Iterators = require('../internals/iterators');
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var ITERATOR = wellKnownSymbol('iterator');

        module.exports = function(it) {
          if (it != undefined)
            return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
        };
      },
      {
        '../internals/classof':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof.js',
        '../internals/iterators':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterators.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/call-with-safe-iteration-closing.js': [
      function(require, module, exports) {
        var anObject = require('../internals/an-object');

        // call something on iterator step with safe closing on error
        module.exports = function(iterator, fn, value, ENTRIES) {
          try {
            return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
            // 7.4.6 IteratorClose(iterator, completion)
          } catch (error) {
            var returnMethod = iterator['return'];
            if (returnMethod !== undefined)
              anObject(returnMethod.call(iterator));
            throw error;
          }
        };
      },
      {
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/iterate.js': [
      function(require, module, exports) {
        var anObject = require('../internals/an-object');
        var isArrayIteratorMethod = require('../internals/is-array-iterator-method');
        var toLength = require('../internals/to-length');
        var bind = require('../internals/function-bind-context');
        var getIteratorMethod = require('../internals/get-iterator-method');
        var callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');

        var Result = function(stopped, result) {
          this.stopped = stopped;
          this.result = result;
        };

        var iterate = (module.exports = function(
          iterable,
          fn,
          that,
          AS_ENTRIES,
          IS_ITERATOR
        ) {
          var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
          var iterator, iterFn, index, length, result, next, step;

          if (IS_ITERATOR) {
            iterator = iterable;
          } else {
            iterFn = getIteratorMethod(iterable);
            if (typeof iterFn != 'function')
              throw TypeError('Target is not iterable');
            // optimisation for array iterators
            if (isArrayIteratorMethod(iterFn)) {
              for (
                index = 0, length = toLength(iterable.length);
                length > index;
                index++
              ) {
                result = AS_ENTRIES
                  ? boundFunction(
                      anObject((step = iterable[index]))[0],
                      step[1]
                    )
                  : boundFunction(iterable[index]);
                if (result && result instanceof Result) return result;
              }
              return new Result(false);
            }
            iterator = iterFn.call(iterable);
          }

          next = iterator.next;
          while (!(step = next.call(iterator)).done) {
            result = callWithSafeIterationClosing(
              iterator,
              boundFunction,
              step.value,
              AS_ENTRIES
            );
            if (typeof result == 'object' && result && result instanceof Result)
              return result;
          }
          return new Result(false);
        });

        iterate.stop = function(result) {
          return new Result(true, result);
        };
      },
      {
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/is-array-iterator-method':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-array-iterator-method.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js',
        '../internals/function-bind-context':
          '../../node_modules/simplebar/node_modules/core-js/internals/function-bind-context.js',
        '../internals/get-iterator-method':
          '../../node_modules/simplebar/node_modules/core-js/internals/get-iterator-method.js',
        '../internals/call-with-safe-iteration-closing':
          '../../node_modules/simplebar/node_modules/core-js/internals/call-with-safe-iteration-closing.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/an-instance.js': [
      function(require, module, exports) {
        module.exports = function(it, Constructor, name) {
          if (!(it instanceof Constructor)) {
            throw TypeError(
              'Incorrect ' + (name ? name + ' ' : '') + 'invocation'
            );
          }
          return it;
        };
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/check-correctness-of-iteration.js': [
      function(require, module, exports) {
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var ITERATOR = wellKnownSymbol('iterator');
        var SAFE_CLOSING = false;

        try {
          var called = 0;
          var iteratorWithReturn = {
            next: function() {
              return { done: !!called++ };
            },
            return: function() {
              SAFE_CLOSING = true;
            }
          };
          iteratorWithReturn[ITERATOR] = function() {
            return this;
          };
          // eslint-disable-next-line no-throw-literal
          Array.from(iteratorWithReturn, function() {
            throw 2;
          });
        } catch (error) {
          /* empty */
        }

        module.exports = function(exec, SKIP_CLOSING) {
          if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
          var ITERATION_SUPPORT = false;
          try {
            var object = {};
            object[ITERATOR] = function() {
              return {
                next: function() {
                  return { done: (ITERATION_SUPPORT = true) };
                }
              };
            };
            exec(object);
          } catch (error) {
            /* empty */
          }
          return ITERATION_SUPPORT;
        };
      },
      {
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/inherit-if-required.js': [
      function(require, module, exports) {
        var isObject = require('../internals/is-object');
        var setPrototypeOf = require('../internals/object-set-prototype-of');

        // makes subclassing work correct for wrapped built-ins
        module.exports = function($this, dummy, Wrapper) {
          var NewTarget, NewTargetPrototype;
          if (
            // it can work only with native `setPrototypeOf`
            setPrototypeOf &&
            // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
            typeof (NewTarget = dummy.constructor) == 'function' &&
            NewTarget !== Wrapper &&
            isObject((NewTargetPrototype = NewTarget.prototype)) &&
            NewTargetPrototype !== Wrapper.prototype
          )
            setPrototypeOf($this, NewTargetPrototype);
          return $this;
        };
      },
      {
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/object-set-prototype-of':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-set-prototype-of.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/collection.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var global = require('../internals/global');
        var isForced = require('../internals/is-forced');
        var redefine = require('../internals/redefine');
        var InternalMetadataModule = require('../internals/internal-metadata');
        var iterate = require('../internals/iterate');
        var anInstance = require('../internals/an-instance');
        var isObject = require('../internals/is-object');
        var fails = require('../internals/fails');
        var checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');
        var setToStringTag = require('../internals/set-to-string-tag');
        var inheritIfRequired = require('../internals/inherit-if-required');

        module.exports = function(CONSTRUCTOR_NAME, wrapper, common) {
          var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
          var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
          var ADDER = IS_MAP ? 'set' : 'add';
          var NativeConstructor = global[CONSTRUCTOR_NAME];
          var NativePrototype =
            NativeConstructor && NativeConstructor.prototype;
          var Constructor = NativeConstructor;
          var exported = {};

          var fixMethod = function(KEY) {
            var nativeMethod = NativePrototype[KEY];
            redefine(
              NativePrototype,
              KEY,
              KEY == 'add'
                ? function add(value) {
                    nativeMethod.call(this, value === 0 ? 0 : value);
                    return this;
                  }
                : KEY == 'delete'
                ? function(key) {
                    return IS_WEAK && !isObject(key)
                      ? false
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : KEY == 'get'
                ? function get(key) {
                    return IS_WEAK && !isObject(key)
                      ? undefined
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : KEY == 'has'
                ? function has(key) {
                    return IS_WEAK && !isObject(key)
                      ? false
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : function set(key, value) {
                    nativeMethod.call(this, key === 0 ? 0 : key, value);
                    return this;
                  }
            );
          };

          // eslint-disable-next-line max-len
          if (
            isForced(
              CONSTRUCTOR_NAME,
              typeof NativeConstructor != 'function' ||
                !(
                  IS_WEAK ||
                  (NativePrototype.forEach &&
                    !fails(function() {
                      new NativeConstructor().entries().next();
                    }))
                )
            )
          ) {
            // create collection constructor
            Constructor = common.getConstructor(
              wrapper,
              CONSTRUCTOR_NAME,
              IS_MAP,
              ADDER
            );
            InternalMetadataModule.REQUIRED = true;
          } else if (isForced(CONSTRUCTOR_NAME, true)) {
            var instance = new Constructor();
            // early implementations not supports chaining
            var HASNT_CHAINING =
              instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
            // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
            var THROWS_ON_PRIMITIVES = fails(function() {
              instance.has(1);
            });
            // most early implementations doesn't supports iterables, most modern - not close it correctly
            // eslint-disable-next-line no-new
            var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function(
              iterable
            ) {
              new NativeConstructor(iterable);
            });
            // for early implementations -0 and +0 not the same
            var BUGGY_ZERO =
              !IS_WEAK &&
              fails(function() {
                // V8 ~ Chromium 42- fails only with 5+ elements
                var $instance = new NativeConstructor();
                var index = 5;
                while (index--) $instance[ADDER](index, index);
                return !$instance.has(-0);
              });

            if (!ACCEPT_ITERABLES) {
              Constructor = wrapper(function(dummy, iterable) {
                anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
                var that = inheritIfRequired(
                  new NativeConstructor(),
                  dummy,
                  Constructor
                );
                if (iterable != undefined)
                  iterate(iterable, that[ADDER], that, IS_MAP);
                return that;
              });
              Constructor.prototype = NativePrototype;
              NativePrototype.constructor = Constructor;
            }

            if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
              fixMethod('delete');
              fixMethod('has');
              IS_MAP && fixMethod('get');
            }

            if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

            // weak collections should not contains .clear method
            if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
          }

          exported[CONSTRUCTOR_NAME] = Constructor;
          $(
            { global: true, forced: Constructor != NativeConstructor },
            exported
          );

          setToStringTag(Constructor, CONSTRUCTOR_NAME);

          if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

          return Constructor;
        };
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/is-forced':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-forced.js',
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js',
        '../internals/internal-metadata':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-metadata.js',
        '../internals/iterate':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterate.js',
        '../internals/an-instance':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-instance.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/check-correctness-of-iteration':
          '../../node_modules/simplebar/node_modules/core-js/internals/check-correctness-of-iteration.js',
        '../internals/set-to-string-tag':
          '../../node_modules/simplebar/node_modules/core-js/internals/set-to-string-tag.js',
        '../internals/inherit-if-required':
          '../../node_modules/simplebar/node_modules/core-js/internals/inherit-if-required.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/collection-weak.js': [
      function(require, module, exports) {
        var define;
        ('use strict');
        var redefineAll = require('../internals/redefine-all');
        var getWeakData = require('../internals/internal-metadata').getWeakData;
        var anObject = require('../internals/an-object');
        var isObject = require('../internals/is-object');
        var anInstance = require('../internals/an-instance');
        var iterate = require('../internals/iterate');
        var ArrayIterationModule = require('../internals/array-iteration');
        var $has = require('../internals/has');
        var InternalStateModule = require('../internals/internal-state');

        var setInternalState = InternalStateModule.set;
        var internalStateGetterFor = InternalStateModule.getterFor;
        var find = ArrayIterationModule.find;
        var findIndex = ArrayIterationModule.findIndex;
        var id = 0;

        // fallback for uncaught frozen keys
        var uncaughtFrozenStore = function(store) {
          return store.frozen || (store.frozen = new UncaughtFrozenStore());
        };

        var UncaughtFrozenStore = function() {
          this.entries = [];
        };

        var findUncaughtFrozen = function(store, key) {
          return find(store.entries, function(it) {
            return it[0] === key;
          });
        };

        UncaughtFrozenStore.prototype = {
          get: function(key) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) return entry[1];
          },
          has: function(key) {
            return !!findUncaughtFrozen(this, key);
          },
          set: function(key, value) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) entry[1] = value;
            else this.entries.push([key, value]);
          },
          delete: function(key) {
            var index = findIndex(this.entries, function(it) {
              return it[0] === key;
            });
            if (~index) this.entries.splice(index, 1);
            return !!~index;
          }
        };

        module.exports = {
          getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
            var C = wrapper(function(that, iterable) {
              anInstance(that, C, CONSTRUCTOR_NAME);
              setInternalState(that, {
                type: CONSTRUCTOR_NAME,
                id: id++,
                frozen: undefined
              });
              if (iterable != undefined)
                iterate(iterable, that[ADDER], that, IS_MAP);
            });

            var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

            var define = function(that, key, value) {
              var state = getInternalState(that);
              var data = getWeakData(anObject(key), true);
              if (data === true) uncaughtFrozenStore(state).set(key, value);
              else data[state.id] = value;
              return that;
            };

            redefineAll(C.prototype, {
              // 23.3.3.2 WeakMap.prototype.delete(key)
              // 23.4.3.3 WeakSet.prototype.delete(value)
              delete: function(key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true)
                  return uncaughtFrozenStore(state)['delete'](key);
                return data && $has(data, state.id) && delete data[state.id];
              },
              // 23.3.3.4 WeakMap.prototype.has(key)
              // 23.4.3.4 WeakSet.prototype.has(value)
              has: function has(key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true) return uncaughtFrozenStore(state).has(key);
                return data && $has(data, state.id);
              }
            });

            redefineAll(
              C.prototype,
              IS_MAP
                ? {
                    // 23.3.3.3 WeakMap.prototype.get(key)
                    get: function get(key) {
                      var state = getInternalState(this);
                      if (isObject(key)) {
                        var data = getWeakData(key);
                        if (data === true)
                          return uncaughtFrozenStore(state).get(key);
                        return data ? data[state.id] : undefined;
                      }
                    },
                    // 23.3.3.5 WeakMap.prototype.set(key, value)
                    set: function set(key, value) {
                      return define(this, key, value);
                    }
                  }
                : {
                    // 23.4.3.1 WeakSet.prototype.add(value)
                    add: function add(value) {
                      return define(this, value, true);
                    }
                  }
            );

            return C;
          }
        };
      },
      {
        '../internals/redefine-all':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine-all.js',
        '../internals/internal-metadata':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-metadata.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/an-instance':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-instance.js',
        '../internals/iterate':
          '../../node_modules/simplebar/node_modules/core-js/internals/iterate.js',
        '../internals/array-iteration':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-iteration.js',
        '../internals/has':
          '../../node_modules/simplebar/node_modules/core-js/internals/has.js',
        '../internals/internal-state':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.weak-map.js': [
      function(require, module, exports) {
        'use strict';
        var global = require('../internals/global');
        var redefineAll = require('../internals/redefine-all');
        var InternalMetadataModule = require('../internals/internal-metadata');
        var collection = require('../internals/collection');
        var collectionWeak = require('../internals/collection-weak');
        var isObject = require('../internals/is-object');
        var enforceIternalState = require('../internals/internal-state')
          .enforce;
        var NATIVE_WEAK_MAP = require('../internals/native-weak-map');

        var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
        var isExtensible = Object.isExtensible;
        var InternalWeakMap;

        var wrapper = function(init) {
          return function WeakMap() {
            return init(this, arguments.length ? arguments[0] : undefined);
          };
        };

        // `WeakMap` constructor
        // https://tc39.github.io/ecma262/#sec-weakmap-constructor
        var $WeakMap = (module.exports = collection(
          'WeakMap',
          wrapper,
          collectionWeak
        ));

        // IE11 WeakMap frozen keys fix
        // We can't use feature detection because it crash some old IE builds
        // https://github.com/zloirock/core-js/issues/485
        if (NATIVE_WEAK_MAP && IS_IE11) {
          InternalWeakMap = collectionWeak.getConstructor(
            wrapper,
            'WeakMap',
            true
          );
          InternalMetadataModule.REQUIRED = true;
          var WeakMapPrototype = $WeakMap.prototype;
          var nativeDelete = WeakMapPrototype['delete'];
          var nativeHas = WeakMapPrototype.has;
          var nativeGet = WeakMapPrototype.get;
          var nativeSet = WeakMapPrototype.set;
          redefineAll(WeakMapPrototype, {
            delete: function(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return (
                  nativeDelete.call(this, key) || state.frozen['delete'](key)
                );
              }
              return nativeDelete.call(this, key);
            },
            has: function has(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key) || state.frozen.has(key);
              }
              return nativeHas.call(this, key);
            },
            get: function get(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key)
                  ? nativeGet.call(this, key)
                  : state.frozen.get(key);
              }
              return nativeGet.call(this, key);
            },
            set: function set(key, value) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                nativeHas.call(this, key)
                  ? nativeSet.call(this, key, value)
                  : state.frozen.set(key, value);
              } else nativeSet.call(this, key, value);
              return this;
            }
          });
        }
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/redefine-all':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine-all.js',
        '../internals/internal-metadata':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-metadata.js',
        '../internals/collection':
          '../../node_modules/simplebar/node_modules/core-js/internals/collection.js',
        '../internals/collection-weak':
          '../../node_modules/simplebar/node_modules/core-js/internals/collection-weak.js',
        '../internals/is-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/is-object.js',
        '../internals/internal-state':
          '../../node_modules/simplebar/node_modules/core-js/internals/internal-state.js',
        '../internals/native-weak-map':
          '../../node_modules/simplebar/node_modules/core-js/internals/native-weak-map.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/web.dom-collections.iterator.js': [
      function(require, module, exports) {
        var global = require('../internals/global');
        var DOMIterables = require('../internals/dom-iterables');
        var ArrayIteratorMethods = require('../modules/es.array.iterator');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var wellKnownSymbol = require('../internals/well-known-symbol');

        var ITERATOR = wellKnownSymbol('iterator');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var ArrayValues = ArrayIteratorMethods.values;

        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype;
          if (CollectionPrototype) {
            // some Chrome versions have non-configurable methods on DOMTokenList
            if (CollectionPrototype[ITERATOR] !== ArrayValues)
              try {
                createNonEnumerableProperty(
                  CollectionPrototype,
                  ITERATOR,
                  ArrayValues
                );
              } catch (error) {
                CollectionPrototype[ITERATOR] = ArrayValues;
              }
            if (!CollectionPrototype[TO_STRING_TAG]) {
              createNonEnumerableProperty(
                CollectionPrototype,
                TO_STRING_TAG,
                COLLECTION_NAME
              );
            }
            if (DOMIterables[COLLECTION_NAME])
              for (var METHOD_NAME in ArrayIteratorMethods) {
                // some Chrome versions have non-configurable methods on DOMTokenList
                if (
                  CollectionPrototype[METHOD_NAME] !==
                  ArrayIteratorMethods[METHOD_NAME]
                )
                  try {
                    createNonEnumerableProperty(
                      CollectionPrototype,
                      METHOD_NAME,
                      ArrayIteratorMethods[METHOD_NAME]
                    );
                  } catch (error) {
                    CollectionPrototype[METHOD_NAME] =
                      ArrayIteratorMethods[METHOD_NAME];
                  }
              }
          }
        }
      },
      {
        '../internals/global':
          '../../node_modules/simplebar/node_modules/core-js/internals/global.js',
        '../internals/dom-iterables':
          '../../node_modules/simplebar/node_modules/core-js/internals/dom-iterables.js',
        '../modules/es.array.iterator':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.array.iterator.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js'
      }
    ],
    '../../node_modules/lodash.throttle/index.js': [
      function(require, module, exports) {
        var global = arguments[3];
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as the `TypeError` message for "Functions" methods. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
          nativeMin = Math.min;

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function() {
          return root.Date.now();
        };

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
          var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = 'maxWait' in options;
            maxWait = maxing
              ? nativeMax(toNumber(options.maxWait) || 0, wait)
              : maxWait;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }

          function invokeFunc(time) {
            var args = lastArgs,
              thisArg = lastThis;

            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }

          function leadingEdge(time) {
            // Reset any `maxWait` timer.
            lastInvokeTime = time;
            // Start the timer for the trailing edge.
            timerId = setTimeout(timerExpired, wait);
            // Invoke the leading edge.
            return leading ? invokeFunc(time) : result;
          }

          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              result = wait - timeSinceLastCall;

            return maxing
              ? nativeMin(result, maxWait - timeSinceLastInvoke)
              : result;
          }

          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;

            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (
              lastCallTime === undefined ||
              timeSinceLastCall >= wait ||
              timeSinceLastCall < 0 ||
              (maxing && timeSinceLastInvoke >= maxWait)
            );
          }

          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            // Restart the timer.
            timerId = setTimeout(timerExpired, remainingWait(time));
          }

          function trailingEdge(time) {
            timerId = undefined;

            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }

          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }

          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }

          function debounced() {
            var time = now(),
              isInvoking = shouldInvoke(time);

            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;

            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }

        /**
         * Creates a throttled function that only invokes `func` at most once per
         * every `wait` milliseconds. The throttled function comes with a `cancel`
         * method to cancel delayed `func` invocations and a `flush` method to
         * immediately invoke them. Provide `options` to indicate whether `func`
         * should be invoked on the leading and/or trailing edge of the `wait`
         * timeout. The `func` is invoked with the last arguments provided to the
         * throttled function. Subsequent calls to the throttled function return the
         * result of the last `func` invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the throttled function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.throttle` and `_.debounce`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to throttle.
         * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=true]
         *  Specify invoking on the leading edge of the timeout.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new throttled function.
         * @example
         *
         * // Avoid excessively updating the position while scrolling.
         * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
         *
         * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
         * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
         * jQuery(element).on('click', throttled);
         *
         * // Cancel the trailing throttled invocation.
         * jQuery(window).on('popstate', throttled.cancel);
         */
        function throttle(func, wait, options) {
          var leading = true,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = 'leading' in options ? !!options.leading : leading;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            leading: leading,
            maxWait: wait,
            trailing: trailing
          });
        }

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            typeof value == 'symbol' ||
            (isObjectLike(value) && objectToString.call(value) == symbolTag)
          );
        }

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other =
              typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value)
            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
            : reIsBadHex.test(value)
            ? NAN
            : +value;
        }

        module.exports = throttle;
      },
      {}
    ],
    '../../node_modules/lodash.debounce/index.js': [
      function(require, module, exports) {
        var global = arguments[3];
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as the `TypeError` message for "Functions" methods. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
          nativeMin = Math.min;

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function() {
          return root.Date.now();
        };

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
          var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = 'maxWait' in options;
            maxWait = maxing
              ? nativeMax(toNumber(options.maxWait) || 0, wait)
              : maxWait;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }

          function invokeFunc(time) {
            var args = lastArgs,
              thisArg = lastThis;

            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }

          function leadingEdge(time) {
            // Reset any `maxWait` timer.
            lastInvokeTime = time;
            // Start the timer for the trailing edge.
            timerId = setTimeout(timerExpired, wait);
            // Invoke the leading edge.
            return leading ? invokeFunc(time) : result;
          }

          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              result = wait - timeSinceLastCall;

            return maxing
              ? nativeMin(result, maxWait - timeSinceLastInvoke)
              : result;
          }

          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;

            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (
              lastCallTime === undefined ||
              timeSinceLastCall >= wait ||
              timeSinceLastCall < 0 ||
              (maxing && timeSinceLastInvoke >= maxWait)
            );
          }

          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            // Restart the timer.
            timerId = setTimeout(timerExpired, remainingWait(time));
          }

          function trailingEdge(time) {
            timerId = undefined;

            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }

          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }

          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }

          function debounced() {
            var time = now(),
              isInvoking = shouldInvoke(time);

            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;

            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            typeof value == 'symbol' ||
            (isObjectLike(value) && objectToString.call(value) == symbolTag)
          );
        }

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other =
              typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value)
            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
            : reIsBadHex.test(value)
            ? NAN
            : +value;
        }

        module.exports = debounce;
      },
      {}
    ],
    '../../node_modules/lodash.memoize/index.js': [
      function(require, module, exports) {
        var global = arguments[3];
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as the `TypeError` message for "Functions" methods. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** `Object#toString` result references. */
        var funcTag = '[object Function]',
          genTag = '[object GeneratorFunction]';

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /**
         * Gets the value at `key` of `object`.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {string} key The key of the property to get.
         * @returns {*} Returns the property value.
         */
        function getValue(object, key) {
          return object == null ? undefined : object[key];
        }

        /**
         * Checks if `value` is a host object in IE < 9.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
         */
        function isHostObject(value) {
          // Many host objects are `Object` objects that can coerce to strings
          // despite having improperly defined `toString` methods.
          var result = false;
          if (value != null && typeof value.toString != 'function') {
            try {
              result = !!(value + '');
            } catch (e) {}
          }
          return result;
        }

        /** Used for built-in method references. */
        var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;

        /** Used to detect overreaching core-js shims. */
        var coreJsData = root['__core-js_shared__'];

        /** Used to detect methods masquerading as native. */
        var maskSrcKey = (function() {
          var uid = /[^.]+$/.exec(
            (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
          );
          return uid ? 'Symbol(src)_1.' + uid : '';
        })();

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /** Used to detect if a method is native. */
        var reIsNative = RegExp(
          '^' +
            funcToString
              .call(hasOwnProperty)
              .replace(reRegExpChar, '\\$&')
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                '$1.*?'
              ) +
            '$'
        );

        /** Built-in value references. */
        var splice = arrayProto.splice;

        /* Built-in method references that are verified to be native. */
        var Map = getNative(root, 'Map'),
          nativeCreate = getNative(Object, 'create');

        /**
         * Creates a hash object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Hash(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the hash.
         *
         * @private
         * @name clear
         * @memberOf Hash
         */
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
        }

        /**
         * Removes `key` and its value from the hash.
         *
         * @private
         * @name delete
         * @memberOf Hash
         * @param {Object} hash The hash to modify.
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function hashDelete(key) {
          return this.has(key) && delete this.__data__[key];
        }

        /**
         * Gets the hash value for `key`.
         *
         * @private
         * @name get
         * @memberOf Hash
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result = data[key];
            return result === HASH_UNDEFINED ? undefined : result;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }

        /**
         * Checks if a hash value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Hash
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate
            ? data[key] !== undefined
            : hasOwnProperty.call(data, key);
        }

        /**
         * Sets the hash `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Hash
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the hash instance.
         */
        function hashSet(key, value) {
          var data = this.__data__;
          data[key] =
            nativeCreate && value === undefined ? HASH_UNDEFINED : value;
          return this;
        }

        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;

        /**
         * Creates an list cache object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function ListCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the list cache.
         *
         * @private
         * @name clear
         * @memberOf ListCache
         */
        function listCacheClear() {
          this.__data__ = [];
        }

        /**
         * Removes `key` and its value from the list cache.
         *
         * @private
         * @name delete
         * @memberOf ListCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function listCacheDelete(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          return true;
        }

        /**
         * Gets the list cache value for `key`.
         *
         * @private
         * @name get
         * @memberOf ListCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function listCacheGet(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          return index < 0 ? undefined : data[index][1];
        }

        /**
         * Checks if a list cache value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf ListCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }

        /**
         * Sets the list cache `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf ListCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the list cache instance.
         */
        function listCacheSet(key, value) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }

        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;

        /**
         * Creates a map cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function MapCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the map.
         *
         * @private
         * @name clear
         * @memberOf MapCache
         */
        function mapCacheClear() {
          this.__data__ = {
            hash: new Hash(),
            map: new (Map || ListCache)(),
            string: new Hash()
          };
        }

        /**
         * Removes `key` and its value from the map.
         *
         * @private
         * @name delete
         * @memberOf MapCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function mapCacheDelete(key) {
          return getMapData(this, key)['delete'](key);
        }

        /**
         * Gets the map value for `key`.
         *
         * @private
         * @name get
         * @memberOf MapCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }

        /**
         * Checks if a map value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf MapCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }

        /**
         * Sets the map `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf MapCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the map cache instance.
         */
        function mapCacheSet(key, value) {
          getMapData(this, key).set(key, value);
          return this;
        }

        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;

        /**
         * Gets the index at which the `key` is found in `array` of key-value pairs.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} key The key to search for.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }

        /**
         * The base implementation of `_.isNative` without bad shim checks.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a native function,
         *  else `false`.
         */
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern =
            isFunction(value) || isHostObject(value)
              ? reIsNative
              : reIsHostCtor;
          return pattern.test(toSource(value));
        }

        /**
         * Gets the data for `map`.
         *
         * @private
         * @param {Object} map The map to query.
         * @param {string} key The reference key.
         * @returns {*} Returns the map data.
         */
        function getMapData(map, key) {
          var data = map.__data__;
          return isKeyable(key)
            ? data[typeof key == 'string' ? 'string' : 'hash']
            : data.map;
        }

        /**
         * Gets the native function at `key` of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {string} key The key of the method to get.
         * @returns {*} Returns the function if it's native, else `undefined`.
         */
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined;
        }

        /**
         * Checks if `value` is suitable for use as unique object key.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
         */
        function isKeyable(value) {
          var type = typeof value;
          return type == 'string' ||
            type == 'number' ||
            type == 'symbol' ||
            type == 'boolean'
            ? value !== '__proto__'
            : value === null;
        }

        /**
         * Checks if `func` has its source masked.
         *
         * @private
         * @param {Function} func The function to check.
         * @returns {boolean} Returns `true` if `func` is masked, else `false`.
         */
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }

        /**
         * Converts `func` to its source code.
         *
         * @private
         * @param {Function} func The function to process.
         * @returns {string} Returns the source code.
         */
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {}
            try {
              return func + '';
            } catch (e) {}
          }
          return '';
        }

        /**
         * Creates a function that memoizes the result of `func`. If `resolver` is
         * provided, it determines the cache key for storing the result based on the
         * arguments provided to the memoized function. By default, the first argument
         * provided to the memoized function is used as the map cache key. The `func`
         * is invoked with the `this` binding of the memoized function.
         *
         * **Note:** The cache is exposed as the `cache` property on the memoized
         * function. Its creation may be customized by replacing the `_.memoize.Cache`
         * constructor with one whose instances implement the
         * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
         * method interface of `delete`, `get`, `has`, and `set`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to have its output memoized.
         * @param {Function} [resolver] The function to resolve the cache key.
         * @returns {Function} Returns the new memoized function.
         * @example
         *
         * var object = { 'a': 1, 'b': 2 };
         * var other = { 'c': 3, 'd': 4 };
         *
         * var values = _.memoize(_.values);
         * values(object);
         * // => [1, 2]
         *
         * values(other);
         * // => [3, 4]
         *
         * object.a = 2;
         * values(object);
         * // => [1, 2]
         *
         * // Modify the result cache.
         * values.cache.set(object, ['a', 'b']);
         * values(object);
         * // => ['a', 'b']
         *
         * // Replace `_.memoize.Cache`.
         * _.memoize.Cache = WeakMap;
         */
        function memoize(func, resolver) {
          if (
            typeof func != 'function' ||
            (resolver && typeof resolver != 'function')
          ) {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments,
              key = resolver ? resolver.apply(this, args) : args[0],
              cache = memoized.cache;

            if (cache.has(key)) {
              return cache.get(key);
            }
            var result = func.apply(this, args);
            memoized.cache = cache.set(key, result);
            return result;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }

        // Assign cache to `_.memoize`.
        memoize.Cache = MapCache;

        /**
         * Performs a
         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * comparison between two values to determine if they are equivalent.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to compare.
         * @param {*} other The other value to compare.
         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
         * @example
         *
         * var object = { 'a': 1 };
         * var other = { 'a': 1 };
         *
         * _.eq(object, object);
         * // => true
         *
         * _.eq(object, other);
         * // => false
         *
         * _.eq('a', 'a');
         * // => true
         *
         * _.eq('a', Object('a'));
         * // => false
         *
         * _.eq(NaN, NaN);
         * // => true
         */
        function eq(value, other) {
          return value === other || (value !== value && other !== other);
        }

        /**
         * Checks if `value` is classified as a `Function` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a function, else `false`.
         * @example
         *
         * _.isFunction(_);
         * // => true
         *
         * _.isFunction(/abc/);
         * // => false
         */
        function isFunction(value) {
          // The use of `Object#toString` avoids issues with the `typeof` operator
          // in Safari 8-9 which returns 'object' for typed array and other constructors.
          var tag = isObject(value) ? objectToString.call(value) : '';
          return tag == funcTag || tag == genTag;
        }

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }

        module.exports = memoize;
      },
      {}
    ],
    '../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js': [
      function(require, module, exports) {
        var global = arguments[3];
        ('use strict');

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.default = void 0;

        /**
         * A collection of shims that provide minimal functionality of the ES6 collections.
         *
         * These implementations are not meant to be used outside of the ResizeObserver
         * modules as they cover only a limited range of use cases.
         */

        /* eslint-disable require-jsdoc, valid-jsdoc */
        var MapShim = (function() {
          if (typeof Map !== 'undefined') {
            return Map;
          }
          /**
           * Returns index in provided array that matches the specified key.
           *
           * @param {Array<Array>} arr
           * @param {*} key
           * @returns {number}
           */

          function getIndex(arr, key) {
            var result = -1;
            arr.some(function(entry, index) {
              if (entry[0] === key) {
                result = index;
                return true;
              }

              return false;
            });
            return result;
          }

          return (
            /** @class */
            (function() {
              function class_1() {
                this.__entries__ = [];
              }

              Object.defineProperty(class_1.prototype, 'size', {
                /**
                 * @returns {boolean}
                 */
                get: function() {
                  return this.__entries__.length;
                },
                enumerable: true,
                configurable: true
              });
              /**
               * @param {*} key
               * @returns {*}
               */

              class_1.prototype.get = function(key) {
                var index = getIndex(this.__entries__, key);
                var entry = this.__entries__[index];
                return entry && entry[1];
              };
              /**
               * @param {*} key
               * @param {*} value
               * @returns {void}
               */

              class_1.prototype.set = function(key, value) {
                var index = getIndex(this.__entries__, key);

                if (~index) {
                  this.__entries__[index][1] = value;
                } else {
                  this.__entries__.push([key, value]);
                }
              };
              /**
               * @param {*} key
               * @returns {void}
               */

              class_1.prototype.delete = function(key) {
                var entries = this.__entries__;
                var index = getIndex(entries, key);

                if (~index) {
                  entries.splice(index, 1);
                }
              };
              /**
               * @param {*} key
               * @returns {void}
               */

              class_1.prototype.has = function(key) {
                return !!~getIndex(this.__entries__, key);
              };
              /**
               * @returns {void}
               */

              class_1.prototype.clear = function() {
                this.__entries__.splice(0);
              };
              /**
               * @param {Function} callback
               * @param {*} [ctx=null]
               * @returns {void}
               */

              class_1.prototype.forEach = function(callback, ctx) {
                if (ctx === void 0) {
                  ctx = null;
                }

                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                  var entry = _a[_i];
                  callback.call(ctx, entry[1], entry[0]);
                }
              };

              return class_1;
            })()
          );
        })();
        /**
         * Detects whether window and document objects are available in current environment.
         */

        var isBrowser =
          typeof window !== 'undefined' &&
          typeof document !== 'undefined' &&
          window.document === document; // Returns global object of a current environment.

        var global$1 = (function() {
          if (typeof global !== 'undefined' && global.Math === Math) {
            return global;
          }

          if (typeof self !== 'undefined' && self.Math === Math) {
            return self;
          }

          if (typeof window !== 'undefined' && window.Math === Math) {
            return window;
          } // eslint-disable-next-line no-new-func

          return Function('return this')();
        })();
        /**
         * A shim for the requestAnimationFrame which falls back to the setTimeout if
         * first one is not supported.
         *
         * @returns {number} Requests' identifier.
         */

        var requestAnimationFrame$1 = (function() {
          if (typeof requestAnimationFrame === 'function') {
            // It's required to use a bounded function because IE sometimes throws
            // an "Invalid calling object" error if rAF is invoked without the global
            // object on the left hand side.
            return requestAnimationFrame.bind(global$1);
          }

          return function(callback) {
            return setTimeout(function() {
              return callback(Date.now());
            }, 1000 / 60);
          };
        })(); // Defines minimum timeout before adding a trailing call.

        var trailingTimeout = 2;
        /**
         * Creates a wrapper function which ensures that provided callback will be
         * invoked only once during the specified delay period.
         *
         * @param {Function} callback - Function to be invoked after the delay period.
         * @param {number} delay - Delay after which to invoke callback.
         * @returns {Function}
         */

        function throttle(callback, delay) {
          var leadingCall = false,
            trailingCall = false,
            lastCallTime = 0;
          /**
           * Invokes the original callback function and schedules new invocation if
           * the "proxy" was called during current request.
           *
           * @returns {void}
           */

          function resolvePending() {
            if (leadingCall) {
              leadingCall = false;
              callback();
            }

            if (trailingCall) {
              proxy();
            }
          }
          /**
           * Callback invoked after the specified delay. It will further postpone
           * invocation of the original function delegating it to the
           * requestAnimationFrame.
           *
           * @returns {void}
           */

          function timeoutCallback() {
            requestAnimationFrame$1(resolvePending);
          }
          /**
           * Schedules invocation of the original function.
           *
           * @returns {void}
           */

          function proxy() {
            var timeStamp = Date.now();

            if (leadingCall) {
              // Reject immediately following calls.
              if (timeStamp - lastCallTime < trailingTimeout) {
                return;
              } // Schedule new call to be in invoked when the pending one is resolved.
              // This is important for "transitions" which never actually start
              // immediately so there is a chance that we might miss one if change
              // happens amids the pending invocation.

              trailingCall = true;
            } else {
              leadingCall = true;
              trailingCall = false;
              setTimeout(timeoutCallback, delay);
            }

            lastCallTime = timeStamp;
          }

          return proxy;
        } // Minimum delay before invoking the update of observers.

        var REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that
        // might affect dimensions of observed elements.

        var transitionKeys = [
          'top',
          'right',
          'bottom',
          'left',
          'width',
          'height',
          'size',
          'weight'
        ]; // Check if MutationObserver is available.

        var mutationObserverSupported = typeof MutationObserver !== 'undefined';
        /**
         * Singleton controller class which handles updates of ResizeObserver instances.
         */

        var ResizeObserverController =
          /** @class */
          (function() {
            /**
             * Creates a new instance of ResizeObserverController.
             *
             * @private
             */
            function ResizeObserverController() {
              /**
               * Indicates whether DOM listeners have been added.
               *
               * @private {boolean}
               */
              this.connected_ = false;
              /**
               * Tells that controller has subscribed for Mutation Events.
               *
               * @private {boolean}
               */

              this.mutationEventsAdded_ = false;
              /**
               * Keeps reference to the instance of MutationObserver.
               *
               * @private {MutationObserver}
               */

              this.mutationsObserver_ = null;
              /**
               * A list of connected observers.
               *
               * @private {Array<ResizeObserverSPI>}
               */

              this.observers_ = [];
              this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
              this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
            }
            /**
             * Adds observer to observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be added.
             * @returns {void}
             */

            ResizeObserverController.prototype.addObserver = function(
              observer
            ) {
              if (!~this.observers_.indexOf(observer)) {
                this.observers_.push(observer);
              } // Add listeners if they haven't been added yet.

              if (!this.connected_) {
                this.connect_();
              }
            };
            /**
             * Removes observer from observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be removed.
             * @returns {void}
             */

            ResizeObserverController.prototype.removeObserver = function(
              observer
            ) {
              var observers = this.observers_;
              var index = observers.indexOf(observer); // Remove observer if it's present in registry.

              if (~index) {
                observers.splice(index, 1);
              } // Remove listeners if controller has no connected observers.

              if (!observers.length && this.connected_) {
                this.disconnect_();
              }
            };
            /**
             * Invokes the update of observers. It will continue running updates insofar
             * it detects changes.
             *
             * @returns {void}
             */

            ResizeObserverController.prototype.refresh = function() {
              var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might
              // be future ones caused by CSS transitions.

              if (changesDetected) {
                this.refresh();
              }
            };
            /**
             * Updates every observer from observers list and notifies them of queued
             * entries.
             *
             * @private
             * @returns {boolean} Returns "true" if any observer has detected changes in
             *      dimensions of it's elements.
             */

            ResizeObserverController.prototype.updateObservers_ = function() {
              // Collect observers that have active observations.
              var activeObservers = this.observers_.filter(function(observer) {
                return observer.gatherActive(), observer.hasActive();
              }); // Deliver notifications in a separate cycle in order to avoid any
              // collisions between observers, e.g. when multiple instances of
              // ResizeObserver are tracking the same element and the callback of one
              // of them changes content dimensions of the observed target. Sometimes
              // this may result in notifications being blocked for the rest of observers.

              activeObservers.forEach(function(observer) {
                return observer.broadcastActive();
              });
              return activeObservers.length > 0;
            };
            /**
             * Initializes DOM listeners.
             *
             * @private
             * @returns {void}
             */

            ResizeObserverController.prototype.connect_ = function() {
              // Do nothing if running in a non-browser environment or if listeners
              // have been already added.
              if (!isBrowser || this.connected_) {
                return;
              } // Subscription to the "Transitionend" event is used as a workaround for
              // delayed transitions. This way it's possible to capture at least the
              // final state of an element.

              document.addEventListener('transitionend', this.onTransitionEnd_);
              window.addEventListener('resize', this.refresh);

              if (mutationObserverSupported) {
                this.mutationsObserver_ = new MutationObserver(this.refresh);
                this.mutationsObserver_.observe(document, {
                  attributes: true,
                  childList: true,
                  characterData: true,
                  subtree: true
                });
              } else {
                document.addEventListener('DOMSubtreeModified', this.refresh);
                this.mutationEventsAdded_ = true;
              }

              this.connected_ = true;
            };
            /**
             * Removes DOM listeners.
             *
             * @private
             * @returns {void}
             */

            ResizeObserverController.prototype.disconnect_ = function() {
              // Do nothing if running in a non-browser environment or if listeners
              // have been already removed.
              if (!isBrowser || !this.connected_) {
                return;
              }

              document.removeEventListener(
                'transitionend',
                this.onTransitionEnd_
              );
              window.removeEventListener('resize', this.refresh);

              if (this.mutationsObserver_) {
                this.mutationsObserver_.disconnect();
              }

              if (this.mutationEventsAdded_) {
                document.removeEventListener(
                  'DOMSubtreeModified',
                  this.refresh
                );
              }

              this.mutationsObserver_ = null;
              this.mutationEventsAdded_ = false;
              this.connected_ = false;
            };
            /**
             * "Transitionend" event handler.
             *
             * @private
             * @param {TransitionEvent} event
             * @returns {void}
             */

            ResizeObserverController.prototype.onTransitionEnd_ = function(_a) {
              var _b = _a.propertyName,
                propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.

              var isReflowProperty = transitionKeys.some(function(key) {
                return !!~propertyName.indexOf(key);
              });

              if (isReflowProperty) {
                this.refresh();
              }
            };
            /**
             * Returns instance of the ResizeObserverController.
             *
             * @returns {ResizeObserverController}
             */

            ResizeObserverController.getInstance = function() {
              if (!this.instance_) {
                this.instance_ = new ResizeObserverController();
              }

              return this.instance_;
            };
            /**
             * Holds reference to the controller's instance.
             *
             * @private {ResizeObserverController}
             */

            ResizeObserverController.instance_ = null;
            return ResizeObserverController;
          })();
        /**
         * Defines non-writable/enumerable properties of the provided target object.
         *
         * @param {Object} target - Object for which to define properties.
         * @param {Object} props - Properties to be defined.
         * @returns {Object} Target object.
         */

        var defineConfigurable = function(target, props) {
          for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
            var key = _a[_i];
            Object.defineProperty(target, key, {
              value: props[key],
              enumerable: false,
              writable: false,
              configurable: true
            });
          }

          return target;
        };
        /**
         * Returns the global object associated with provided element.
         *
         * @param {Object} target
         * @returns {Object}
         */

        var getWindowOf = function(target) {
          // Assume that the element is an instance of Node, which means that it
          // has the "ownerDocument" property from which we can retrieve a
          // corresponding global object.
          var ownerGlobal =
            target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from
          // provided element.

          return ownerGlobal || global$1;
        }; // Placeholder of an empty content rectangle.

        var emptyRect = createRectInit(0, 0, 0, 0);
        /**
         * Converts provided string to a number.
         *
         * @param {number|string} value
         * @returns {number}
         */

        function toFloat(value) {
          return parseFloat(value) || 0;
        }
        /**
         * Extracts borders size from provided styles.
         *
         * @param {CSSStyleDeclaration} styles
         * @param {...string} positions - Borders positions (top, right, ...)
         * @returns {number}
         */

        function getBordersSize(styles) {
          var positions = [];

          for (var _i = 1; _i < arguments.length; _i++) {
            positions[_i - 1] = arguments[_i];
          }

          return positions.reduce(function(size, position) {
            var value = styles['border-' + position + '-width'];
            return size + toFloat(value);
          }, 0);
        }
        /**
         * Extracts paddings sizes from provided styles.
         *
         * @param {CSSStyleDeclaration} styles
         * @returns {Object} Paddings box.
         */

        function getPaddings(styles) {
          var positions = ['top', 'right', 'bottom', 'left'];
          var paddings = {};

          for (
            var _i = 0, positions_1 = positions;
            _i < positions_1.length;
            _i++
          ) {
            var position = positions_1[_i];
            var value = styles['padding-' + position];
            paddings[position] = toFloat(value);
          }

          return paddings;
        }
        /**
         * Calculates content rectangle of provided SVG element.
         *
         * @param {SVGGraphicsElement} target - Element content rectangle of which needs
         *      to be calculated.
         * @returns {DOMRectInit}
         */

        function getSVGContentRect(target) {
          var bbox = target.getBBox();
          return createRectInit(0, 0, bbox.width, bbox.height);
        }
        /**
         * Calculates content rectangle of provided HTMLElement.
         *
         * @param {HTMLElement} target - Element for which to calculate the content rectangle.
         * @returns {DOMRectInit}
         */

        function getHTMLElementContentRect(target) {
          // Client width & height properties can't be
          // used exclusively as they provide rounded values.
          var clientWidth = target.clientWidth,
            clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and
          // detached elements. Though elements with width & height properties less
          // than 0.5 will be discarded as well.
          //
          // Without it we would need to implement separate methods for each of
          // those cases and it's not possible to perform a precise and performance
          // effective test for hidden elements. E.g. even jQuery's ':visible' filter
          // gives wrong results for elements with width & height less than 0.5.

          if (!clientWidth && !clientHeight) {
            return emptyRect;
          }

          var styles = getWindowOf(target).getComputedStyle(target);
          var paddings = getPaddings(styles);
          var horizPad = paddings.left + paddings.right;
          var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the
          // only dimensions available to JS that contain non-rounded values. It could
          // be possible to utilize the getBoundingClientRect if only it's data wasn't
          // affected by CSS transformations let alone paddings, borders and scroll bars.

          var width = toFloat(styles.width),
            height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box
          // model is applied (except for IE).

          if (styles.boxSizing === 'border-box') {
            // Following conditions are required to handle Internet Explorer which
            // doesn't include paddings and borders to computed CSS dimensions.
            //
            // We can say that if CSS dimensions + paddings are equal to the "client"
            // properties then it's either IE, and thus we don't need to subtract
            // anything, or an element merely doesn't have paddings/borders styles.
            if (Math.round(width + horizPad) !== clientWidth) {
              width -= getBordersSize(styles, 'left', 'right') + horizPad;
            }

            if (Math.round(height + vertPad) !== clientHeight) {
              height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
            }
          } // Following steps can't be applied to the document's root element as its
          // client[Width/Height] properties represent viewport area of the window.
          // Besides, it's as well not necessary as the <html> itself neither has
          // rendered scroll bars nor it can be clipped.

          if (!isDocumentElement(target)) {
            // In some browsers (only in Firefox, actually) CSS width & height
            // include scroll bars size which can be removed at this step as scroll
            // bars are the only difference between rounded dimensions + paddings
            // and "client" properties, though that is not always true in Chrome.
            var vertScrollbar = Math.round(width + horizPad) - clientWidth;
            var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of "client" properties.
            // E.g. for an element with content width of 314.2px it sometimes gives
            // the client width of 315px and for the width of 314.7px it may give
            // 314px. And it doesn't happen all the time. So just ignore this delta
            // as a non-relevant.

            if (Math.abs(vertScrollbar) !== 1) {
              width -= vertScrollbar;
            }

            if (Math.abs(horizScrollbar) !== 1) {
              height -= horizScrollbar;
            }
          }

          return createRectInit(paddings.left, paddings.top, width, height);
        }
        /**
         * Checks whether provided element is an instance of the SVGGraphicsElement.
         *
         * @param {Element} target - Element to be checked.
         * @returns {boolean}
         */

        var isSVGGraphicsElement = (function() {
          // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
          // interface.
          if (typeof SVGGraphicsElement !== 'undefined') {
            return function(target) {
              return target instanceof getWindowOf(target).SVGGraphicsElement;
            };
          } // If it's so, then check that element is at least an instance of the
          // SVGElement and that it has the "getBBox" method.
          // eslint-disable-next-line no-extra-parens

          return function(target) {
            return (
              target instanceof getWindowOf(target).SVGElement &&
              typeof target.getBBox === 'function'
            );
          };
        })();
        /**
         * Checks whether provided element is a document element (<html>).
         *
         * @param {Element} target - Element to be checked.
         * @returns {boolean}
         */

        function isDocumentElement(target) {
          return target === getWindowOf(target).document.documentElement;
        }
        /**
         * Calculates an appropriate content rectangle for provided html or svg element.
         *
         * @param {Element} target - Element content rectangle of which needs to be calculated.
         * @returns {DOMRectInit}
         */

        function getContentRect(target) {
          if (!isBrowser) {
            return emptyRect;
          }

          if (isSVGGraphicsElement(target)) {
            return getSVGContentRect(target);
          }

          return getHTMLElementContentRect(target);
        }
        /**
         * Creates rectangle with an interface of the DOMRectReadOnly.
         * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
         *
         * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
         * @returns {DOMRectReadOnly}
         */

        function createReadOnlyRect(_a) {
          var x = _a.x,
            y = _a.y,
            width = _a.width,
            height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.

          var Constr =
            typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
          var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.

          defineConfigurable(rect, {
            x: x,
            y: y,
            width: width,
            height: height,
            top: y,
            right: x + width,
            bottom: height + y,
            left: x
          });
          return rect;
        }
        /**
         * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
         * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
         *
         * @param {number} x - X coordinate.
         * @param {number} y - Y coordinate.
         * @param {number} width - Rectangle's width.
         * @param {number} height - Rectangle's height.
         * @returns {DOMRectInit}
         */

        function createRectInit(x, y, width, height) {
          return {
            x: x,
            y: y,
            width: width,
            height: height
          };
        }
        /**
         * Class that is responsible for computations of the content rectangle of
         * provided DOM element and for keeping track of it's changes.
         */

        var ResizeObservation =
          /** @class */
          (function() {
            /**
             * Creates an instance of ResizeObservation.
             *
             * @param {Element} target - Element to be observed.
             */
            function ResizeObservation(target) {
              /**
               * Broadcasted width of content rectangle.
               *
               * @type {number}
               */
              this.broadcastWidth = 0;
              /**
               * Broadcasted height of content rectangle.
               *
               * @type {number}
               */

              this.broadcastHeight = 0;
              /**
               * Reference to the last observed content rectangle.
               *
               * @private {DOMRectInit}
               */

              this.contentRect_ = createRectInit(0, 0, 0, 0);
              this.target = target;
            }
            /**
             * Updates content rectangle and tells whether it's width or height properties
             * have changed since the last broadcast.
             *
             * @returns {boolean}
             */

            ResizeObservation.prototype.isActive = function() {
              var rect = getContentRect(this.target);
              this.contentRect_ = rect;
              return (
                rect.width !== this.broadcastWidth ||
                rect.height !== this.broadcastHeight
              );
            };
            /**
             * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
             * from the corresponding properties of the last observed content rectangle.
             *
             * @returns {DOMRectInit} Last observed content rectangle.
             */

            ResizeObservation.prototype.broadcastRect = function() {
              var rect = this.contentRect_;
              this.broadcastWidth = rect.width;
              this.broadcastHeight = rect.height;
              return rect;
            };

            return ResizeObservation;
          })();

        var ResizeObserverEntry =
          /** @class */
          (function() {
            /**
             * Creates an instance of ResizeObserverEntry.
             *
             * @param {Element} target - Element that is being observed.
             * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
             */
            function ResizeObserverEntry(target, rectInit) {
              var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable
              // and are also not enumerable in the native implementation.
              //
              // Property accessors are not being used as they'd require to define a
              // private WeakMap storage which may cause memory leaks in browsers that
              // don't support this type of collections.

              defineConfigurable(this, {
                target: target,
                contentRect: contentRect
              });
            }

            return ResizeObserverEntry;
          })();

        var ResizeObserverSPI =
          /** @class */
          (function() {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback function that is invoked
             *      when one of the observed elements changes it's content dimensions.
             * @param {ResizeObserverController} controller - Controller instance which
             *      is responsible for the updates of observer.
             * @param {ResizeObserver} callbackCtx - Reference to the public
             *      ResizeObserver instance which will be passed to callback function.
             */
            function ResizeObserverSPI(callback, controller, callbackCtx) {
              /**
               * Collection of resize observations that have detected changes in dimensions
               * of elements.
               *
               * @private {Array<ResizeObservation>}
               */
              this.activeObservations_ = [];
              /**
               * Registry of the ResizeObservation instances.
               *
               * @private {Map<Element, ResizeObservation>}
               */

              this.observations_ = new MapShim();

              if (typeof callback !== 'function') {
                throw new TypeError(
                  'The callback provided as parameter 1 is not a function.'
                );
              }

              this.callback_ = callback;
              this.controller_ = controller;
              this.callbackCtx_ = callbackCtx;
            }
            /**
             * Starts observing provided element.
             *
             * @param {Element} target - Element to be observed.
             * @returns {void}
             */

            ResizeObserverSPI.prototype.observe = function(target) {
              if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
              } // Do nothing if current environment doesn't have the Element interface.

              if (
                typeof Element === 'undefined' ||
                !(Element instanceof Object)
              ) {
                return;
              }

              if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
              }

              var observations = this.observations_; // Do nothing if element is already being observed.

              if (observations.has(target)) {
                return;
              }

              observations.set(target, new ResizeObservation(target));
              this.controller_.addObserver(this); // Force the update of observations.

              this.controller_.refresh();
            };
            /**
             * Stops observing provided element.
             *
             * @param {Element} target - Element to stop observing.
             * @returns {void}
             */

            ResizeObserverSPI.prototype.unobserve = function(target) {
              if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
              } // Do nothing if current environment doesn't have the Element interface.

              if (
                typeof Element === 'undefined' ||
                !(Element instanceof Object)
              ) {
                return;
              }

              if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
              }

              var observations = this.observations_; // Do nothing if element is not being observed.

              if (!observations.has(target)) {
                return;
              }

              observations.delete(target);

              if (!observations.size) {
                this.controller_.removeObserver(this);
              }
            };
            /**
             * Stops observing all elements.
             *
             * @returns {void}
             */

            ResizeObserverSPI.prototype.disconnect = function() {
              this.clearActive();
              this.observations_.clear();
              this.controller_.removeObserver(this);
            };
            /**
             * Collects observation instances the associated element of which has changed
             * it's content rectangle.
             *
             * @returns {void}
             */

            ResizeObserverSPI.prototype.gatherActive = function() {
              var _this = this;

              this.clearActive();
              this.observations_.forEach(function(observation) {
                if (observation.isActive()) {
                  _this.activeObservations_.push(observation);
                }
              });
            };
            /**
             * Invokes initial callback function with a list of ResizeObserverEntry
             * instances collected from active resize observations.
             *
             * @returns {void}
             */

            ResizeObserverSPI.prototype.broadcastActive = function() {
              // Do nothing if observer doesn't have active observations.
              if (!this.hasActive()) {
                return;
              }

              var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.

              var entries = this.activeObservations_.map(function(observation) {
                return new ResizeObserverEntry(
                  observation.target,
                  observation.broadcastRect()
                );
              });
              this.callback_.call(ctx, entries, ctx);
              this.clearActive();
            };
            /**
             * Clears the collection of active observations.
             *
             * @returns {void}
             */

            ResizeObserverSPI.prototype.clearActive = function() {
              this.activeObservations_.splice(0);
            };
            /**
             * Tells whether observer has active observations.
             *
             * @returns {boolean}
             */

            ResizeObserverSPI.prototype.hasActive = function() {
              return this.activeObservations_.length > 0;
            };

            return ResizeObserverSPI;
          })(); // Registry of internal observers. If WeakMap is not available use current shim
        // for the Map collection as it has all required methods and because WeakMap
        // can't be fully polyfilled anyway.

        var observers =
          typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
        /**
         * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
         * exposing only those methods and properties that are defined in the spec.
         */

        var ResizeObserver =
          /** @class */
          (function() {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback that is invoked when
             *      dimensions of the observed elements change.
             */
            function ResizeObserver(callback) {
              if (!(this instanceof ResizeObserver)) {
                throw new TypeError('Cannot call a class as a function.');
              }

              if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
              }

              var controller = ResizeObserverController.getInstance();
              var observer = new ResizeObserverSPI(callback, controller, this);
              observers.set(this, observer);
            }

            return ResizeObserver;
          })(); // Expose public methods of ResizeObserver.

        ['observe', 'unobserve', 'disconnect'].forEach(function(method) {
          ResizeObserver.prototype[method] = function() {
            var _a;

            return (_a = observers.get(this))[method].apply(_a, arguments);
          };
        });

        var index = (function() {
          // Export existing implementation if available.
          if (typeof global$1.ResizeObserver !== 'undefined') {
            return global$1.ResizeObserver;
          }

          return ResizeObserver;
        })();

        var _default = index;
        exports.default = _default;
      },
      {}
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/array-reduce.js': [
      function(require, module, exports) {
        var aFunction = require('../internals/a-function');
        var toObject = require('../internals/to-object');
        var IndexedObject = require('../internals/indexed-object');
        var toLength = require('../internals/to-length');

        // `Array.prototype.{ reduce, reduceRight }` methods implementation
        var createMethod = function(IS_RIGHT) {
          return function(that, callbackfn, argumentsLength, memo) {
            aFunction(callbackfn);
            var O = toObject(that);
            var self = IndexedObject(O);
            var length = toLength(O.length);
            var index = IS_RIGHT ? length - 1 : 0;
            var i = IS_RIGHT ? -1 : 1;
            if (argumentsLength < 2)
              while (true) {
                if (index in self) {
                  memo = self[index];
                  index += i;
                  break;
                }
                index += i;
                if (IS_RIGHT ? index < 0 : length <= index) {
                  throw TypeError(
                    'Reduce of empty array with no initial value'
                  );
                }
              }
            for (; IS_RIGHT ? index >= 0 : length > index; index += i)
              if (index in self) {
                memo = callbackfn(memo, self[index], index, O);
              }
            return memo;
          };
        };

        module.exports = {
          // `Array.prototype.reduce` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.reduce
          left: createMethod(false),
          // `Array.prototype.reduceRight` method
          // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
          right: createMethod(true)
        };
      },
      {
        '../internals/a-function':
          '../../node_modules/simplebar/node_modules/core-js/internals/a-function.js',
        '../internals/to-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js',
        '../internals/indexed-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/indexed-object.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.array.reduce.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var $reduce = require('../internals/array-reduce').left;
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');

        var STRICT_METHOD = arrayMethodIsStrict('reduce');
        var USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });

        // `Array.prototype.reduce` method
        // https://tc39.github.io/ecma262/#sec-array.prototype.reduce
        $(
          {
            target: 'Array',
            proto: true,
            forced: !STRICT_METHOD || !USES_TO_LENGTH
          },
          {
            reduce: function reduce(callbackfn /* , initialValue */) {
              return $reduce(
                this,
                callbackfn,
                arguments.length,
                arguments.length > 1 ? arguments[1] : undefined
              );
            }
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/array-reduce':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-reduce.js',
        '../internals/array-method-is-strict':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-is-strict.js',
        '../internals/array-method-uses-to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/array-method-uses-to-length.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.function.name.js': [
      function(require, module, exports) {
        var DESCRIPTORS = require('../internals/descriptors');
        var defineProperty = require('../internals/object-define-property').f;

        var FunctionPrototype = Function.prototype;
        var FunctionPrototypeToString = FunctionPrototype.toString;
        var nameRE = /^\s*function ([^ (]*)/;
        var NAME = 'name';

        // Function instances `.name` property
        // https://tc39.github.io/ecma262/#sec-function-instances-name
        if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
          defineProperty(FunctionPrototype, NAME, {
            configurable: true,
            get: function() {
              try {
                return FunctionPrototypeToString.call(this).match(nameRE)[1];
              } catch (error) {
                return '';
              }
            }
          });
        }
      },
      {
        '../internals/descriptors':
          '../../node_modules/simplebar/node_modules/core-js/internals/descriptors.js',
        '../internals/object-define-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/object-define-property.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/regexp-flags.js': [
      function(require, module, exports) {
        'use strict';
        var anObject = require('../internals/an-object');

        // `RegExp.prototype.flags` getter implementation
        // https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
        module.exports = function() {
          var that = anObject(this);
          var result = '';
          if (that.global) result += 'g';
          if (that.ignoreCase) result += 'i';
          if (that.multiline) result += 'm';
          if (that.dotAll) result += 's';
          if (that.unicode) result += 'u';
          if (that.sticky) result += 'y';
          return result;
        };
      },
      {
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/regexp-sticky-helpers.js': [
      function(require, module, exports) {
        'use strict';

        var fails = require('./fails');

        // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
        // so we use an intermediate function.
        function RE(s, f) {
          return RegExp(s, f);
        }

        exports.UNSUPPORTED_Y = fails(function() {
          // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
          var re = RE('a', 'y');
          re.lastIndex = 2;
          return re.exec('abcd') != null;
        });

        exports.BROKEN_CARET = fails(function() {
          // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
          var re = RE('^r', 'gy');
          re.lastIndex = 2;
          return re.exec('str') != null;
        });
      },
      {
        './fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec.js': [
      function(require, module, exports) {
        'use strict';
        var regexpFlags = require('./regexp-flags');
        var stickyHelpers = require('./regexp-sticky-helpers');

        var nativeExec = RegExp.prototype.exec;
        // This always refers to the native implementation, because the
        // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
        // which loads this file before patching the method.
        var nativeReplace = String.prototype.replace;

        var patchedExec = nativeExec;

        var UPDATES_LAST_INDEX_WRONG = (function() {
          var re1 = /a/;
          var re2 = /b*/g;
          nativeExec.call(re1, 'a');
          nativeExec.call(re2, 'a');
          return re1.lastIndex !== 0 || re2.lastIndex !== 0;
        })();

        var UNSUPPORTED_Y =
          stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

        // nonparticipating capturing group, copied from es5-shim's String#split patch.
        var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

        if (PATCH) {
          patchedExec = function exec(str) {
            var re = this;
            var lastIndex, reCopy, match, i;
            var sticky = UNSUPPORTED_Y && re.sticky;
            var flags = regexpFlags.call(re);
            var source = re.source;
            var charsAdded = 0;
            var strCopy = str;

            if (sticky) {
              flags = flags.replace('y', '');
              if (flags.indexOf('g') === -1) {
                flags += 'g';
              }

              strCopy = String(str).slice(re.lastIndex);
              // Support anchored sticky behavior.
              if (
                re.lastIndex > 0 &&
                (!re.multiline ||
                  (re.multiline && str[re.lastIndex - 1] !== '\n'))
              ) {
                source = '(?: ' + source + ')';
                strCopy = ' ' + strCopy;
                charsAdded++;
              }
              // ^(? + rx + ) is needed, in combination with some str slicing, to
              // simulate the 'y' flag.
              reCopy = new RegExp('^(?:' + source + ')', flags);
            }

            if (NPCG_INCLUDED) {
              reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
            }
            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

            match = nativeExec.call(sticky ? reCopy : re, strCopy);

            if (sticky) {
              if (match) {
                match.input = match.input.slice(charsAdded);
                match[0] = match[0].slice(charsAdded);
                match.index = re.lastIndex;
                re.lastIndex += match[0].length;
              } else re.lastIndex = 0;
            } else if (UPDATES_LAST_INDEX_WRONG && match) {
              re.lastIndex = re.global
                ? match.index + match[0].length
                : lastIndex;
            }
            if (NPCG_INCLUDED && match && match.length > 1) {
              // Fix browsers whose `exec` methods don't consistently return `undefined`
              // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
              nativeReplace.call(match[0], reCopy, function() {
                for (i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undefined) match[i] = undefined;
                }
              });
            }

            return match;
          };
        }

        module.exports = patchedExec;
      },
      {
        './regexp-flags':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-flags.js',
        './regexp-sticky-helpers':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-sticky-helpers.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.regexp.exec.js': [
      function(require, module, exports) {
        'use strict';
        var $ = require('../internals/export');
        var exec = require('../internals/regexp-exec');

        $(
          { target: 'RegExp', proto: true, forced: /./.exec !== exec },
          {
            exec: exec
          }
        );
      },
      {
        '../internals/export':
          '../../node_modules/simplebar/node_modules/core-js/internals/export.js',
        '../internals/regexp-exec':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js': [
      function(require, module, exports) {
        'use strict';
        // TODO: Remove from `core-js@4` since it's moved to entry points
        require('../modules/es.regexp.exec');
        var redefine = require('../internals/redefine');
        var fails = require('../internals/fails');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var regexpExec = require('../internals/regexp-exec');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');

        var SPECIES = wellKnownSymbol('species');

        var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function() {
          // #replace needs built-in support for named groups.
          // #match works fine because it just return the exec results, even if it has
          // a "grops" property.
          var re = /./;
          re.exec = function() {
            var result = [];
            result.groups = { a: '7' };
            return result;
          };
          return ''.replace(re, '$<a>') !== '7';
        });

        // IE <= 11 replaces $0 with the whole match, as if it was $&
        // https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
        var REPLACE_KEEPS_$0 = (function() {
          return 'a'.replace(/./, '$0') === '$0';
        })();

        var REPLACE = wellKnownSymbol('replace');
        // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
        var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function() {
          if (/./[REPLACE]) {
            return /./[REPLACE]('a', '$0') === '';
          }
          return false;
        })();

        // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
        // Weex JS has frozen built-in prototypes, so use try / catch wrapper
        var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function() {
          var re = /(?:)/;
          var originalExec = re.exec;
          re.exec = function() {
            return originalExec.apply(this, arguments);
          };
          var result = 'ab'.split(re);
          return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
        });

        module.exports = function(KEY, length, exec, sham) {
          var SYMBOL = wellKnownSymbol(KEY);

          var DELEGATES_TO_SYMBOL = !fails(function() {
            // String methods call symbol-named RegEp methods
            var O = {};
            O[SYMBOL] = function() {
              return 7;
            };
            return ''[KEY](O) != 7;
          });

          var DELEGATES_TO_EXEC =
            DELEGATES_TO_SYMBOL &&
            !fails(function() {
              // Symbol-named RegExp methods call .exec
              var execCalled = false;
              var re = /a/;

              if (KEY === 'split') {
                // We can't use real regex here since it causes deoptimization
                // and serious performance degradation in V8
                // https://github.com/zloirock/core-js/issues/306
                re = {};
                // RegExp[@@split] doesn't call the regex's exec method, but first creates
                // a new one. We need to return the patched regex when creating the new one.
                re.constructor = {};
                re.constructor[SPECIES] = function() {
                  return re;
                };
                re.flags = '';
                re[SYMBOL] = /./[SYMBOL];
              }

              re.exec = function() {
                execCalled = true;
                return null;
              };

              re[SYMBOL]('');
              return !execCalled;
            });

          if (
            !DELEGATES_TO_SYMBOL ||
            !DELEGATES_TO_EXEC ||
            (KEY === 'replace' &&
              !(
                REPLACE_SUPPORTS_NAMED_GROUPS &&
                REPLACE_KEEPS_$0 &&
                !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
              )) ||
            (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
          ) {
            var nativeRegExpMethod = /./[SYMBOL];
            var methods = exec(
              SYMBOL,
              ''[KEY],
              function(nativeMethod, regexp, str, arg2, forceStringMethod) {
                if (regexp.exec === regexpExec) {
                  if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                    // The native String method already delegates to @@method (this
                    // polyfilled function), leasing to infinite recursion.
                    // We avoid it by directly calling the native @@method method.
                    return {
                      done: true,
                      value: nativeRegExpMethod.call(regexp, str, arg2)
                    };
                  }
                  return {
                    done: true,
                    value: nativeMethod.call(str, regexp, arg2)
                  };
                }
                return { done: false };
              },
              {
                REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
                REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
              }
            );
            var stringMethod = methods[0];
            var regexMethod = methods[1];

            redefine(String.prototype, KEY, stringMethod);
            redefine(
              RegExp.prototype,
              SYMBOL,
              length == 2
                ? // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                  // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                  function(string, arg) {
                    return regexMethod.call(string, this, arg);
                  }
                : // 21.2.5.6 RegExp.prototype[@@match](string)
                  // 21.2.5.9 RegExp.prototype[@@search](string)
                  function(string) {
                    return regexMethod.call(string, this);
                  }
            );
          }

          if (sham)
            createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
        };
      },
      {
        '../modules/es.regexp.exec':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.regexp.exec.js',
        '../internals/redefine':
          '../../node_modules/simplebar/node_modules/core-js/internals/redefine.js',
        '../internals/fails':
          '../../node_modules/simplebar/node_modules/core-js/internals/fails.js',
        '../internals/well-known-symbol':
          '../../node_modules/simplebar/node_modules/core-js/internals/well-known-symbol.js',
        '../internals/regexp-exec':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec.js',
        '../internals/create-non-enumerable-property':
          '../../node_modules/simplebar/node_modules/core-js/internals/create-non-enumerable-property.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/advance-string-index.js': [
      function(require, module, exports) {
        'use strict';
        var charAt = require('../internals/string-multibyte').charAt;

        // `AdvanceStringIndex` abstract operation
        // https://tc39.github.io/ecma262/#sec-advancestringindex
        module.exports = function(S, index, unicode) {
          return index + (unicode ? charAt(S, index).length : 1);
        };
      },
      {
        '../internals/string-multibyte':
          '../../node_modules/simplebar/node_modules/core-js/internals/string-multibyte.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec-abstract.js': [
      function(require, module, exports) {
        var classof = require('./classof-raw');
        var regexpExec = require('./regexp-exec');

        // `RegExpExec` abstract operation
        // https://tc39.github.io/ecma262/#sec-regexpexec
        module.exports = function(R, S) {
          var exec = R.exec;
          if (typeof exec === 'function') {
            var result = exec.call(R, S);
            if (typeof result !== 'object') {
              throw TypeError(
                'RegExp exec method returned something other than an Object or null'
              );
            }
            return result;
          }

          if (classof(R) !== 'RegExp') {
            throw TypeError('RegExp#exec called on incompatible receiver');
          }

          return regexpExec.call(R, S);
        };
      },
      {
        './classof-raw':
          '../../node_modules/simplebar/node_modules/core-js/internals/classof-raw.js',
        './regexp-exec':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.string.match.js': [
      function(require, module, exports) {
        'use strict';
        var fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');
        var anObject = require('../internals/an-object');
        var toLength = require('../internals/to-length');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var advanceStringIndex = require('../internals/advance-string-index');
        var regExpExec = require('../internals/regexp-exec-abstract');

        // @@match logic
        fixRegExpWellKnownSymbolLogic('match', 1, function(
          MATCH,
          nativeMatch,
          maybeCallNative
        ) {
          return [
            // `String.prototype.match` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.match
            function match(regexp) {
              var O = requireObjectCoercible(this);
              var matcher = regexp == undefined ? undefined : regexp[MATCH];
              return matcher !== undefined
                ? matcher.call(regexp, O)
                : new RegExp(regexp)[MATCH](String(O));
            },
            // `RegExp.prototype[@@match]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
            function(regexp) {
              var res = maybeCallNative(nativeMatch, regexp, this);
              if (res.done) return res.value;

              var rx = anObject(regexp);
              var S = String(this);

              if (!rx.global) return regExpExec(rx, S);

              var fullUnicode = rx.unicode;
              rx.lastIndex = 0;
              var A = [];
              var n = 0;
              var result;
              while ((result = regExpExec(rx, S)) !== null) {
                var matchStr = String(result[0]);
                A[n] = matchStr;
                if (matchStr === '')
                  rx.lastIndex = advanceStringIndex(
                    S,
                    toLength(rx.lastIndex),
                    fullUnicode
                  );
                n++;
              }
              return n === 0 ? null : A;
            }
          ];
        });
      },
      {
        '../internals/fix-regexp-well-known-symbol-logic':
          '../../node_modules/simplebar/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js',
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js',
        '../internals/advance-string-index':
          '../../node_modules/simplebar/node_modules/core-js/internals/advance-string-index.js',
        '../internals/regexp-exec-abstract':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec-abstract.js'
      }
    ],
    '../../node_modules/simplebar/node_modules/core-js/modules/es.string.replace.js': [
      function(require, module, exports) {
        var global = arguments[3];
        ('use strict');
        var fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');
        var anObject = require('../internals/an-object');
        var toObject = require('../internals/to-object');
        var toLength = require('../internals/to-length');
        var toInteger = require('../internals/to-integer');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var advanceStringIndex = require('../internals/advance-string-index');
        var regExpExec = require('../internals/regexp-exec-abstract');

        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;
        var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
        var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

        var maybeToString = function(it) {
          return it === undefined ? it : String(it);
        };

        // @@replace logic
        fixRegExpWellKnownSymbolLogic('replace', 2, function(
          REPLACE,
          nativeReplace,
          maybeCallNative,
          reason
        ) {
          var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE =
            reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
          var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
          var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
            ? '$'
            : '$0';

          return [
            // `String.prototype.replace` method
            // https://tc39.github.io/ecma262/#sec-string.prototype.replace
            function replace(searchValue, replaceValue) {
              var O = requireObjectCoercible(this);
              var replacer =
                searchValue == undefined ? undefined : searchValue[REPLACE];
              return replacer !== undefined
                ? replacer.call(searchValue, O, replaceValue)
                : nativeReplace.call(String(O), searchValue, replaceValue);
            },
            // `RegExp.prototype[@@replace]` method
            // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
            function(regexp, replaceValue) {
              if (
                (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE &&
                  REPLACE_KEEPS_$0) ||
                (typeof replaceValue === 'string' &&
                  replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
              ) {
                var res = maybeCallNative(
                  nativeReplace,
                  regexp,
                  this,
                  replaceValue
                );
                if (res.done) return res.value;
              }

              var rx = anObject(regexp);
              var S = String(this);

              var functionalReplace = typeof replaceValue === 'function';
              if (!functionalReplace) replaceValue = String(replaceValue);

              var global = rx.global;
              if (global) {
                var fullUnicode = rx.unicode;
                rx.lastIndex = 0;
              }
              var results = [];
              while (true) {
                var result = regExpExec(rx, S);
                if (result === null) break;

                results.push(result);
                if (!global) break;

                var matchStr = String(result[0]);
                if (matchStr === '')
                  rx.lastIndex = advanceStringIndex(
                    S,
                    toLength(rx.lastIndex),
                    fullUnicode
                  );
              }

              var accumulatedResult = '';
              var nextSourcePosition = 0;
              for (var i = 0; i < results.length; i++) {
                result = results[i];

                var matched = String(result[0]);
                var position = max(min(toInteger(result.index), S.length), 0);
                var captures = [];
                // NOTE: This is equivalent to
                //   captures = result.slice(1).map(maybeToString)
                // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                for (var j = 1; j < result.length; j++)
                  captures.push(maybeToString(result[j]));
                var namedCaptures = result.groups;
                if (functionalReplace) {
                  var replacerArgs = [matched].concat(captures, position, S);
                  if (namedCaptures !== undefined)
                    replacerArgs.push(namedCaptures);
                  var replacement = String(
                    replaceValue.apply(undefined, replacerArgs)
                  );
                } else {
                  replacement = getSubstitution(
                    matched,
                    S,
                    position,
                    captures,
                    namedCaptures,
                    replaceValue
                  );
                }
                if (position >= nextSourcePosition) {
                  accumulatedResult +=
                    S.slice(nextSourcePosition, position) + replacement;
                  nextSourcePosition = position + matched.length;
                }
              }
              return accumulatedResult + S.slice(nextSourcePosition);
            }
          ];

          // https://tc39.github.io/ecma262/#sec-getsubstitution
          function getSubstitution(
            matched,
            str,
            position,
            captures,
            namedCaptures,
            replacement
          ) {
            var tailPos = position + matched.length;
            var m = captures.length;
            var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
            if (namedCaptures !== undefined) {
              namedCaptures = toObject(namedCaptures);
              symbols = SUBSTITUTION_SYMBOLS;
            }
            return nativeReplace.call(replacement, symbols, function(
              match,
              ch
            ) {
              var capture;
              switch (ch.charAt(0)) {
                case '$':
                  return '$';
                case '&':
                  return matched;
                case '`':
                  return str.slice(0, position);
                case "'":
                  return str.slice(tailPos);
                case '<':
                  capture = namedCaptures[ch.slice(1, -1)];
                  break;
                default:
                  // \d\d?
                  var n = +ch;
                  if (n === 0) return match;
                  if (n > m) {
                    var f = floor(n / 10);
                    if (f === 0) return match;
                    if (f <= m)
                      return captures[f - 1] === undefined
                        ? ch.charAt(1)
                        : captures[f - 1] + ch.charAt(1);
                    return match;
                  }
                  capture = captures[n - 1];
              }
              return capture === undefined ? '' : capture;
            });
          }
        });
      },
      {
        '../internals/fix-regexp-well-known-symbol-logic':
          '../../node_modules/simplebar/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js',
        '../internals/an-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/an-object.js',
        '../internals/to-object':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-object.js',
        '../internals/to-length':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-length.js',
        '../internals/to-integer':
          '../../node_modules/simplebar/node_modules/core-js/internals/to-integer.js',
        '../internals/require-object-coercible':
          '../../node_modules/simplebar/node_modules/core-js/internals/require-object-coercible.js',
        '../internals/advance-string-index':
          '../../node_modules/simplebar/node_modules/core-js/internals/advance-string-index.js',
        '../internals/regexp-exec-abstract':
          '../../node_modules/simplebar/node_modules/core-js/internals/regexp-exec-abstract.js'
      }
    ],
    '../../node_modules/simplebar/dist/simplebar.esm.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.default = void 0;

        require('core-js/modules/es.array.for-each');

        require('core-js/modules/web.dom-collections.for-each');

        var _canUseDom = _interopRequireDefault(require('can-use-dom'));

        require('core-js/modules/es.array.filter');

        require('core-js/modules/es.array.iterator');

        require('core-js/modules/es.object.assign');

        require('core-js/modules/es.object.to-string');

        require('core-js/modules/es.parse-int');

        require('core-js/modules/es.string.iterator');

        require('core-js/modules/es.weak-map');

        require('core-js/modules/web.dom-collections.iterator');

        var _lodash = _interopRequireDefault(require('lodash.throttle'));

        var _lodash2 = _interopRequireDefault(require('lodash.debounce'));

        var _lodash3 = _interopRequireDefault(require('lodash.memoize'));

        var _resizeObserverPolyfill = _interopRequireDefault(
          require('resize-observer-polyfill')
        );

        require('core-js/modules/es.array.reduce');

        require('core-js/modules/es.function.name');

        require('core-js/modules/es.regexp.exec');

        require('core-js/modules/es.string.match');

        require('core-js/modules/es.string.replace');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * SimpleBar.js - v5.2.1
         * Scrollbars, simpler.
         * https://grsmto.github.io/simplebar/
         *
         * Made by Adrien Denat from a fork by Jonathan Nicol
         * Under MIT License
         */
        var cachedScrollbarWidth = null;
        var cachedDevicePixelRatio = null;

        if (_canUseDom.default) {
          window.addEventListener('resize', function() {
            if (cachedDevicePixelRatio !== window.devicePixelRatio) {
              cachedDevicePixelRatio = window.devicePixelRatio;
              cachedScrollbarWidth = null;
            }
          });
        }

        function scrollbarWidth() {
          if (cachedScrollbarWidth === null) {
            if (typeof document === 'undefined') {
              cachedScrollbarWidth = 0;
              return cachedScrollbarWidth;
            }

            var body = document.body;
            var box = document.createElement('div');
            box.classList.add('simplebar-hide-scrollbar');
            body.appendChild(box);
            var width = box.getBoundingClientRect().right;
            body.removeChild(box);
            cachedScrollbarWidth = width;
          }

          return cachedScrollbarWidth;
        } // Helper function to retrieve options from element attributes

        var getOptions = function getOptions(obj) {
          var options = Array.prototype.reduce.call(
            obj,
            function(acc, attribute) {
              var option = attribute.name.match(/data-simplebar-(.+)/);

              if (option) {
                var key = option[1].replace(/\W+(.)/g, function(x, chr) {
                  return chr.toUpperCase();
                });

                switch (attribute.value) {
                  case 'true':
                    acc[key] = true;
                    break;

                  case 'false':
                    acc[key] = false;
                    break;

                  case undefined:
                    acc[key] = true;
                    break;

                  default:
                    acc[key] = attribute.value;
                }
              }

              return acc;
            },
            {}
          );
          return options;
        };

        function getElementWindow(element) {
          if (
            !element ||
            !element.ownerDocument ||
            !element.ownerDocument.defaultView
          ) {
            return window;
          }

          return element.ownerDocument.defaultView;
        }

        function getElementDocument(element) {
          if (!element || !element.ownerDocument) {
            return document;
          }

          return element.ownerDocument;
        }

        var SimpleBar = /*#__PURE__*/ (function() {
          function SimpleBar(element, options) {
            var _this = this;

            this.onScroll = function() {
              var elWindow = getElementWindow(_this.el);

              if (!_this.scrollXTicking) {
                elWindow.requestAnimationFrame(_this.scrollX);
                _this.scrollXTicking = true;
              }

              if (!_this.scrollYTicking) {
                elWindow.requestAnimationFrame(_this.scrollY);
                _this.scrollYTicking = true;
              }
            };

            this.scrollX = function() {
              if (_this.axis.x.isOverflowing) {
                _this.showScrollbar('x');

                _this.positionScrollbar('x');
              }

              _this.scrollXTicking = false;
            };

            this.scrollY = function() {
              if (_this.axis.y.isOverflowing) {
                _this.showScrollbar('y');

                _this.positionScrollbar('y');
              }

              _this.scrollYTicking = false;
            };

            this.onMouseEnter = function() {
              _this.showScrollbar('x');

              _this.showScrollbar('y');
            };

            this.onMouseMove = function(e) {
              _this.mouseX = e.clientX;
              _this.mouseY = e.clientY;

              if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
                _this.onMouseMoveForAxis('x');
              }

              if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
                _this.onMouseMoveForAxis('y');
              }
            };

            this.onMouseLeave = function() {
              _this.onMouseMove.cancel();

              if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
                _this.onMouseLeaveForAxis('x');
              }

              if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
                _this.onMouseLeaveForAxis('y');
              }

              _this.mouseX = -1;
              _this.mouseY = -1;
            };

            this.onWindowResize = function() {
              // Recalculate scrollbarWidth in case it's a zoom
              _this.scrollbarWidth = _this.getScrollbarWidth();

              _this.hideNativeScrollbar();
            };

            this.hideScrollbars = function() {
              _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();
              _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();

              if (!_this.isWithinBounds(_this.axis.y.track.rect)) {
                _this.axis.y.scrollbar.el.classList.remove(
                  _this.classNames.visible
                );

                _this.axis.y.isVisible = false;
              }

              if (!_this.isWithinBounds(_this.axis.x.track.rect)) {
                _this.axis.x.scrollbar.el.classList.remove(
                  _this.classNames.visible
                );

                _this.axis.x.isVisible = false;
              }
            };

            this.onPointerEvent = function(e) {
              var isWithinTrackXBounds, isWithinTrackYBounds;
              _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();
              _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();

              if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
                isWithinTrackXBounds = _this.isWithinBounds(
                  _this.axis.x.track.rect
                );
              }

              if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
                isWithinTrackYBounds = _this.isWithinBounds(
                  _this.axis.y.track.rect
                );
              } // If any pointer event is called on the scrollbar

              if (isWithinTrackXBounds || isWithinTrackYBounds) {
                // Preventing the event's default action stops text being
                // selectable during the drag.
                e.preventDefault(); // Prevent event leaking

                e.stopPropagation();

                if (e.type === 'mousedown') {
                  if (isWithinTrackXBounds) {
                    _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();

                    if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {
                      _this.onDragStart(e, 'x');
                    } else {
                      _this.onTrackClick(e, 'x');
                    }
                  }

                  if (isWithinTrackYBounds) {
                    _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();

                    if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {
                      _this.onDragStart(e, 'y');
                    } else {
                      _this.onTrackClick(e, 'y');
                    }
                  }
                }
              }
            };

            this.drag = function(e) {
              var eventOffset;
              var track = _this.axis[_this.draggedAxis].track;
              var trackSize =
                track.rect[_this.axis[_this.draggedAxis].sizeAttr];
              var scrollbar = _this.axis[_this.draggedAxis].scrollbar;
              var contentSize =
                _this.contentWrapperEl[
                  _this.axis[_this.draggedAxis].scrollSizeAttr
                ];
              var hostSize = parseInt(
                _this.elStyles[_this.axis[_this.draggedAxis].sizeAttr],
                10
              );
              e.preventDefault();
              e.stopPropagation();

              if (_this.draggedAxis === 'y') {
                eventOffset = e.pageY;
              } else {
                eventOffset = e.pageX;
              } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).

              var dragPos =
                eventOffset -
                track.rect[_this.axis[_this.draggedAxis].offsetAttr] -
                _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.

              var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.

              var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL

              if (_this.draggedAxis === 'x') {
                scrollPos =
                  _this.isRtl &&
                  SimpleBar.getRtlHelpers().isRtlScrollbarInverted
                    ? scrollPos - (trackSize + scrollbar.size)
                    : scrollPos;
                scrollPos =
                  _this.isRtl &&
                  SimpleBar.getRtlHelpers().isRtlScrollingInverted
                    ? -scrollPos
                    : scrollPos;
              }

              _this.contentWrapperEl[
                _this.axis[_this.draggedAxis].scrollOffsetAttr
              ] = scrollPos;
            };

            this.onEndDrag = function(e) {
              var elDocument = getElementDocument(_this.el);
              var elWindow = getElementWindow(_this.el);
              e.preventDefault();
              e.stopPropagation();

              _this.el.classList.remove(_this.classNames.dragging);

              elDocument.removeEventListener('mousemove', _this.drag, true);
              elDocument.removeEventListener('mouseup', _this.onEndDrag, true);
              _this.removePreventClickId = elWindow.setTimeout(function() {
                // Remove these asynchronously so we still suppress click events
                // generated simultaneously with mouseup.
                elDocument.removeEventListener(
                  'click',
                  _this.preventClick,
                  true
                );
                elDocument.removeEventListener(
                  'dblclick',
                  _this.preventClick,
                  true
                );
                _this.removePreventClickId = null;
              });
            };

            this.preventClick = function(e) {
              e.preventDefault();
              e.stopPropagation();
            };

            this.el = element;
            this.minScrollbarWidth = 20;
            this.options = Object.assign(
              {},
              SimpleBar.defaultOptions,
              {},
              options
            );
            this.classNames = Object.assign(
              {},
              SimpleBar.defaultOptions.classNames,
              {},
              this.options.classNames
            );
            this.axis = {
              x: {
                scrollOffsetAttr: 'scrollLeft',
                sizeAttr: 'width',
                scrollSizeAttr: 'scrollWidth',
                offsetSizeAttr: 'offsetWidth',
                offsetAttr: 'left',
                overflowAttr: 'overflowX',
                dragOffset: 0,
                isOverflowing: true,
                isVisible: false,
                forceVisible: false,
                track: {},
                scrollbar: {}
              },
              y: {
                scrollOffsetAttr: 'scrollTop',
                sizeAttr: 'height',
                scrollSizeAttr: 'scrollHeight',
                offsetSizeAttr: 'offsetHeight',
                offsetAttr: 'top',
                overflowAttr: 'overflowY',
                dragOffset: 0,
                isOverflowing: true,
                isVisible: false,
                forceVisible: false,
                track: {},
                scrollbar: {}
              }
            };
            this.removePreventClickId = null; // Don't re-instantiate over an existing one

            if (SimpleBar.instances.has(this.el)) {
              return;
            }

            this.recalculate = (0, _lodash.default)(
              this.recalculate.bind(this),
              64
            );
            this.onMouseMove = (0, _lodash.default)(
              this.onMouseMove.bind(this),
              64
            );
            this.hideScrollbars = (0, _lodash2.default)(
              this.hideScrollbars.bind(this),
              this.options.timeout
            );
            this.onWindowResize = (0, _lodash2.default)(
              this.onWindowResize.bind(this),
              64,
              {
                leading: true
              }
            );
            SimpleBar.getRtlHelpers = (0, _lodash3.default)(
              SimpleBar.getRtlHelpers
            );
            this.init();
          }
          /**
           * Static properties
           */

          /**
           * Helper to fix browsers inconsistency on RTL:
           *  - Firefox inverts the scrollbar initial position
           *  - IE11 inverts both scrollbar position and scrolling offset
           * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634
           */

          SimpleBar.getRtlHelpers = function getRtlHelpers() {
            var dummyDiv = document.createElement('div');
            dummyDiv.innerHTML =
              '<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>';
            var scrollbarDummyEl = dummyDiv.firstElementChild;
            document.body.appendChild(scrollbarDummyEl);
            var dummyContainerChild = scrollbarDummyEl.firstElementChild;
            scrollbarDummyEl.scrollLeft = 0;
            var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);
            var dummyContainerChildOffset = SimpleBar.getOffset(
              dummyContainerChild
            );
            scrollbarDummyEl.scrollLeft = 999;
            var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(
              dummyContainerChild
            );
            return {
              // determines if the scrolling is responding with negative values
              isRtlScrollingInverted:
                dummyContainerOffset.left !== dummyContainerChildOffset.left &&
                dummyContainerChildOffset.left -
                  dummyContainerScrollOffsetAfterScroll.left !==
                  0,
              // determines if the origin scrollbar position is inverted or not (positioned on left or right)
              isRtlScrollbarInverted:
                dummyContainerOffset.left !== dummyContainerChildOffset.left
            };
          };

          SimpleBar.getOffset = function getOffset(el) {
            var rect = el.getBoundingClientRect();
            var elDocument = getElementDocument(el);
            var elWindow = getElementWindow(el);
            return {
              top:
                rect.top +
                (elWindow.pageYOffset || elDocument.documentElement.scrollTop),
              left:
                rect.left +
                (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)
            };
          };

          var _proto = SimpleBar.prototype;

          _proto.init = function init() {
            // Save a reference to the instance, so we know this DOM node has already been instancied
            SimpleBar.instances.set(this.el, this); // We stop here on server-side

            if (_canUseDom.default) {
              this.initDOM();
              this.scrollbarWidth = this.getScrollbarWidth();
              this.recalculate();
              this.initListeners();
            }
          };

          _proto.initDOM = function initDOM() {
            var _this2 = this; // make sure this element doesn't have the elements yet

            if (
              Array.prototype.filter.call(this.el.children, function(child) {
                return child.classList.contains(_this2.classNames.wrapper);
              }).length
            ) {
              // assume that element has his DOM already initiated
              this.wrapperEl = this.el.querySelector(
                '.' + this.classNames.wrapper
              );
              this.contentWrapperEl =
                this.options.scrollableNode ||
                this.el.querySelector('.' + this.classNames.contentWrapper);
              this.contentEl =
                this.options.contentNode ||
                this.el.querySelector('.' + this.classNames.contentEl);
              this.offsetEl = this.el.querySelector(
                '.' + this.classNames.offset
              );
              this.maskEl = this.el.querySelector('.' + this.classNames.mask);
              this.placeholderEl = this.findChild(
                this.wrapperEl,
                '.' + this.classNames.placeholder
              );
              this.heightAutoObserverWrapperEl = this.el.querySelector(
                '.' + this.classNames.heightAutoObserverWrapperEl
              );
              this.heightAutoObserverEl = this.el.querySelector(
                '.' + this.classNames.heightAutoObserverEl
              );
              this.axis.x.track.el = this.findChild(
                this.el,
                '.' + this.classNames.track + '.' + this.classNames.horizontal
              );
              this.axis.y.track.el = this.findChild(
                this.el,
                '.' + this.classNames.track + '.' + this.classNames.vertical
              );
            } else {
              // Prepare DOM
              this.wrapperEl = document.createElement('div');
              this.contentWrapperEl = document.createElement('div');
              this.offsetEl = document.createElement('div');
              this.maskEl = document.createElement('div');
              this.contentEl = document.createElement('div');
              this.placeholderEl = document.createElement('div');
              this.heightAutoObserverWrapperEl = document.createElement('div');
              this.heightAutoObserverEl = document.createElement('div');
              this.wrapperEl.classList.add(this.classNames.wrapper);
              this.contentWrapperEl.classList.add(
                this.classNames.contentWrapper
              );
              this.offsetEl.classList.add(this.classNames.offset);
              this.maskEl.classList.add(this.classNames.mask);
              this.contentEl.classList.add(this.classNames.contentEl);
              this.placeholderEl.classList.add(this.classNames.placeholder);
              this.heightAutoObserverWrapperEl.classList.add(
                this.classNames.heightAutoObserverWrapperEl
              );
              this.heightAutoObserverEl.classList.add(
                this.classNames.heightAutoObserverEl
              );

              while (this.el.firstChild) {
                this.contentEl.appendChild(this.el.firstChild);
              }

              this.contentWrapperEl.appendChild(this.contentEl);
              this.offsetEl.appendChild(this.contentWrapperEl);
              this.maskEl.appendChild(this.offsetEl);
              this.heightAutoObserverWrapperEl.appendChild(
                this.heightAutoObserverEl
              );
              this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);
              this.wrapperEl.appendChild(this.maskEl);
              this.wrapperEl.appendChild(this.placeholderEl);
              this.el.appendChild(this.wrapperEl);
            }

            if (!this.axis.x.track.el || !this.axis.y.track.el) {
              var track = document.createElement('div');
              var scrollbar = document.createElement('div');
              track.classList.add(this.classNames.track);
              scrollbar.classList.add(this.classNames.scrollbar);
              track.appendChild(scrollbar);
              this.axis.x.track.el = track.cloneNode(true);
              this.axis.x.track.el.classList.add(this.classNames.horizontal);
              this.axis.y.track.el = track.cloneNode(true);
              this.axis.y.track.el.classList.add(this.classNames.vertical);
              this.el.appendChild(this.axis.x.track.el);
              this.el.appendChild(this.axis.y.track.el);
            }

            this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(
              '.' + this.classNames.scrollbar
            );
            this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(
              '.' + this.classNames.scrollbar
            );

            if (!this.options.autoHide) {
              this.axis.x.scrollbar.el.classList.add(this.classNames.visible);
              this.axis.y.scrollbar.el.classList.add(this.classNames.visible);
            }

            this.el.setAttribute('data-simplebar', 'init');
          };

          _proto.initListeners = function initListeners() {
            var _this3 = this;

            var elWindow = getElementWindow(this.el); // Event listeners

            if (this.options.autoHide) {
              this.el.addEventListener('mouseenter', this.onMouseEnter);
            }

            ['mousedown', 'click', 'dblclick'].forEach(function(e) {
              _this3.el.addEventListener(e, _this3.onPointerEvent, true);
            });
            ['touchstart', 'touchend', 'touchmove'].forEach(function(e) {
              _this3.el.addEventListener(e, _this3.onPointerEvent, {
                capture: true,
                passive: true
              });
            });
            this.el.addEventListener('mousemove', this.onMouseMove);
            this.el.addEventListener('mouseleave', this.onMouseLeave);
            this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize

            elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38

            var resizeObserverStarted = false;
            var resizeObserver =
              elWindow.ResizeObserver || _resizeObserverPolyfill.default;
            this.resizeObserver = new resizeObserver(function() {
              if (!resizeObserverStarted) return;

              _this3.recalculate();
            });
            this.resizeObserver.observe(this.el);
            this.resizeObserver.observe(this.contentEl);
            elWindow.requestAnimationFrame(function() {
              resizeObserverStarted = true;
            }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.

            this.mutationObserver = new elWindow.MutationObserver(
              this.recalculate
            );
            this.mutationObserver.observe(this.contentEl, {
              childList: true,
              subtree: true,
              characterData: true
            });
          };

          _proto.recalculate = function recalculate() {
            var elWindow = getElementWindow(this.el);
            this.elStyles = elWindow.getComputedStyle(this.el);
            this.isRtl = this.elStyles.direction === 'rtl';
            var contentElOffsetWidth = this.contentEl.offsetWidth;
            var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;
            var isWidthAuto =
              this.heightAutoObserverEl.offsetWidth <= 1 ||
              contentElOffsetWidth > 0;
            var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;
            var elOverflowX = this.elStyles.overflowX;
            var elOverflowY = this.elStyles.overflowY;
            this.contentEl.style.padding =
              this.elStyles.paddingTop +
              ' ' +
              this.elStyles.paddingRight +
              ' ' +
              this.elStyles.paddingBottom +
              ' ' +
              this.elStyles.paddingLeft;
            this.wrapperEl.style.margin =
              '-' +
              this.elStyles.paddingTop +
              ' -' +
              this.elStyles.paddingRight +
              ' -' +
              this.elStyles.paddingBottom +
              ' -' +
              this.elStyles.paddingLeft;
            var contentElScrollHeight = this.contentEl.scrollHeight;
            var contentElScrollWidth = this.contentEl.scrollWidth;
            this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size

            this.placeholderEl.style.width = isWidthAuto
              ? (contentElOffsetWidth || contentElScrollWidth) + 'px'
              : 'auto';
            this.placeholderEl.style.height = contentElScrollHeight + 'px';
            var contentWrapperElOffsetHeight = this.contentWrapperEl
              .offsetHeight;
            this.axis.x.isOverflowing =
              contentElOffsetWidth !== 0 &&
              contentElScrollWidth > contentElOffsetWidth;
            this.axis.y.isOverflowing =
              contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow

            this.axis.x.isOverflowing =
              elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;
            this.axis.y.isOverflowing =
              elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;
            this.axis.x.forceVisible =
              this.options.forceVisible === 'x' ||
              this.options.forceVisible === true;
            this.axis.y.forceVisible =
              this.options.forceVisible === 'y' ||
              this.options.forceVisible === true;
            this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)

            var offsetForXScrollbar = this.axis.x.isOverflowing
              ? this.scrollbarWidth
              : 0;
            var offsetForYScrollbar = this.axis.y.isOverflowing
              ? this.scrollbarWidth
              : 0;
            this.axis.x.isOverflowing =
              this.axis.x.isOverflowing &&
              contentElScrollWidth >
                contentWrapperElOffsetWidth - offsetForYScrollbar;
            this.axis.y.isOverflowing =
              this.axis.y.isOverflowing &&
              contentElScrollHeight >
                contentWrapperElOffsetHeight - offsetForXScrollbar;
            this.axis.x.scrollbar.size = this.getScrollbarSize('x');
            this.axis.y.scrollbar.size = this.getScrollbarSize('y');
            this.axis.x.scrollbar.el.style.width =
              this.axis.x.scrollbar.size + 'px';
            this.axis.y.scrollbar.el.style.height =
              this.axis.y.scrollbar.size + 'px';
            this.positionScrollbar('x');
            this.positionScrollbar('y');
            this.toggleTrackVisibility('x');
            this.toggleTrackVisibility('y');
          };
          /**
           * Calculate scrollbar size
           */

          _proto.getScrollbarSize = function getScrollbarSize(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            if (!this.axis[axis].isOverflowing) {
              return 0;
            }

            var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];
            var trackSize = this.axis[axis].track.el[
              this.axis[axis].offsetSizeAttr
            ];
            var scrollbarSize;
            var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.

            scrollbarSize = Math.max(
              ~~(scrollbarRatio * trackSize),
              this.options.scrollbarMinSize
            );

            if (this.options.scrollbarMaxSize) {
              scrollbarSize = Math.min(
                scrollbarSize,
                this.options.scrollbarMaxSize
              );
            }

            return scrollbarSize;
          };

          _proto.positionScrollbar = function positionScrollbar(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            if (!this.axis[axis].isOverflowing) {
              return;
            }

            var contentSize = this.contentWrapperEl[
              this.axis[axis].scrollSizeAttr
            ];
            var trackSize = this.axis[axis].track.el[
              this.axis[axis].offsetSizeAttr
            ];
            var hostSize = parseInt(
              this.elStyles[this.axis[axis].sizeAttr],
              10
            );
            var scrollbar = this.axis[axis].scrollbar;
            var scrollOffset = this.contentWrapperEl[
              this.axis[axis].scrollOffsetAttr
            ];
            scrollOffset =
              axis === 'x' &&
              this.isRtl &&
              SimpleBar.getRtlHelpers().isRtlScrollingInverted
                ? -scrollOffset
                : scrollOffset;
            var scrollPourcent = scrollOffset / (contentSize - hostSize);
            var handleOffset = ~~(
              (trackSize - scrollbar.size) *
              scrollPourcent
            );
            handleOffset =
              axis === 'x' &&
              this.isRtl &&
              SimpleBar.getRtlHelpers().isRtlScrollbarInverted
                ? handleOffset + (trackSize - scrollbar.size)
                : handleOffset;
            scrollbar.el.style.transform =
              axis === 'x'
                ? 'translate3d(' + handleOffset + 'px, 0, 0)'
                : 'translate3d(0, ' + handleOffset + 'px, 0)';
          };

          _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            var track = this.axis[axis].track.el;
            var scrollbar = this.axis[axis].scrollbar.el;

            if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {
              track.style.visibility = 'visible';
              this.contentWrapperEl.style[this.axis[axis].overflowAttr] =
                'scroll';
            } else {
              track.style.visibility = 'hidden';
              this.contentWrapperEl.style[this.axis[axis].overflowAttr] =
                'hidden';
            } // Even if forceVisible is enabled, scrollbar itself should be hidden

            if (this.axis[axis].isOverflowing) {
              scrollbar.style.display = 'block';
            } else {
              scrollbar.style.display = 'none';
            }
          };

          _proto.hideNativeScrollbar = function hideNativeScrollbar() {
            this.offsetEl.style[this.isRtl ? 'left' : 'right'] =
              this.axis.y.isOverflowing || this.axis.y.forceVisible
                ? '-' + this.scrollbarWidth + 'px'
                : 0;
            this.offsetEl.style.bottom =
              this.axis.x.isOverflowing || this.axis.x.forceVisible
                ? '-' + this.scrollbarWidth + 'px'
                : 0;
          };
          /**
           * On scroll event handling
           */

          _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            this.axis[axis].track.rect = this.axis[
              axis
            ].track.el.getBoundingClientRect();
            this.axis[axis].scrollbar.rect = this.axis[
              axis
            ].scrollbar.el.getBoundingClientRect();
            var isWithinScrollbarBoundsX = this.isWithinBounds(
              this.axis[axis].scrollbar.rect
            );

            if (isWithinScrollbarBoundsX) {
              this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);
            } else {
              this.axis[axis].scrollbar.el.classList.remove(
                this.classNames.hover
              );
            }

            if (this.isWithinBounds(this.axis[axis].track.rect)) {
              this.showScrollbar(axis);
              this.axis[axis].track.el.classList.add(this.classNames.hover);
            } else {
              this.axis[axis].track.el.classList.remove(this.classNames.hover);
            }
          };

          _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            this.axis[axis].track.el.classList.remove(this.classNames.hover);
            this.axis[axis].scrollbar.el.classList.remove(
              this.classNames.hover
            );
          };
          /**
           * Show scrollbar
           */

          _proto.showScrollbar = function showScrollbar(axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            var scrollbar = this.axis[axis].scrollbar.el;

            if (!this.axis[axis].isVisible) {
              scrollbar.classList.add(this.classNames.visible);
              this.axis[axis].isVisible = true;
            }

            if (this.options.autoHide) {
              this.hideScrollbars();
            }
          };
          /**
           * Hide Scrollbar
           */
          /**
           * on scrollbar handle drag movement starts
           */

          _proto.onDragStart = function onDragStart(e, axis) {
            if (axis === void 0) {
              axis = 'y';
            }

            var elDocument = getElementDocument(this.el);
            var elWindow = getElementWindow(this.el);
            var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.

            var eventOffset = axis === 'y' ? e.pageY : e.pageX;
            this.axis[axis].dragOffset =
              eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];
            this.draggedAxis = axis;
            this.el.classList.add(this.classNames.dragging);
            elDocument.addEventListener('mousemove', this.drag, true);
            elDocument.addEventListener('mouseup', this.onEndDrag, true);

            if (this.removePreventClickId === null) {
              elDocument.addEventListener('click', this.preventClick, true);
              elDocument.addEventListener('dblclick', this.preventClick, true);
            } else {
              elWindow.clearTimeout(this.removePreventClickId);
              this.removePreventClickId = null;
            }
          };
          /**
           * Drag scrollbar handle
           */

          _proto.onTrackClick = function onTrackClick(e, axis) {
            var _this4 = this;

            if (axis === void 0) {
              axis = 'y';
            }

            if (!this.options.clickOnTrack) return;
            var elWindow = getElementWindow(this.el);
            this.axis[axis].scrollbar.rect = this.axis[
              axis
            ].scrollbar.el.getBoundingClientRect();
            var scrollbar = this.axis[axis].scrollbar;
            var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];
            var hostSize = parseInt(
              this.elStyles[this.axis[axis].sizeAttr],
              10
            );
            var scrolled = this.contentWrapperEl[
              this.axis[axis].scrollOffsetAttr
            ];
            var t =
              axis === 'y'
                ? this.mouseY - scrollbarOffset
                : this.mouseX - scrollbarOffset;
            var dir = t < 0 ? -1 : 1;
            var scrollSize =
              dir === -1 ? scrolled - hostSize : scrolled + hostSize;
            var speed = 40;

            var scrollTo = function scrollTo() {
              if (dir === -1) {
                if (scrolled > scrollSize) {
                  var _this4$contentWrapper;

                  scrolled -= speed;

                  _this4.contentWrapperEl.scrollTo(
                    ((_this4$contentWrapper = {}),
                    (_this4$contentWrapper[
                      _this4.axis[axis].offsetAttr
                    ] = scrolled),
                    _this4$contentWrapper)
                  );

                  elWindow.requestAnimationFrame(scrollTo);
                }
              } else {
                if (scrolled < scrollSize) {
                  var _this4$contentWrapper2;

                  scrolled += speed;

                  _this4.contentWrapperEl.scrollTo(
                    ((_this4$contentWrapper2 = {}),
                    (_this4$contentWrapper2[
                      _this4.axis[axis].offsetAttr
                    ] = scrolled),
                    _this4$contentWrapper2)
                  );

                  elWindow.requestAnimationFrame(scrollTo);
                }
              }
            };

            scrollTo();
          };
          /**
           * Getter for content element
           */

          _proto.getContentElement = function getContentElement() {
            return this.contentEl;
          };
          /**
           * Getter for original scrolling element
           */

          _proto.getScrollElement = function getScrollElement() {
            return this.contentWrapperEl;
          };

          _proto.getScrollbarWidth = function getScrollbarWidth() {
            // Try/catch for FF 56 throwing on undefined computedStyles
            try {
              // Detect browsers supporting CSS scrollbar styling and do not calculate
              if (
                getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')
                  .display === 'none' ||
                'scrollbarWidth' in document.documentElement.style ||
                '-ms-overflow-style' in document.documentElement.style
              ) {
                return 0;
              } else {
                return scrollbarWidth();
              }
            } catch (e) {
              return scrollbarWidth();
            }
          };

          _proto.removeListeners = function removeListeners() {
            var _this5 = this;

            var elWindow = getElementWindow(this.el); // Event listeners

            if (this.options.autoHide) {
              this.el.removeEventListener('mouseenter', this.onMouseEnter);
            }

            ['mousedown', 'click', 'dblclick'].forEach(function(e) {
              _this5.el.removeEventListener(e, _this5.onPointerEvent, true);
            });
            ['touchstart', 'touchend', 'touchmove'].forEach(function(e) {
              _this5.el.removeEventListener(e, _this5.onPointerEvent, {
                capture: true,
                passive: true
              });
            });
            this.el.removeEventListener('mousemove', this.onMouseMove);
            this.el.removeEventListener('mouseleave', this.onMouseLeave);
            this.contentWrapperEl.removeEventListener('scroll', this.onScroll);
            elWindow.removeEventListener('resize', this.onWindowResize);
            this.mutationObserver.disconnect();
            this.resizeObserver.disconnect(); // Cancel all debounced functions

            this.recalculate.cancel();
            this.onMouseMove.cancel();
            this.hideScrollbars.cancel();
            this.onWindowResize.cancel();
          };
          /**
           * UnMount mutation observer and delete SimpleBar instance from DOM element
           */

          _proto.unMount = function unMount() {
            this.removeListeners();
            SimpleBar.instances.delete(this.el);
          };
          /**
           * Check if mouse is within bounds
           */

          _proto.isWithinBounds = function isWithinBounds(bbox) {
            return (
              this.mouseX >= bbox.left &&
              this.mouseX <= bbox.left + bbox.width &&
              this.mouseY >= bbox.top &&
              this.mouseY <= bbox.top + bbox.height
            );
          };
          /**
           * Find element children matches query
           */

          _proto.findChild = function findChild(el, query) {
            var matches =
              el.matches ||
              el.webkitMatchesSelector ||
              el.mozMatchesSelector ||
              el.msMatchesSelector;
            return Array.prototype.filter.call(el.children, function(child) {
              return matches.call(child, query);
            })[0];
          };

          return SimpleBar;
        })();

        SimpleBar.defaultOptions = {
          autoHide: true,
          forceVisible: false,
          clickOnTrack: true,
          classNames: {
            contentEl: 'simplebar-content',
            contentWrapper: 'simplebar-content-wrapper',
            offset: 'simplebar-offset',
            mask: 'simplebar-mask',
            wrapper: 'simplebar-wrapper',
            placeholder: 'simplebar-placeholder',
            scrollbar: 'simplebar-scrollbar',
            track: 'simplebar-track',
            heightAutoObserverWrapperEl:
              'simplebar-height-auto-observer-wrapper',
            heightAutoObserverEl: 'simplebar-height-auto-observer',
            visible: 'simplebar-visible',
            horizontal: 'simplebar-horizontal',
            vertical: 'simplebar-vertical',
            hover: 'simplebar-hover',
            dragging: 'simplebar-dragging'
          },
          scrollbarMinSize: 25,
          scrollbarMaxSize: 0,
          timeout: 1000
        };
        SimpleBar.instances = new WeakMap();

        SimpleBar.initDOMLoadedElements = function() {
          document.removeEventListener(
            'DOMContentLoaded',
            this.initDOMLoadedElements
          );
          window.removeEventListener('load', this.initDOMLoadedElements);
          Array.prototype.forEach.call(
            document.querySelectorAll('[data-simplebar]'),
            function(el) {
              if (
                el.getAttribute('data-simplebar') !== 'init' &&
                !SimpleBar.instances.has(el)
              )
                new SimpleBar(el, getOptions(el.attributes));
            }
          );
        };

        SimpleBar.removeObserver = function() {
          this.globalObserver.disconnect();
        };

        SimpleBar.initHtmlApi = function() {
          this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this); // MutationObserver is IE11+

          if (typeof MutationObserver !== 'undefined') {
            // Mutation observer to observe dynamically added elements
            this.globalObserver = new MutationObserver(
              SimpleBar.handleMutations
            );
            this.globalObserver.observe(document, {
              childList: true,
              subtree: true
            });
          } // Taken from jQuery `ready` function
          // Instantiate elements already present on the page

          if (
            document.readyState === 'complete' ||
            (document.readyState !== 'loading' &&
              !document.documentElement.doScroll)
          ) {
            // Handle it asynchronously to allow scripts the opportunity to delay init
            window.setTimeout(this.initDOMLoadedElements);
          } else {
            document.addEventListener(
              'DOMContentLoaded',
              this.initDOMLoadedElements
            );
            window.addEventListener('load', this.initDOMLoadedElements);
          }
        };

        SimpleBar.handleMutations = function(mutations) {
          mutations.forEach(function(mutation) {
            Array.prototype.forEach.call(mutation.addedNodes, function(
              addedNode
            ) {
              if (addedNode.nodeType === 1) {
                if (addedNode.hasAttribute('data-simplebar')) {
                  !SimpleBar.instances.has(addedNode) &&
                    new SimpleBar(addedNode, getOptions(addedNode.attributes));
                } else {
                  Array.prototype.forEach.call(
                    addedNode.querySelectorAll('[data-simplebar]'),
                    function(el) {
                      if (
                        el.getAttribute('data-simplebar') !== 'init' &&
                        !SimpleBar.instances.has(el)
                      )
                        new SimpleBar(el, getOptions(el.attributes));
                    }
                  );
                }
              }
            });
            Array.prototype.forEach.call(mutation.removedNodes, function(
              removedNode
            ) {
              if (removedNode.nodeType === 1) {
                if (removedNode.hasAttribute('[data-simplebar="init"]')) {
                  SimpleBar.instances.has(removedNode) &&
                    SimpleBar.instances.get(removedNode).unMount();
                } else {
                  Array.prototype.forEach.call(
                    removedNode.querySelectorAll('[data-simplebar="init"]'),
                    function(el) {
                      SimpleBar.instances.has(el) &&
                        SimpleBar.instances.get(el).unMount();
                    }
                  );
                }
              }
            });
          });
        };

        SimpleBar.getOptions = getOptions;
        /**
         * HTML API
         * Called only in a browser env.
         */

        if (_canUseDom.default) {
          SimpleBar.initHtmlApi();
        }

        var _default = SimpleBar;
        exports.default = _default;
      },
      {
        'core-js/modules/es.array.for-each':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.array.for-each.js',
        'core-js/modules/web.dom-collections.for-each':
          '../../node_modules/simplebar/node_modules/core-js/modules/web.dom-collections.for-each.js',
        'can-use-dom': '../../node_modules/can-use-dom/index.js',
        'core-js/modules/es.array.filter':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.array.filter.js',
        'core-js/modules/es.array.iterator':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.array.iterator.js',
        'core-js/modules/es.object.assign':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.object.assign.js',
        'core-js/modules/es.object.to-string':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.object.to-string.js',
        'core-js/modules/es.parse-int':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.parse-int.js',
        'core-js/modules/es.string.iterator':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.string.iterator.js',
        'core-js/modules/es.weak-map':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.weak-map.js',
        'core-js/modules/web.dom-collections.iterator':
          '../../node_modules/simplebar/node_modules/core-js/modules/web.dom-collections.iterator.js',
        'lodash.throttle': '../../node_modules/lodash.throttle/index.js',
        'lodash.debounce': '../../node_modules/lodash.debounce/index.js',
        'lodash.memoize': '../../node_modules/lodash.memoize/index.js',
        'resize-observer-polyfill':
          '../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js',
        'core-js/modules/es.array.reduce':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.array.reduce.js',
        'core-js/modules/es.function.name':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.function.name.js',
        'core-js/modules/es.regexp.exec':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.regexp.exec.js',
        'core-js/modules/es.string.match':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.string.match.js',
        'core-js/modules/es.string.replace':
          '../../node_modules/simplebar/node_modules/core-js/modules/es.string.replace.js'
      }
    ],
    '../../node_modules/axios/lib/helpers/bind.js': [
      function(require, module, exports) {
        'use strict';

        module.exports = function bind(fn, thisArg) {
          return function wrap() {
            var args = new Array(arguments.length);
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i];
            }
            return fn.apply(thisArg, args);
          };
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/utils.js': [
      function(require, module, exports) {
        'use strict';

        var bind = require('./helpers/bind');

        /*global toString:true*/

        // utils is a library of generic helper functions non-specific to axios

        var toString = Object.prototype.toString;

        /**
         * Determine if a value is an Array
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Array, otherwise false
         */
        function isArray(val) {
          return toString.call(val) === '[object Array]';
        }

        /**
         * Determine if a value is undefined
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if the value is undefined, otherwise false
         */
        function isUndefined(val) {
          return typeof val === 'undefined';
        }

        /**
         * Determine if a value is a Buffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Buffer, otherwise false
         */
        function isBuffer(val) {
          return (
            val !== null &&
            !isUndefined(val) &&
            val.constructor !== null &&
            !isUndefined(val.constructor) &&
            typeof val.constructor.isBuffer === 'function' &&
            val.constructor.isBuffer(val)
          );
        }

        /**
         * Determine if a value is an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an ArrayBuffer, otherwise false
         */
        function isArrayBuffer(val) {
          return toString.call(val) === '[object ArrayBuffer]';
        }

        /**
         * Determine if a value is a FormData
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an FormData, otherwise false
         */
        function isFormData(val) {
          return typeof FormData !== 'undefined' && val instanceof FormData;
        }

        /**
         * Determine if a value is a view on an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
         */
        function isArrayBufferView(val) {
          var result;
          if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
            result = ArrayBuffer.isView(val);
          } else {
            result = val && val.buffer && val.buffer instanceof ArrayBuffer;
          }
          return result;
        }

        /**
         * Determine if a value is a String
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a String, otherwise false
         */
        function isString(val) {
          return typeof val === 'string';
        }

        /**
         * Determine if a value is a Number
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Number, otherwise false
         */
        function isNumber(val) {
          return typeof val === 'number';
        }

        /**
         * Determine if a value is an Object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Object, otherwise false
         */
        function isObject(val) {
          return val !== null && typeof val === 'object';
        }

        /**
         * Determine if a value is a Date
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Date, otherwise false
         */
        function isDate(val) {
          return toString.call(val) === '[object Date]';
        }

        /**
         * Determine if a value is a File
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a File, otherwise false
         */
        function isFile(val) {
          return toString.call(val) === '[object File]';
        }

        /**
         * Determine if a value is a Blob
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Blob, otherwise false
         */
        function isBlob(val) {
          return toString.call(val) === '[object Blob]';
        }

        /**
         * Determine if a value is a Function
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Function, otherwise false
         */
        function isFunction(val) {
          return toString.call(val) === '[object Function]';
        }

        /**
         * Determine if a value is a Stream
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Stream, otherwise false
         */
        function isStream(val) {
          return isObject(val) && isFunction(val.pipe);
        }

        /**
         * Determine if a value is a URLSearchParams object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a URLSearchParams object, otherwise false
         */
        function isURLSearchParams(val) {
          return (
            typeof URLSearchParams !== 'undefined' &&
            val instanceof URLSearchParams
          );
        }

        /**
         * Trim excess whitespace off the beginning and end of a string
         *
         * @param {String} str The String to trim
         * @returns {String} The String freed of excess whitespace
         */
        function trim(str) {
          return str.replace(/^\s*/, '').replace(/\s*$/, '');
        }

        /**
         * Determine if we're running in a standard browser environment
         *
         * This allows axios to run in a web worker, and react-native.
         * Both environments support XMLHttpRequest, but not fully standard globals.
         *
         * web workers:
         *  typeof window -> undefined
         *  typeof document -> undefined
         *
         * react-native:
         *  navigator.product -> 'ReactNative'
         * nativescript
         *  navigator.product -> 'NativeScript' or 'NS'
         */
        function isStandardBrowserEnv() {
          if (
            typeof navigator !== 'undefined' &&
            (navigator.product === 'ReactNative' ||
              navigator.product === 'NativeScript' ||
              navigator.product === 'NS')
          ) {
            return false;
          }
          return (
            typeof window !== 'undefined' && typeof document !== 'undefined'
          );
        }

        /**
         * Iterate over an Array or an Object invoking a function for each item.
         *
         * If `obj` is an Array callback will be called passing
         * the value, index, and complete array for each item.
         *
         * If 'obj' is an Object callback will be called passing
         * the value, key, and complete object for each property.
         *
         * @param {Object|Array} obj The object to iterate
         * @param {Function} fn The callback to invoke for each item
         */
        function forEach(obj, fn) {
          // Don't bother if no value provided
          if (obj === null || typeof obj === 'undefined') {
            return;
          }

          // Force an array if not already something iterable
          if (typeof obj !== 'object') {
            /*eslint no-param-reassign:0*/
            obj = [obj];
          }

          if (isArray(obj)) {
            // Iterate over array values
            for (var i = 0, l = obj.length; i < l; i++) {
              fn.call(null, obj[i], i, obj);
            }
          } else {
            // Iterate over object keys
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) {
                fn.call(null, obj[key], key, obj);
              }
            }
          }
        }

        /**
         * Accepts varargs expecting each argument to be an object, then
         * immutably merges the properties of each object and returns result.
         *
         * When multiple objects contain the same key the later object in
         * the arguments list will take precedence.
         *
         * Example:
         *
         * ```js
         * var result = merge({foo: 123}, {foo: 456});
         * console.log(result.foo); // outputs 456
         * ```
         *
         * @param {Object} obj1 Object to merge
         * @returns {Object} Result of all merge properties
         */
        function merge(/* obj1, obj2, obj3, ... */) {
          var result = {};
          function assignValue(val, key) {
            if (typeof result[key] === 'object' && typeof val === 'object') {
              result[key] = merge(result[key], val);
            } else {
              result[key] = val;
            }
          }

          for (var i = 0, l = arguments.length; i < l; i++) {
            forEach(arguments[i], assignValue);
          }
          return result;
        }

        /**
         * Function equal to merge with the difference being that no reference
         * to original objects is kept.
         *
         * @see merge
         * @param {Object} obj1 Object to merge
         * @returns {Object} Result of all merge properties
         */
        function deepMerge(/* obj1, obj2, obj3, ... */) {
          var result = {};
          function assignValue(val, key) {
            if (typeof result[key] === 'object' && typeof val === 'object') {
              result[key] = deepMerge(result[key], val);
            } else if (typeof val === 'object') {
              result[key] = deepMerge({}, val);
            } else {
              result[key] = val;
            }
          }

          for (var i = 0, l = arguments.length; i < l; i++) {
            forEach(arguments[i], assignValue);
          }
          return result;
        }

        /**
         * Extends object a by mutably adding to it the properties of object b.
         *
         * @param {Object} a The object to be extended
         * @param {Object} b The object to copy properties from
         * @param {Object} thisArg The object to bind function to
         * @return {Object} The resulting value of object a
         */
        function extend(a, b, thisArg) {
          forEach(b, function assignValue(val, key) {
            if (thisArg && typeof val === 'function') {
              a[key] = bind(val, thisArg);
            } else {
              a[key] = val;
            }
          });
          return a;
        }

        module.exports = {
          isArray: isArray,
          isArrayBuffer: isArrayBuffer,
          isBuffer: isBuffer,
          isFormData: isFormData,
          isArrayBufferView: isArrayBufferView,
          isString: isString,
          isNumber: isNumber,
          isObject: isObject,
          isUndefined: isUndefined,
          isDate: isDate,
          isFile: isFile,
          isBlob: isBlob,
          isFunction: isFunction,
          isStream: isStream,
          isURLSearchParams: isURLSearchParams,
          isStandardBrowserEnv: isStandardBrowserEnv,
          forEach: forEach,
          merge: merge,
          deepMerge: deepMerge,
          extend: extend,
          trim: trim
        };
      },
      { './helpers/bind': '../../node_modules/axios/lib/helpers/bind.js' }
    ],
    '../../node_modules/axios/lib/helpers/buildURL.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        function encode(val) {
          return encodeURIComponent(val)
            .replace(/%40/gi, '@')
            .replace(/%3A/gi, ':')
            .replace(/%24/g, '$')
            .replace(/%2C/gi, ',')
            .replace(/%20/g, '+')
            .replace(/%5B/gi, '[')
            .replace(/%5D/gi, ']');
        }

        /**
         * Build a URL by appending params to the end
         *
         * @param {string} url The base of the url (e.g., http://www.google.com)
         * @param {object} [params] The params to be appended
         * @returns {string} The formatted url
         */
        module.exports = function buildURL(url, params, paramsSerializer) {
          /*eslint no-param-reassign:0*/
          if (!params) {
            return url;
          }

          var serializedParams;
          if (paramsSerializer) {
            serializedParams = paramsSerializer(params);
          } else if (utils.isURLSearchParams(params)) {
            serializedParams = params.toString();
          } else {
            var parts = [];

            utils.forEach(params, function serialize(val, key) {
              if (val === null || typeof val === 'undefined') {
                return;
              }

              if (utils.isArray(val)) {
                key = key + '[]';
              } else {
                val = [val];
              }

              utils.forEach(val, function parseValue(v) {
                if (utils.isDate(v)) {
                  v = v.toISOString();
                } else if (utils.isObject(v)) {
                  v = JSON.stringify(v);
                }
                parts.push(encode(key) + '=' + encode(v));
              });
            });

            serializedParams = parts.join('&');
          }

          if (serializedParams) {
            var hashmarkIndex = url.indexOf('#');
            if (hashmarkIndex !== -1) {
              url = url.slice(0, hashmarkIndex);
            }

            url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
          }

          return url;
        };
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/core/InterceptorManager.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        function InterceptorManager() {
          this.handlers = [];
        }

        /**
         * Add a new interceptor to the stack
         *
         * @param {Function} fulfilled The function to handle `then` for a `Promise`
         * @param {Function} rejected The function to handle `reject` for a `Promise`
         *
         * @return {Number} An ID used to remove interceptor later
         */
        InterceptorManager.prototype.use = function use(fulfilled, rejected) {
          this.handlers.push({
            fulfilled: fulfilled,
            rejected: rejected
          });
          return this.handlers.length - 1;
        };

        /**
         * Remove an interceptor from the stack
         *
         * @param {Number} id The ID that was returned by `use`
         */
        InterceptorManager.prototype.eject = function eject(id) {
          if (this.handlers[id]) {
            this.handlers[id] = null;
          }
        };

        /**
         * Iterate over all the registered interceptors
         *
         * This method is particularly useful for skipping over any
         * interceptors that may have become `null` calling `eject`.
         *
         * @param {Function} fn The function to call for each interceptor
         */
        InterceptorManager.prototype.forEach = function forEach(fn) {
          utils.forEach(this.handlers, function forEachHandler(h) {
            if (h !== null) {
              fn(h);
            }
          });
        };

        module.exports = InterceptorManager;
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/core/transformData.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        /**
         * Transform the data for a request or a response
         *
         * @param {Object|String} data The data to be transformed
         * @param {Array} headers The headers for the request or response
         * @param {Array|Function} fns A single function or Array of functions
         * @returns {*} The resulting transformed data
         */
        module.exports = function transformData(data, headers, fns) {
          /*eslint no-param-reassign:0*/
          utils.forEach(fns, function transform(fn) {
            data = fn(data, headers);
          });

          return data;
        };
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/cancel/isCancel.js': [
      function(require, module, exports) {
        'use strict';

        module.exports = function isCancel(value) {
          return !!(value && value.__CANCEL__);
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/helpers/normalizeHeaderName.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('../utils');

        module.exports = function normalizeHeaderName(headers, normalizedName) {
          utils.forEach(headers, function processHeader(value, name) {
            if (
              name !== normalizedName &&
              name.toUpperCase() === normalizedName.toUpperCase()
            ) {
              headers[normalizedName] = value;
              delete headers[name];
            }
          });
        };
      },
      { '../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/core/enhanceError.js': [
      function(require, module, exports) {
        'use strict';

        /**
         * Update an Error with the specified config, error code, and response.
         *
         * @param {Error} error The error to update.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The error.
         */
        module.exports = function enhanceError(
          error,
          config,
          code,
          request,
          response
        ) {
          error.config = config;
          if (code) {
            error.code = code;
          }

          error.request = request;
          error.response = response;
          error.isAxiosError = true;

          error.toJSON = function() {
            return {
              // Standard
              message: this.message,
              name: this.name,
              // Microsoft
              description: this.description,
              number: this.number,
              // Mozilla
              fileName: this.fileName,
              lineNumber: this.lineNumber,
              columnNumber: this.columnNumber,
              stack: this.stack,
              // Axios
              config: this.config,
              code: this.code
            };
          };
          return error;
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/core/createError.js': [
      function(require, module, exports) {
        'use strict';

        var enhanceError = require('./enhanceError');

        /**
         * Create an Error with the specified message, config, error code, request and response.
         *
         * @param {string} message The error message.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The created error.
         */
        module.exports = function createError(
          message,
          config,
          code,
          request,
          response
        ) {
          var error = new Error(message);
          return enhanceError(error, config, code, request, response);
        };
      },
      { './enhanceError': '../../node_modules/axios/lib/core/enhanceError.js' }
    ],
    '../../node_modules/axios/lib/core/settle.js': [
      function(require, module, exports) {
        'use strict';

        var createError = require('./createError');

        /**
         * Resolve or reject a Promise based on response status.
         *
         * @param {Function} resolve A function that resolves the promise.
         * @param {Function} reject A function that rejects the promise.
         * @param {object} response The response.
         */
        module.exports = function settle(resolve, reject, response) {
          var validateStatus = response.config.validateStatus;
          if (!validateStatus || validateStatus(response.status)) {
            resolve(response);
          } else {
            reject(
              createError(
                'Request failed with status code ' + response.status,
                response.config,
                null,
                response.request,
                response
              )
            );
          }
        };
      },
      { './createError': '../../node_modules/axios/lib/core/createError.js' }
    ],
    '../../node_modules/axios/lib/helpers/isAbsoluteURL.js': [
      function(require, module, exports) {
        'use strict';

        /**
         * Determines whether the specified URL is absolute
         *
         * @param {string} url The URL to test
         * @returns {boolean} True if the specified URL is absolute, otherwise false
         */
        module.exports = function isAbsoluteURL(url) {
          // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
          // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
          // by any combination of letters, digits, plus, period, or hyphen.
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/helpers/combineURLs.js': [
      function(require, module, exports) {
        'use strict';

        /**
         * Creates a new URL by combining the specified URLs
         *
         * @param {string} baseURL The base URL
         * @param {string} relativeURL The relative URL
         * @returns {string} The combined URL
         */
        module.exports = function combineURLs(baseURL, relativeURL) {
          return relativeURL
            ? baseURL.replace(/\/+$/, '') +
                '/' +
                relativeURL.replace(/^\/+/, '')
            : baseURL;
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/core/buildFullPath.js': [
      function(require, module, exports) {
        'use strict';

        var isAbsoluteURL = require('../helpers/isAbsoluteURL');
        var combineURLs = require('../helpers/combineURLs');

        /**
         * Creates a new URL by combining the baseURL with the requestedURL,
         * only when the requestedURL is not already an absolute URL.
         * If the requestURL is absolute, this function returns the requestedURL untouched.
         *
         * @param {string} baseURL The base URL
         * @param {string} requestedURL Absolute or relative URL to combine
         * @returns {string} The combined full path
         */
        module.exports = function buildFullPath(baseURL, requestedURL) {
          if (baseURL && !isAbsoluteURL(requestedURL)) {
            return combineURLs(baseURL, requestedURL);
          }
          return requestedURL;
        };
      },
      {
        '../helpers/isAbsoluteURL':
          '../../node_modules/axios/lib/helpers/isAbsoluteURL.js',
        '../helpers/combineURLs':
          '../../node_modules/axios/lib/helpers/combineURLs.js'
      }
    ],
    '../../node_modules/axios/lib/helpers/parseHeaders.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        // Headers whose duplicates are ignored by node
        // c.f. https://nodejs.org/api/http.html#http_message_headers
        var ignoreDuplicateOf = [
          'age',
          'authorization',
          'content-length',
          'content-type',
          'etag',
          'expires',
          'from',
          'host',
          'if-modified-since',
          'if-unmodified-since',
          'last-modified',
          'location',
          'max-forwards',
          'proxy-authorization',
          'referer',
          'retry-after',
          'user-agent'
        ];

        /**
         * Parse headers into an object
         *
         * ```
         * Date: Wed, 27 Aug 2014 08:58:49 GMT
         * Content-Type: application/json
         * Connection: keep-alive
         * Transfer-Encoding: chunked
         * ```
         *
         * @param {String} headers Headers needing to be parsed
         * @returns {Object} Headers parsed into an object
         */
        module.exports = function parseHeaders(headers) {
          var parsed = {};
          var key;
          var val;
          var i;

          if (!headers) {
            return parsed;
          }

          utils.forEach(headers.split('\n'), function parser(line) {
            i = line.indexOf(':');
            key = utils.trim(line.substr(0, i)).toLowerCase();
            val = utils.trim(line.substr(i + 1));

            if (key) {
              if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                return;
              }
              if (key === 'set-cookie') {
                parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
              } else {
                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
              }
            }
          });

          return parsed;
        };
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/helpers/isURLSameOrigin.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs have full support of the APIs needed to test
            // whether the request URL is of the same origin as current location.
            (function standardBrowserEnv() {
              var msie = /(msie|trident)/i.test(navigator.userAgent);
              var urlParsingNode = document.createElement('a');
              var originURL;

              /**
               * Parse a URL to discover it's components
               *
               * @param {String} url The URL to be parsed
               * @returns {Object}
               */
              function resolveURL(url) {
                var href = url;

                if (msie) {
                  // IE needs attribute set twice to normalize properties
                  urlParsingNode.setAttribute('href', href);
                  href = urlParsingNode.href;
                }

                urlParsingNode.setAttribute('href', href);

                // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                return {
                  href: urlParsingNode.href,
                  protocol: urlParsingNode.protocol
                    ? urlParsingNode.protocol.replace(/:$/, '')
                    : '',
                  host: urlParsingNode.host,
                  search: urlParsingNode.search
                    ? urlParsingNode.search.replace(/^\?/, '')
                    : '',
                  hash: urlParsingNode.hash
                    ? urlParsingNode.hash.replace(/^#/, '')
                    : '',
                  hostname: urlParsingNode.hostname,
                  port: urlParsingNode.port,
                  pathname:
                    urlParsingNode.pathname.charAt(0) === '/'
                      ? urlParsingNode.pathname
                      : '/' + urlParsingNode.pathname
                };
              }

              originURL = resolveURL(window.location.href);

              /**
               * Determine if a URL shares the same origin as the current location
               *
               * @param {String} requestURL The URL to test
               * @returns {boolean} True if URL shares the same origin, otherwise false
               */
              return function isURLSameOrigin(requestURL) {
                var parsed = utils.isString(requestURL)
                  ? resolveURL(requestURL)
                  : requestURL;
                return (
                  parsed.protocol === originURL.protocol &&
                  parsed.host === originURL.host
                );
              };
            })()
          : // Non standard browser envs (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return function isURLSameOrigin() {
                return true;
              };
            })();
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/helpers/cookies.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs support document.cookie
            (function standardBrowserEnv() {
              return {
                write: function write(
                  name,
                  value,
                  expires,
                  path,
                  domain,
                  secure
                ) {
                  var cookie = [];
                  cookie.push(name + '=' + encodeURIComponent(value));

                  if (utils.isNumber(expires)) {
                    cookie.push('expires=' + new Date(expires).toGMTString());
                  }

                  if (utils.isString(path)) {
                    cookie.push('path=' + path);
                  }

                  if (utils.isString(domain)) {
                    cookie.push('domain=' + domain);
                  }

                  if (secure === true) {
                    cookie.push('secure');
                  }

                  document.cookie = cookie.join('; ');
                },

                read: function read(name) {
                  var match = document.cookie.match(
                    new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
                  );
                  return match ? decodeURIComponent(match[3]) : null;
                },

                remove: function remove(name) {
                  this.write(name, '', Date.now() - 86400000);
                }
              };
            })()
          : // Non standard browser env (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return {
                write: function write() {},
                read: function read() {
                  return null;
                },
                remove: function remove() {}
              };
            })();
      },
      { './../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/adapters/xhr.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');
        var settle = require('./../core/settle');
        var buildURL = require('./../helpers/buildURL');
        var buildFullPath = require('../core/buildFullPath');
        var parseHeaders = require('./../helpers/parseHeaders');
        var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
        var createError = require('../core/createError');

        module.exports = function xhrAdapter(config) {
          return new Promise(function dispatchXhrRequest(resolve, reject) {
            var requestData = config.data;
            var requestHeaders = config.headers;

            if (utils.isFormData(requestData)) {
              delete requestHeaders['Content-Type']; // Let the browser set it
            }

            var request = new XMLHttpRequest();

            // HTTP basic authentication
            if (config.auth) {
              var username = config.auth.username || '';
              var password = config.auth.password || '';
              requestHeaders.Authorization =
                'Basic ' + btoa(username + ':' + password);
            }

            var fullPath = buildFullPath(config.baseURL, config.url);
            request.open(
              config.method.toUpperCase(),
              buildURL(fullPath, config.params, config.paramsSerializer),
              true
            );

            // Set the request timeout in MS
            request.timeout = config.timeout;

            // Listen for ready state
            request.onreadystatechange = function handleLoad() {
              if (!request || request.readyState !== 4) {
                return;
              }

              // The request errored out and we didn't get a response, this will be
              // handled by onerror instead
              // With one exception: request that using file: protocol, most browsers
              // will return status as 0 even though it's a successful request
              if (
                request.status === 0 &&
                !(
                  request.responseURL &&
                  request.responseURL.indexOf('file:') === 0
                )
              ) {
                return;
              }

              // Prepare the response
              var responseHeaders =
                'getAllResponseHeaders' in request
                  ? parseHeaders(request.getAllResponseHeaders())
                  : null;
              var responseData =
                !config.responseType || config.responseType === 'text'
                  ? request.responseText
                  : request.response;
              var response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config: config,
                request: request
              };

              settle(resolve, reject, response);

              // Clean up request
              request = null;
            };

            // Handle browser request cancellation (as opposed to a manual cancellation)
            request.onabort = function handleAbort() {
              if (!request) {
                return;
              }

              reject(
                createError('Request aborted', config, 'ECONNABORTED', request)
              );

              // Clean up request
              request = null;
            };

            // Handle low level network errors
            request.onerror = function handleError() {
              // Real errors are hidden from us by the browser
              // onerror should only fire if it's a network error
              reject(createError('Network Error', config, null, request));

              // Clean up request
              request = null;
            };

            // Handle timeout
            request.ontimeout = function handleTimeout() {
              var timeoutErrorMessage =
                'timeout of ' + config.timeout + 'ms exceeded';
              if (config.timeoutErrorMessage) {
                timeoutErrorMessage = config.timeoutErrorMessage;
              }
              reject(
                createError(
                  timeoutErrorMessage,
                  config,
                  'ECONNABORTED',
                  request
                )
              );

              // Clean up request
              request = null;
            };

            // Add xsrf header
            // This is only done if running in a standard browser environment.
            // Specifically not if we're in a web worker, or react-native.
            if (utils.isStandardBrowserEnv()) {
              var cookies = require('./../helpers/cookies');

              // Add xsrf header
              var xsrfValue =
                (config.withCredentials || isURLSameOrigin(fullPath)) &&
                config.xsrfCookieName
                  ? cookies.read(config.xsrfCookieName)
                  : undefined;

              if (xsrfValue) {
                requestHeaders[config.xsrfHeaderName] = xsrfValue;
              }
            }

            // Add headers to the request
            if ('setRequestHeader' in request) {
              utils.forEach(requestHeaders, function setRequestHeader(
                val,
                key
              ) {
                if (
                  typeof requestData === 'undefined' &&
                  key.toLowerCase() === 'content-type'
                ) {
                  // Remove Content-Type if data is undefined
                  delete requestHeaders[key];
                } else {
                  // Otherwise add header to the request
                  request.setRequestHeader(key, val);
                }
              });
            }

            // Add withCredentials to request if needed
            if (!utils.isUndefined(config.withCredentials)) {
              request.withCredentials = !!config.withCredentials;
            }

            // Add responseType to request if needed
            if (config.responseType) {
              try {
                request.responseType = config.responseType;
              } catch (e) {
                // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                if (config.responseType !== 'json') {
                  throw e;
                }
              }
            }

            // Handle progress if needed
            if (typeof config.onDownloadProgress === 'function') {
              request.addEventListener('progress', config.onDownloadProgress);
            }

            // Not all browsers support upload events
            if (
              typeof config.onUploadProgress === 'function' &&
              request.upload
            ) {
              request.upload.addEventListener(
                'progress',
                config.onUploadProgress
              );
            }

            if (config.cancelToken) {
              // Handle cancellation
              config.cancelToken.promise.then(function onCanceled(cancel) {
                if (!request) {
                  return;
                }

                request.abort();
                reject(cancel);
                // Clean up request
                request = null;
              });
            }

            if (requestData === undefined) {
              requestData = null;
            }

            // Send the request
            request.send(requestData);
          });
        };
      },
      {
        './../utils': '../../node_modules/axios/lib/utils.js',
        './../core/settle': '../../node_modules/axios/lib/core/settle.js',
        './../helpers/buildURL':
          '../../node_modules/axios/lib/helpers/buildURL.js',
        '../core/buildFullPath':
          '../../node_modules/axios/lib/core/buildFullPath.js',
        './../helpers/parseHeaders':
          '../../node_modules/axios/lib/helpers/parseHeaders.js',
        './../helpers/isURLSameOrigin':
          '../../node_modules/axios/lib/helpers/isURLSameOrigin.js',
        '../core/createError':
          '../../node_modules/axios/lib/core/createError.js',
        './../helpers/cookies':
          '../../node_modules/axios/lib/helpers/cookies.js'
      }
    ],
    '../../node_modules/process/browser.js': [
      function(require, module, exports) {
        // shim for using process in browser
        var process = (module.exports = {}); // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error('setTimeout has not been defined');
        }

        function defaultClearTimeout() {
          throw new Error('clearTimeout has not been defined');
        }

        (function() {
          try {
            if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }

          try {
            if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();

        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          } // if setTimeout wasn't available but was latter defined

          if (
            (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }

          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }

        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          } // if clearTimeout wasn't available but was latter defined

          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }

          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }

        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }

          draining = false;

          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }

          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }

          var timeout = runTimeout(cleanUpNextTick);
          draining = true;
          var len = queue.length;

          while (len) {
            currentQueue = queue;
            queue = [];

            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }

            queueIndex = -1;
            len = queue.length;
          }

          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
          var args = new Array(arguments.length - 1);

          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }

          queue.push(new Item(fun, args));

          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        }; // v8 likes predictible objects

        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }

        Item.prototype.run = function() {
          this.fun.apply(null, this.array);
        };

        process.title = 'browser';
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues

        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
          return [];
        };

        process.binding = function(name) {
          throw new Error('process.binding is not supported');
        };

        process.cwd = function() {
          return '/';
        };

        process.chdir = function(dir) {
          throw new Error('process.chdir is not supported');
        };

        process.umask = function() {
          return 0;
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/defaults.js': [
      function(require, module, exports) {
        var process = require('process');
        ('use strict');

        var utils = require('./utils');
        var normalizeHeaderName = require('./helpers/normalizeHeaderName');

        var DEFAULT_CONTENT_TYPE = {
          'Content-Type': 'application/x-www-form-urlencoded'
        };

        function setContentTypeIfUnset(headers, value) {
          if (
            !utils.isUndefined(headers) &&
            utils.isUndefined(headers['Content-Type'])
          ) {
            headers['Content-Type'] = value;
          }
        }

        function getDefaultAdapter() {
          var adapter;
          if (typeof XMLHttpRequest !== 'undefined') {
            // For browsers use XHR adapter
            adapter = require('./adapters/xhr');
          } else if (
            typeof process !== 'undefined' &&
            Object.prototype.toString.call(process) === '[object process]'
          ) {
            // For node use HTTP adapter
            adapter = require('./adapters/http');
          }
          return adapter;
        }

        var defaults = {
          adapter: getDefaultAdapter(),

          transformRequest: [
            function transformRequest(data, headers) {
              normalizeHeaderName(headers, 'Accept');
              normalizeHeaderName(headers, 'Content-Type');
              if (
                utils.isFormData(data) ||
                utils.isArrayBuffer(data) ||
                utils.isBuffer(data) ||
                utils.isStream(data) ||
                utils.isFile(data) ||
                utils.isBlob(data)
              ) {
                return data;
              }
              if (utils.isArrayBufferView(data)) {
                return data.buffer;
              }
              if (utils.isURLSearchParams(data)) {
                setContentTypeIfUnset(
                  headers,
                  'application/x-www-form-urlencoded;charset=utf-8'
                );
                return data.toString();
              }
              if (utils.isObject(data)) {
                setContentTypeIfUnset(
                  headers,
                  'application/json;charset=utf-8'
                );
                return JSON.stringify(data);
              }
              return data;
            }
          ],

          transformResponse: [
            function transformResponse(data) {
              /*eslint no-param-reassign:0*/
              if (typeof data === 'string') {
                try {
                  data = JSON.parse(data);
                } catch (e) {
                  /* Ignore */
                }
              }
              return data;
            }
          ],

          /**
           * A timeout in milliseconds to abort a request. If set to 0 (default) a
           * timeout is not created.
           */
          timeout: 0,

          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',

          maxContentLength: -1,

          validateStatus: function validateStatus(status) {
            return status >= 200 && status < 300;
          }
        };

        defaults.headers = {
          common: {
            Accept: 'application/json, text/plain, */*'
          }
        };

        utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(
          method
        ) {
          defaults.headers[method] = {};
        });

        utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(
          method
        ) {
          defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        });

        module.exports = defaults;
      },
      {
        './utils': '../../node_modules/axios/lib/utils.js',
        './helpers/normalizeHeaderName':
          '../../node_modules/axios/lib/helpers/normalizeHeaderName.js',
        './adapters/xhr': '../../node_modules/axios/lib/adapters/xhr.js',
        './adapters/http': '../../node_modules/axios/lib/adapters/xhr.js',
        process: '../../node_modules/process/browser.js'
      }
    ],
    '../../node_modules/axios/lib/core/dispatchRequest.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');
        var transformData = require('./transformData');
        var isCancel = require('../cancel/isCancel');
        var defaults = require('../defaults');

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        function throwIfCancellationRequested(config) {
          if (config.cancelToken) {
            config.cancelToken.throwIfRequested();
          }
        }

        /**
         * Dispatch a request to the server using the configured adapter.
         *
         * @param {object} config The config that is to be used for the request
         * @returns {Promise} The Promise to be fulfilled
         */
        module.exports = function dispatchRequest(config) {
          throwIfCancellationRequested(config);

          // Ensure headers exist
          config.headers = config.headers || {};

          // Transform request data
          config.data = transformData(
            config.data,
            config.headers,
            config.transformRequest
          );

          // Flatten headers
          config.headers = utils.merge(
            config.headers.common || {},
            config.headers[config.method] || {},
            config.headers
          );

          utils.forEach(
            ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
            function cleanHeaderConfig(method) {
              delete config.headers[method];
            }
          );

          var adapter = config.adapter || defaults.adapter;

          return adapter(config).then(
            function onAdapterResolution(response) {
              throwIfCancellationRequested(config);

              // Transform response data
              response.data = transformData(
                response.data,
                response.headers,
                config.transformResponse
              );

              return response;
            },
            function onAdapterRejection(reason) {
              if (!isCancel(reason)) {
                throwIfCancellationRequested(config);

                // Transform response data
                if (reason && reason.response) {
                  reason.response.data = transformData(
                    reason.response.data,
                    reason.response.headers,
                    config.transformResponse
                  );
                }
              }

              return Promise.reject(reason);
            }
          );
        };
      },
      {
        './../utils': '../../node_modules/axios/lib/utils.js',
        './transformData': '../../node_modules/axios/lib/core/transformData.js',
        '../cancel/isCancel': '../../node_modules/axios/lib/cancel/isCancel.js',
        '../defaults': '../../node_modules/axios/lib/defaults.js'
      }
    ],
    '../../node_modules/axios/lib/core/mergeConfig.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('../utils');

        /**
         * Config-specific merge-function which creates a new config-object
         * by merging two configuration objects together.
         *
         * @param {Object} config1
         * @param {Object} config2
         * @returns {Object} New object resulting from merging config2 to config1
         */
        module.exports = function mergeConfig(config1, config2) {
          // eslint-disable-next-line no-param-reassign
          config2 = config2 || {};
          var config = {};

          var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
          var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
          var defaultToConfig2Keys = [
            'baseURL',
            'url',
            'transformRequest',
            'transformResponse',
            'paramsSerializer',
            'timeout',
            'withCredentials',
            'adapter',
            'responseType',
            'xsrfCookieName',
            'xsrfHeaderName',
            'onUploadProgress',
            'onDownloadProgress',
            'maxContentLength',
            'validateStatus',
            'maxRedirects',
            'httpAgent',
            'httpsAgent',
            'cancelToken',
            'socketPath'
          ];

          utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
            if (typeof config2[prop] !== 'undefined') {
              config[prop] = config2[prop];
            }
          });

          utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(
            prop
          ) {
            if (utils.isObject(config2[prop])) {
              config[prop] = utils.deepMerge(config1[prop], config2[prop]);
            } else if (typeof config2[prop] !== 'undefined') {
              config[prop] = config2[prop];
            } else if (utils.isObject(config1[prop])) {
              config[prop] = utils.deepMerge(config1[prop]);
            } else if (typeof config1[prop] !== 'undefined') {
              config[prop] = config1[prop];
            }
          });

          utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
            if (typeof config2[prop] !== 'undefined') {
              config[prop] = config2[prop];
            } else if (typeof config1[prop] !== 'undefined') {
              config[prop] = config1[prop];
            }
          });

          var axiosKeys = valueFromConfig2Keys
            .concat(mergeDeepPropertiesKeys)
            .concat(defaultToConfig2Keys);

          var otherKeys = Object.keys(config2).filter(function filterAxiosKeys(
            key
          ) {
            return axiosKeys.indexOf(key) === -1;
          });

          utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
            if (typeof config2[prop] !== 'undefined') {
              config[prop] = config2[prop];
            } else if (typeof config1[prop] !== 'undefined') {
              config[prop] = config1[prop];
            }
          });

          return config;
        };
      },
      { '../utils': '../../node_modules/axios/lib/utils.js' }
    ],
    '../../node_modules/axios/lib/core/Axios.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./../utils');
        var buildURL = require('../helpers/buildURL');
        var InterceptorManager = require('./InterceptorManager');
        var dispatchRequest = require('./dispatchRequest');
        var mergeConfig = require('./mergeConfig');

        /**
         * Create a new instance of Axios
         *
         * @param {Object} instanceConfig The default config for the instance
         */
        function Axios(instanceConfig) {
          this.defaults = instanceConfig;
          this.interceptors = {
            request: new InterceptorManager(),
            response: new InterceptorManager()
          };
        }

        /**
         * Dispatch a request
         *
         * @param {Object} config The config specific for this request (merged with this.defaults)
         */
        Axios.prototype.request = function request(config) {
          /*eslint no-param-reassign:0*/
          // Allow for axios('example/url'[, config]) a la fetch API
          if (typeof config === 'string') {
            config = arguments[1] || {};
            config.url = arguments[0];
          } else {
            config = config || {};
          }

          config = mergeConfig(this.defaults, config);

          // Set config.method
          if (config.method) {
            config.method = config.method.toLowerCase();
          } else if (this.defaults.method) {
            config.method = this.defaults.method.toLowerCase();
          } else {
            config.method = 'get';
          }

          // Hook up interceptors middleware
          var chain = [dispatchRequest, undefined];
          var promise = Promise.resolve(config);

          this.interceptors.request.forEach(function unshiftRequestInterceptors(
            interceptor
          ) {
            chain.unshift(interceptor.fulfilled, interceptor.rejected);
          });

          this.interceptors.response.forEach(function pushResponseInterceptors(
            interceptor
          ) {
            chain.push(interceptor.fulfilled, interceptor.rejected);
          });

          while (chain.length) {
            promise = promise.then(chain.shift(), chain.shift());
          }

          return promise;
        };

        Axios.prototype.getUri = function getUri(config) {
          config = mergeConfig(this.defaults, config);
          return buildURL(
            config.url,
            config.params,
            config.paramsSerializer
          ).replace(/^\?/, '');
        };

        // Provide aliases for supported request methods
        utils.forEach(
          ['delete', 'get', 'head', 'options'],
          function forEachMethodNoData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function(url, config) {
              return this.request(
                utils.merge(config || {}, {
                  method: method,
                  url: url
                })
              );
            };
          }
        );

        utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(
          method
        ) {
          /*eslint func-names:0*/
          Axios.prototype[method] = function(url, data, config) {
            return this.request(
              utils.merge(config || {}, {
                method: method,
                url: url,
                data: data
              })
            );
          };
        });

        module.exports = Axios;
      },
      {
        './../utils': '../../node_modules/axios/lib/utils.js',
        '../helpers/buildURL':
          '../../node_modules/axios/lib/helpers/buildURL.js',
        './InterceptorManager':
          '../../node_modules/axios/lib/core/InterceptorManager.js',
        './dispatchRequest':
          '../../node_modules/axios/lib/core/dispatchRequest.js',
        './mergeConfig': '../../node_modules/axios/lib/core/mergeConfig.js'
      }
    ],
    '../../node_modules/axios/lib/cancel/Cancel.js': [
      function(require, module, exports) {
        'use strict';

        /**
         * A `Cancel` is an object that is thrown when an operation is canceled.
         *
         * @class
         * @param {string=} message The message.
         */
        function Cancel(message) {
          this.message = message;
        }

        Cancel.prototype.toString = function toString() {
          return 'Cancel' + (this.message ? ': ' + this.message : '');
        };

        Cancel.prototype.__CANCEL__ = true;

        module.exports = Cancel;
      },
      {}
    ],
    '../../node_modules/axios/lib/cancel/CancelToken.js': [
      function(require, module, exports) {
        'use strict';

        var Cancel = require('./Cancel');

        /**
         * A `CancelToken` is an object that can be used to request cancellation of an operation.
         *
         * @class
         * @param {Function} executor The executor function.
         */
        function CancelToken(executor) {
          if (typeof executor !== 'function') {
            throw new TypeError('executor must be a function.');
          }

          var resolvePromise;
          this.promise = new Promise(function promiseExecutor(resolve) {
            resolvePromise = resolve;
          });

          var token = this;
          executor(function cancel(message) {
            if (token.reason) {
              // Cancellation has already been requested
              return;
            }

            token.reason = new Cancel(message);
            resolvePromise(token.reason);
          });
        }

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        CancelToken.prototype.throwIfRequested = function throwIfRequested() {
          if (this.reason) {
            throw this.reason;
          }
        };

        /**
         * Returns an object that contains a new `CancelToken` and a function that, when called,
         * cancels the `CancelToken`.
         */
        CancelToken.source = function source() {
          var cancel;
          var token = new CancelToken(function executor(c) {
            cancel = c;
          });
          return {
            token: token,
            cancel: cancel
          };
        };

        module.exports = CancelToken;
      },
      { './Cancel': '../../node_modules/axios/lib/cancel/Cancel.js' }
    ],
    '../../node_modules/axios/lib/helpers/spread.js': [
      function(require, module, exports) {
        'use strict';

        /**
         * Syntactic sugar for invoking a function and expanding an array for arguments.
         *
         * Common use case would be to use `Function.prototype.apply`.
         *
         *  ```js
         *  function f(x, y, z) {}
         *  var args = [1, 2, 3];
         *  f.apply(null, args);
         *  ```
         *
         * With `spread` this example can be re-written.
         *
         *  ```js
         *  spread(function(x, y, z) {})([1, 2, 3]);
         *  ```
         *
         * @param {Function} callback
         * @returns {Function}
         */
        module.exports = function spread(callback) {
          return function wrap(arr) {
            return callback.apply(null, arr);
          };
        };
      },
      {}
    ],
    '../../node_modules/axios/lib/axios.js': [
      function(require, module, exports) {
        'use strict';

        var utils = require('./utils');
        var bind = require('./helpers/bind');
        var Axios = require('./core/Axios');
        var mergeConfig = require('./core/mergeConfig');
        var defaults = require('./defaults');

        /**
         * Create an instance of Axios
         *
         * @param {Object} defaultConfig The default config for the instance
         * @return {Axios} A new instance of Axios
         */
        function createInstance(defaultConfig) {
          var context = new Axios(defaultConfig);
          var instance = bind(Axios.prototype.request, context);

          // Copy axios.prototype to instance
          utils.extend(instance, Axios.prototype, context);

          // Copy context to instance
          utils.extend(instance, context);

          return instance;
        }

        // Create the default instance to be exported
        var axios = createInstance(defaults);

        // Expose Axios class to allow class inheritance
        axios.Axios = Axios;

        // Factory for creating new instances
        axios.create = function create(instanceConfig) {
          return createInstance(mergeConfig(axios.defaults, instanceConfig));
        };

        // Expose Cancel & CancelToken
        axios.Cancel = require('./cancel/Cancel');
        axios.CancelToken = require('./cancel/CancelToken');
        axios.isCancel = require('./cancel/isCancel');

        // Expose all/spread
        axios.all = function all(promises) {
          return Promise.all(promises);
        };
        axios.spread = require('./helpers/spread');

        module.exports = axios;

        // Allow use of default import syntax in TypeScript
        module.exports.default = axios;
      },
      {
        './utils': '../../node_modules/axios/lib/utils.js',
        './helpers/bind': '../../node_modules/axios/lib/helpers/bind.js',
        './core/Axios': '../../node_modules/axios/lib/core/Axios.js',
        './core/mergeConfig':
          '../../node_modules/axios/lib/core/mergeConfig.js',
        './defaults': '../../node_modules/axios/lib/defaults.js',
        './cancel/Cancel': '../../node_modules/axios/lib/cancel/Cancel.js',
        './cancel/CancelToken':
          '../../node_modules/axios/lib/cancel/CancelToken.js',
        './cancel/isCancel': '../../node_modules/axios/lib/cancel/isCancel.js',
        './helpers/spread': '../../node_modules/axios/lib/helpers/spread.js'
      }
    ],
    '../../node_modules/axios/index.js': [
      function(require, module, exports) {
        module.exports = require('./lib/axios');
      },
      { './lib/axios': '../../node_modules/axios/lib/axios.js' }
    ],
    'alert.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.showConfirm = exports.showAlert = exports.hideAlert = void 0;

        var hideAlert = function hideAlert() {
          var cls =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : '.alert';
          var el = document.querySelector(''.concat(cls));
          if (el) el.parentElement.removeChild(el);
        };

        exports.hideAlert = hideAlert;

        var showAlert = function showAlert(type, msg) {
          hideAlert();
          var iconRefs = {
            success: 'checkmark',
            failed: 'cancel',
            warning: 'notice'
          };
          var markup = '\n    <div class="alert alert--'
            .concat(
              type,
              '">\n        <svg class="alert__icon">\n            <use xlink:href="/img/sprite.svg#icon-'
            )
            .concat(
              iconRefs[type],
              '"></use>\n        </svg>\n        <p class="alert__message">'
            )
            .concat(msg, '</p>\n    </div>');
          document
            .querySelector('.container')
            .insertAdjacentHTML('afterbegin', markup);
          window.setTimeout(hideAlert, 10000);
        };

        exports.showAlert = showAlert;

        var showConfirm = function showConfirm(msg, callback) {
          var markup = '\n    <div class="confirm__container">\n        <div class="confirm__box">\n            <span class="confirm__close">&times;</span>\n            <p class="confirm__message">'.concat(
            msg,
            '</p>\n            <div class="confirm__actions">\n                <button class="btn confirm__btn--left btn--small btn__font--default btn-black" id="no-confirm">No</button>\n                <button class="btn confirm__btn--right btn--smll btn__font--default btn-primary" id="yes-confirm">Yes</button>\n            </div>\n        </div>\n    </div>\n  '
          );
          var confirmEl = document.createElement('div');
          confirmEl.innerHTML = markup;
          document
            .querySelector('.container')
            .insertAdjacentElement('afterbegin', confirmEl);
          document
            .querySelector('.confirm__container')
            .addEventListener('click', function(e) {
              hideAlert('.confirm__container');
            });
          document
            .querySelector('.confirm__box')
            .addEventListener('click', function(e) {
              e.stopPropagation();
              console.log('cool');
            });
          document
            .querySelector('.confirm__btn--left')
            .addEventListener('click', function(e) {
              e.stopPropagation();
              hideAlert('.confirm__container');
            });
          document
            .querySelector('.confirm__close')
            .addEventListener('click', function(e) {
              e.stopPropagation();
              hideAlert('.confirm__container');
            });
          document
            .querySelector('.confirm__btn--right')
            .addEventListener('click', function(e) {
              e.stopPropagation();
              callback();
            });
        };

        exports.showConfirm = showConfirm;
      },
      {}
    ],
    'loader.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.showLoader = exports.hideLoader = void 0;

        var hideLoader = function hideLoader() {
          var el = document.querySelector('.loader');
          if (el) el.parentElement.removeChild(el);
        };

        exports.hideLoader = hideLoader;

        var showLoader = function showLoader() {
          hideLoader();
          var markup =
            '\n    <div class="loader">\n        <div class="lds-roller">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n     </div>';
          document
            .querySelector('.container')
            .insertAdjacentHTML('afterbegin', markup);
        };

        exports.showLoader = showLoader;
      },
      {}
    ],
    'login.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.logout = exports.login = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var login = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(
              email,
              password
            ) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'POST',
                          url: 'http://127.0.0.1:3000/api/v1/users/signin',
                          data: {
                            email: email,
                            password: password
                          }
                        });

                      case 4:
                        res = _context.sent;
                        (0, _loader.hideLoader)();

                        if (res.data.status === 'success') {
                          (0, _alert.showAlert)(
                            'success',
                            'Logged in successfully'
                          );
                          window.setTimeout(function() {
                            location.assign('/');
                          }, 1500);
                        }

                        _context.next = 13;
                        break;

                      case 9:
                        _context.prev = 9;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 13:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 9]]
              );
            })
          );

          return function login(_x, _x2) {
            return _ref.apply(this, arguments);
          };
        })();

        exports.login = login;

        var logout = /*#__PURE__*/ (function() {
          var _ref2 = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
              var res;
              return regeneratorRuntime.wrap(
                function _callee2$(_context2) {
                  while (1) {
                    switch ((_context2.prev = _context2.next)) {
                      case 0:
                        _context2.prev = 0;
                        (0, _loader.showLoader)();
                        _context2.next = 4;
                        return (0, _axios.default)({
                          method: 'GET',
                          url: 'http://127.0.0.1:3000/api/v1/users/signout'
                        });

                      case 4:
                        res = _context2.sent;
                        if (res.data.status === 'success')
                          location.assign('/login');
                        _context2.next = 11;
                        break;

                      case 8:
                        _context2.prev = 8;
                        _context2.t0 = _context2['catch'](0);
                        (0, _alert.showAlert)(
                          'failed',
                          'Error logging out. Please try again!'
                        );

                      case 11:
                      case 'end':
                        return _context2.stop();
                    }
                  }
                },
                _callee2,
                null,
                [[0, 8]]
              );
            })
          );

          return function logout() {
            return _ref2.apply(this, arguments);
          };
        })();

        exports.logout = logout;
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'signup.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.signup = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var signup = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(
              name,
              email,
              password,
              passwordConfirm
            ) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'POST',
                          url: 'http://127.0.0.1:3000/api/v1/users/signup',
                          data: {
                            name: name,
                            email: email,
                            password: password,
                            passwordConfirm: passwordConfirm
                          }
                        });

                      case 4:
                        res = _context.sent;
                        (0, _loader.hideLoader)();

                        if (res.data.status === 'success') {
                          (0, _alert.showAlert)(
                            'success',
                            'Logged in successfully'
                          );
                          window.setTimeout(function() {
                            location.assign('/');
                          }, 1500);
                        }

                        _context.next = 13;
                        break;

                      case 9:
                        _context.prev = 9;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 13:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 9]]
              );
            })
          );

          return function signup(_x, _x2, _x3, _x4) {
            return _ref.apply(this, arguments);
          };
        })();

        exports.signup = signup;
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'mapbox.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.initializeCreateTopicMap = exports.displayMap = void 0;

        var getPopupHTML = function getPopupHTML(data) {
          var imageTag = data.imageCover
            ? '<img src="/img/'.concat(
                data.imageCover,
                '" alt="" class="sm-card__img">'
              )
            : '';
          return '\n    <div class="sm-card">\n        '
            .concat(
              imageTag,
              '\n        <div class="sm-card__info">\n            <div class="sm-card__main">\n                <a href="/topics/'
            )
            .concat(data.slug, '" class="link-info link-info--normal">')
            .concat(
              data.title,
              '</a>\n            </div>\n            <div class="sm-card__sub">\n                <a href="/?category='
            )
            .concat(
              encodeURIComponent(data.category),
              '#topics" class="sm-card__category sm-card__link link-info link-info--category link-info--category--small">\n                    '
            )
            .concat(
              data.category,
              '\n                 </a>\n                <a href="/?createdAt='
            )
            .concat(
              new Date(data.createdAt).toISOString().split('T')[0],
              '#topics" class="sm-card__link link-info link-info--small link-info--small--sm">\n                    Created on '
            )
            .concat(
              new Date(data.createdAt).toLocaleString('en-us', {
                month: 'long',
                day: 'numeric',
                year: 'numeric'
              }),
              '\n                 </a>\n            </div>\n        </div>\n    </div>'
            );
        };

        var displayMap = function displayMap(mapObj, data) {
          L.tileLayer(
            'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',
            {
              maxZoom: 17,
              id: 'asnelchristian/ckawh4dvvehmi1io10tvsjvtk',
              tileSize: 512,
              zoomOffset: -1,
              accessToken:
                'pk.eyJ1IjoiYXNuZWxjaHJpc3RpYW4iLCJhIjoiY2thd2Z0aXJ1MDdteTJ0bXU5NDU2bHZ4MCJ9.kChV328HGtNtda8XQQc4tA',
              noWrap: true
            }
          ).addTo(mapObj);
          var markers = L.markerClusterGroup({
            polygonOptions: {
              color: '#ba9545'
            }
          });
          data.map(function(d) {
            var markerIcon = L.divIcon({
              className: 'marker marker--default'
            });
            var marker = L.marker(d.location.coordinates.reverse(), {
              icon: markerIcon
            }).bindPopup(getPopupHTML(d));
            markers.addLayer(marker);
          });
          mapObj.addLayer(markers);
        };

        exports.displayMap = displayMap;

        var initializeCreateTopicMap = function initializeCreateTopicMap(
          topicMap
        ) {
          var popup = L.popup({
            closeOnClick: false
          }).setContent("Topic's location");
          var markerIcon = L.divIcon({
            className: 'marker marker--default'
          });
          var marker = L.marker([0, 0], {
            icon: markerIcon
          })
            .bindPopup(popup)
            .addTo(topicMap)
            .openPopup();
          topicMap.on('click', function(e) {
            popup.setContent('Pick this location');
            marker.setLatLng(new L.LatLng(e.latlng.lat, e.latlng.lng));
          });
          return marker;
        };

        exports.initializeCreateTopicMap = initializeCreateTopicMap;
      },
      {}
    ],
    '../../node_modules/choices.js/public/assets/scripts/choices.js': [
      function(require, module, exports) {
        var define;
        var global = arguments[3];
        /*! choices.js v9.0.1 | © 2019 Josh Johnson | https://github.com/jshjohnson/Choices#readme */
        (function webpackUniversalModuleDefinition(root, factory) {
          if (typeof exports === 'object' && typeof module === 'object')
            module.exports = factory();
          else if (typeof define === 'function' && define.amd)
            define([], factory);
          else if (typeof exports === 'object') exports['Choices'] = factory();
          else root['Choices'] = factory();
        })(window, function() {
          return /******/ (function(modules) {
            // webpackBootstrap
            /******/ // The module cache
            /******/ var installedModules = {}; // The require function
            /******/
            /******/ /******/ function __webpack_require__(moduleId) {
              /******/
              /******/ // Check if module is in cache
              /******/ if (installedModules[moduleId]) {
                /******/ return installedModules[moduleId].exports;
                /******/
              } // Create a new module (and put it into the cache)
              /******/ /******/ var module = (installedModules[moduleId] = {
                /******/ i: moduleId,
                /******/ l: false,
                /******/ exports: {}
                /******/
              }); // Execute the module function
              /******/
              /******/ /******/ modules[moduleId].call(
                module.exports,
                module,
                module.exports,
                __webpack_require__
              ); // Flag the module as loaded
              /******/
              /******/ /******/ module.l = true; // Return the exports of the module
              /******/
              /******/ /******/ return module.exports;
              /******/
            } // expose the modules object (__webpack_modules__)
            /******/
            /******/
            /******/ /******/ __webpack_require__.m = modules; // expose the module cache
            /******/
            /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
            /******/
            /******/ /******/ __webpack_require__.d = function(
              exports,
              name,
              getter
            ) {
              /******/ if (!__webpack_require__.o(exports, name)) {
                /******/ Object.defineProperty(exports, name, {
                  enumerable: true,
                  get: getter
                });
                /******/
              }
              /******/
            }; // define __esModule on exports
            /******/
            /******/ /******/ __webpack_require__.r = function(exports) {
              /******/ if (
                typeof Symbol !== 'undefined' &&
                Symbol.toStringTag
              ) {
                /******/ Object.defineProperty(exports, Symbol.toStringTag, {
                  value: 'Module'
                });
                /******/
              }
              /******/ Object.defineProperty(exports, '__esModule', {
                value: true
              });
              /******/
            }; // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
            /******/
            /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function(
              value,
              mode
            ) {
              /******/ if (mode & 1) value = __webpack_require__(value);
              /******/ if (mode & 8) return value;
              /******/ if (
                mode & 4 &&
                typeof value === 'object' &&
                value &&
                value.__esModule
              )
                return value;
              /******/ var ns = Object.create(null);
              /******/ __webpack_require__.r(ns);
              /******/ Object.defineProperty(ns, 'default', {
                enumerable: true,
                value: value
              });
              /******/ if (mode & 2 && typeof value != 'string')
                for (var key in value)
                  __webpack_require__.d(
                    ns,
                    key,
                    function(key) {
                      return value[key];
                    }.bind(null, key)
                  );
              /******/ return ns;
              /******/
            }; // getDefaultExport function for compatibility with non-harmony modules
            /******/
            /******/ /******/ __webpack_require__.n = function(module) {
              /******/ var getter =
                module && module.__esModule
                  ? /******/ function getDefault() {
                      return module['default'];
                    }
                  : /******/ function getModuleExports() {
                      return module;
                    };
              /******/ __webpack_require__.d(getter, 'a', getter);
              /******/ return getter;
              /******/
            }; // Object.prototype.hasOwnProperty.call
            /******/
            /******/ /******/ __webpack_require__.o = function(
              object,
              property
            ) {
              return Object.prototype.hasOwnProperty.call(object, property);
            }; // __webpack_public_path__
            /******/
            /******/ /******/ __webpack_require__.p = '/public/assets/scripts/'; // Load entry module and return exports
            /******/
            /******/
            /******/ /******/ return __webpack_require__(
              (__webpack_require__.s = 4)
            );
            /******/
          })(
            /************************************************************************/
            /******/ [
              /* 0 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var isMergeableObject = function isMergeableObject(value) {
                  return isNonNullObject(value) && !isSpecial(value);
                };

                function isNonNullObject(value) {
                  return !!value && typeof value === 'object';
                }

                function isSpecial(value) {
                  var stringValue = Object.prototype.toString.call(value);

                  return (
                    stringValue === '[object RegExp]' ||
                    stringValue === '[object Date]' ||
                    isReactElement(value)
                  );
                }

                // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
                var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
                var REACT_ELEMENT_TYPE = canUseSymbol
                  ? Symbol.for('react.element')
                  : 0xeac7;

                function isReactElement(value) {
                  return value.$$typeof === REACT_ELEMENT_TYPE;
                }

                function emptyTarget(val) {
                  return Array.isArray(val) ? [] : {};
                }

                function cloneUnlessOtherwiseSpecified(value, options) {
                  return options.clone !== false &&
                    options.isMergeableObject(value)
                    ? deepmerge(emptyTarget(value), value, options)
                    : value;
                }

                function defaultArrayMerge(target, source, options) {
                  return target.concat(source).map(function(element) {
                    return cloneUnlessOtherwiseSpecified(element, options);
                  });
                }

                function getMergeFunction(key, options) {
                  if (!options.customMerge) {
                    return deepmerge;
                  }
                  var customMerge = options.customMerge(key);
                  return typeof customMerge === 'function'
                    ? customMerge
                    : deepmerge;
                }

                function getEnumerableOwnPropertySymbols(target) {
                  return Object.getOwnPropertySymbols
                    ? Object.getOwnPropertySymbols(target).filter(function(
                        symbol
                      ) {
                        return target.propertyIsEnumerable(symbol);
                      })
                    : [];
                }

                function getKeys(target) {
                  return Object.keys(target).concat(
                    getEnumerableOwnPropertySymbols(target)
                  );
                }

                // Protects from prototype poisoning and unexpected merging up the prototype chain.
                function propertyIsUnsafe(target, key) {
                  try {
                    return (
                      key in target && // Properties are safe to merge if they don't exist in the target yet,
                      !(
                        Object.hasOwnProperty.call(target, key) && // unsafe if they exist up the prototype chain,
                        Object.propertyIsEnumerable.call(target, key)
                      )
                    ); // and also unsafe if they're nonenumerable.
                  } catch (unused) {
                    // Counterintuitively, it's safe to merge any property on a target that causes the `in` operator to throw.
                    // This happens when trying to copy an object in the source over a plain string in the target.
                    return false;
                  }
                }

                function mergeObject(target, source, options) {
                  var destination = {};
                  if (options.isMergeableObject(target)) {
                    getKeys(target).forEach(function(key) {
                      destination[key] = cloneUnlessOtherwiseSpecified(
                        target[key],
                        options
                      );
                    });
                  }
                  getKeys(source).forEach(function(key) {
                    if (propertyIsUnsafe(target, key)) {
                      return;
                    }

                    if (
                      !options.isMergeableObject(source[key]) ||
                      !target[key]
                    ) {
                      destination[key] = cloneUnlessOtherwiseSpecified(
                        source[key],
                        options
                      );
                    } else {
                      destination[key] = getMergeFunction(key, options)(
                        target[key],
                        source[key],
                        options
                      );
                    }
                  });
                  return destination;
                }

                function deepmerge(target, source, options) {
                  options = options || {};
                  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
                  options.isMergeableObject =
                    options.isMergeableObject || isMergeableObject;
                  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
                  // implementations can use it. The caller may not replace it.
                  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

                  var sourceIsArray = Array.isArray(source);
                  var targetIsArray = Array.isArray(target);
                  var sourceAndTargetTypesMatch =
                    sourceIsArray === targetIsArray;

                  if (!sourceAndTargetTypesMatch) {
                    return cloneUnlessOtherwiseSpecified(source, options);
                  } else if (sourceIsArray) {
                    return options.arrayMerge(target, source, options);
                  } else {
                    return mergeObject(target, source, options);
                  }
                }

                deepmerge.all = function deepmergeAll(array, options) {
                  if (!Array.isArray(array)) {
                    throw new Error('first argument should be an array');
                  }

                  return array.reduce(function(prev, next) {
                    return deepmerge(prev, next, options);
                  }, {});
                };

                var deepmerge_1 = deepmerge;

                module.exports = deepmerge_1;

                /***/
              },
              /* 1 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                'use strict';
                /* WEBPACK VAR INJECTION */ (function(global, module) {
                  /* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                    3
                  );
                  /* global window */

                  var root;

                  if (typeof self !== 'undefined') {
                    root = self;
                  } else if (typeof window !== 'undefined') {
                    root = window;
                  } else if (typeof global !== 'undefined') {
                    root = global;
                  } else if (true) {
                    root = module;
                  } else {
                  }

                  var result = Object(
                    _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ 'a']
                  )(root);
                  /* harmony default export */ __webpack_exports__[
                    'a'
                  ] = result;

                  /* WEBPACK VAR INJECTION */
                }.call(
                  this,
                  __webpack_require__(5),
                  __webpack_require__(6)(module)
                ));

                /***/
              },
              /* 2 */
              /***/ function(module, exports, __webpack_require__) {
                /*!
                 * Fuse.js v3.4.5 - Lightweight fuzzy-search (http://fusejs.io)
                 *
                 * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)
                 * All Rights Reserved. Apache Software License 2.0
                 *
                 * http://www.apache.org/licenses/LICENSE-2.0
                 */
                !(function(e, t) {
                  true ? (module.exports = t()) : undefined;
                })(this, function() {
                  return (function(e) {
                    var t = {};
                    function n(r) {
                      if (t[r]) return t[r].exports;
                      var o = (t[r] = { i: r, l: !1, exports: {} });
                      return (
                        e[r].call(o.exports, o, o.exports, n),
                        (o.l = !0),
                        o.exports
                      );
                    }
                    return (
                      (n.m = e),
                      (n.c = t),
                      (n.d = function(e, t, r) {
                        n.o(e, t) ||
                          Object.defineProperty(e, t, {
                            enumerable: !0,
                            get: r
                          });
                      }),
                      (n.r = function(e) {
                        'undefined' != typeof Symbol &&
                          Symbol.toStringTag &&
                          Object.defineProperty(e, Symbol.toStringTag, {
                            value: 'Module'
                          }),
                          Object.defineProperty(e, '__esModule', { value: !0 });
                      }),
                      (n.t = function(e, t) {
                        if ((1 & t && (e = n(e)), 8 & t)) return e;
                        if (4 & t && 'object' == typeof e && e && e.__esModule)
                          return e;
                        var r = Object.create(null);
                        if (
                          (n.r(r),
                          Object.defineProperty(r, 'default', {
                            enumerable: !0,
                            value: e
                          }),
                          2 & t && 'string' != typeof e)
                        )
                          for (var o in e)
                            n.d(
                              r,
                              o,
                              function(t) {
                                return e[t];
                              }.bind(null, o)
                            );
                        return r;
                      }),
                      (n.n = function(e) {
                        var t =
                          e && e.__esModule
                            ? function() {
                                return e.default;
                              }
                            : function() {
                                return e;
                              };
                        return n.d(t, 'a', t), t;
                      }),
                      (n.o = function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                      }),
                      (n.p = ''),
                      n((n.s = 1))
                    );
                  })([
                    function(e, t) {
                      e.exports = function(e) {
                        return Array.isArray
                          ? Array.isArray(e)
                          : '[object Array]' ===
                              Object.prototype.toString.call(e);
                      };
                    },
                    function(e, t, n) {
                      function r(e) {
                        return (r =
                          'function' == typeof Symbol &&
                          'symbol' == typeof Symbol.iterator
                            ? function(e) {
                                return typeof e;
                              }
                            : function(e) {
                                return e &&
                                  'function' == typeof Symbol &&
                                  e.constructor === Symbol &&
                                  e !== Symbol.prototype
                                  ? 'symbol'
                                  : typeof e;
                              })(e);
                      }
                      function o(e, t) {
                        for (var n = 0; n < t.length; n++) {
                          var r = t[n];
                          (r.enumerable = r.enumerable || !1),
                            (r.configurable = !0),
                            'value' in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r);
                        }
                      }
                      var i = n(2),
                        a = n(8),
                        s = n(0),
                        c = (function() {
                          function e(t, n) {
                            var r = n.location,
                              o = void 0 === r ? 0 : r,
                              i = n.distance,
                              s = void 0 === i ? 100 : i,
                              c = n.threshold,
                              h = void 0 === c ? 0.6 : c,
                              l = n.maxPatternLength,
                              u = void 0 === l ? 32 : l,
                              f = n.caseSensitive,
                              d = void 0 !== f && f,
                              v = n.tokenSeparator,
                              p = void 0 === v ? / +/g : v,
                              g = n.findAllMatches,
                              y = void 0 !== g && g,
                              m = n.minMatchCharLength,
                              k = void 0 === m ? 1 : m,
                              S = n.id,
                              x = void 0 === S ? null : S,
                              b = n.keys,
                              M = void 0 === b ? [] : b,
                              _ = n.shouldSort,
                              L = void 0 === _ || _,
                              w = n.getFn,
                              A = void 0 === w ? a : w,
                              C = n.sortFn,
                              I =
                                void 0 === C
                                  ? function(e, t) {
                                      return e.score - t.score;
                                    }
                                  : C,
                              O = n.tokenize,
                              j = void 0 !== O && O,
                              P = n.matchAllTokens,
                              F = void 0 !== P && P,
                              T = n.includeMatches,
                              z = void 0 !== T && T,
                              E = n.includeScore,
                              K = void 0 !== E && E,
                              $ = n.verbose,
                              J = void 0 !== $ && $;
                            !(function(e, t) {
                              if (!(e instanceof t))
                                throw new TypeError(
                                  'Cannot call a class as a function'
                                );
                            })(this, e),
                              (this.options = {
                                location: o,
                                distance: s,
                                threshold: h,
                                maxPatternLength: u,
                                isCaseSensitive: d,
                                tokenSeparator: p,
                                findAllMatches: y,
                                minMatchCharLength: k,
                                id: x,
                                keys: M,
                                includeMatches: z,
                                includeScore: K,
                                shouldSort: L,
                                getFn: A,
                                sortFn: I,
                                verbose: J,
                                tokenize: j,
                                matchAllTokens: F
                              }),
                              this.setCollection(t);
                          }
                          var t, n, c;
                          return (
                            (t = e),
                            (n = [
                              {
                                key: 'setCollection',
                                value: function(e) {
                                  return (this.list = e), e;
                                }
                              },
                              {
                                key: 'search',
                                value: function(e) {
                                  var t =
                                    arguments.length > 1 &&
                                    void 0 !== arguments[1]
                                      ? arguments[1]
                                      : { limit: !1 };
                                  this._log(
                                    '---------\nSearch pattern: "'.concat(
                                      e,
                                      '"'
                                    )
                                  );
                                  var n = this._prepareSearchers(e),
                                    r = n.tokenSearchers,
                                    o = n.fullSearcher,
                                    i = this._search(r, o),
                                    a = i.weights,
                                    s = i.results;
                                  return (
                                    this._computeScore(a, s),
                                    this.options.shouldSort && this._sort(s),
                                    t.limit &&
                                      'number' == typeof t.limit &&
                                      (s = s.slice(0, t.limit)),
                                    this._format(s)
                                  );
                                }
                              },
                              {
                                key: '_prepareSearchers',
                                value: function() {
                                  var e =
                                      arguments.length > 0 &&
                                      void 0 !== arguments[0]
                                        ? arguments[0]
                                        : '',
                                    t = [];
                                  if (this.options.tokenize)
                                    for (
                                      var n = e.split(
                                          this.options.tokenSeparator
                                        ),
                                        r = 0,
                                        o = n.length;
                                      r < o;
                                      r += 1
                                    )
                                      t.push(new i(n[r], this.options));
                                  return {
                                    tokenSearchers: t,
                                    fullSearcher: new i(e, this.options)
                                  };
                                }
                              },
                              {
                                key: '_search',
                                value: function() {
                                  var e =
                                      arguments.length > 0 &&
                                      void 0 !== arguments[0]
                                        ? arguments[0]
                                        : [],
                                    t =
                                      arguments.length > 1
                                        ? arguments[1]
                                        : void 0,
                                    n = this.list,
                                    r = {},
                                    o = [];
                                  if ('string' == typeof n[0]) {
                                    for (var i = 0, a = n.length; i < a; i += 1)
                                      this._analyze(
                                        {
                                          key: '',
                                          value: n[i],
                                          record: i,
                                          index: i
                                        },
                                        {
                                          resultMap: r,
                                          results: o,
                                          tokenSearchers: e,
                                          fullSearcher: t
                                        }
                                      );
                                    return { weights: null, results: o };
                                  }
                                  for (
                                    var s = {}, c = 0, h = n.length;
                                    c < h;
                                    c += 1
                                  )
                                    for (
                                      var l = n[c],
                                        u = 0,
                                        f = this.options.keys.length;
                                      u < f;
                                      u += 1
                                    ) {
                                      var d = this.options.keys[u];
                                      if ('string' != typeof d) {
                                        if (
                                          ((s[d.name] = {
                                            weight: 1 - d.weight || 1
                                          }),
                                          d.weight <= 0 || d.weight > 1)
                                        )
                                          throw new Error(
                                            'Key weight has to be > 0 and <= 1'
                                          );
                                        d = d.name;
                                      } else s[d] = { weight: 1 };
                                      this._analyze(
                                        {
                                          key: d,
                                          value: this.options.getFn(l, d),
                                          record: l,
                                          index: c
                                        },
                                        {
                                          resultMap: r,
                                          results: o,
                                          tokenSearchers: e,
                                          fullSearcher: t
                                        }
                                      );
                                    }
                                  return { weights: s, results: o };
                                }
                              },
                              {
                                key: '_analyze',
                                value: function(e, t) {
                                  var n = e.key,
                                    r = e.arrayIndex,
                                    o = void 0 === r ? -1 : r,
                                    i = e.value,
                                    a = e.record,
                                    c = e.index,
                                    h = t.tokenSearchers,
                                    l = void 0 === h ? [] : h,
                                    u = t.fullSearcher,
                                    f = void 0 === u ? [] : u,
                                    d = t.resultMap,
                                    v = void 0 === d ? {} : d,
                                    p = t.results,
                                    g = void 0 === p ? [] : p;
                                  if (null != i) {
                                    var y = !1,
                                      m = -1,
                                      k = 0;
                                    if ('string' == typeof i) {
                                      this._log(
                                        '\nKey: '.concat('' === n ? '-' : n)
                                      );
                                      var S = f.search(i);
                                      if (
                                        (this._log(
                                          'Full text: "'
                                            .concat(i, '", score: ')
                                            .concat(S.score)
                                        ),
                                        this.options.tokenize)
                                      ) {
                                        for (
                                          var x = i.split(
                                              this.options.tokenSeparator
                                            ),
                                            b = [],
                                            M = 0;
                                          M < l.length;
                                          M += 1
                                        ) {
                                          var _ = l[M];
                                          this._log(
                                            '\nPattern: "'.concat(
                                              _.pattern,
                                              '"'
                                            )
                                          );
                                          for (
                                            var L = !1, w = 0;
                                            w < x.length;
                                            w += 1
                                          ) {
                                            var A = x[w],
                                              C = _.search(A),
                                              I = {};
                                            C.isMatch
                                              ? ((I[A] = C.score),
                                                (y = !0),
                                                (L = !0),
                                                b.push(C.score))
                                              : ((I[A] = 1),
                                                this.options.matchAllTokens ||
                                                  b.push(1)),
                                              this._log(
                                                'Token: "'
                                                  .concat(A, '", score: ')
                                                  .concat(I[A])
                                              );
                                          }
                                          L && (k += 1);
                                        }
                                        m = b[0];
                                        for (
                                          var O = b.length, j = 1;
                                          j < O;
                                          j += 1
                                        )
                                          m += b[j];
                                        (m /= O),
                                          this._log('Token score average:', m);
                                      }
                                      var P = S.score;
                                      m > -1 && (P = (P + m) / 2),
                                        this._log('Score average:', P);
                                      var F =
                                        !this.options.tokenize ||
                                        !this.options.matchAllTokens ||
                                        k >= l.length;
                                      if (
                                        (this._log(
                                          '\nCheck Matches: '.concat(F)
                                        ),
                                        (y || S.isMatch) && F)
                                      ) {
                                        var T = v[c];
                                        T
                                          ? T.output.push({
                                              key: n,
                                              arrayIndex: o,
                                              value: i,
                                              score: P,
                                              matchedIndices: S.matchedIndices
                                            })
                                          : ((v[c] = {
                                              item: a,
                                              output: [
                                                {
                                                  key: n,
                                                  arrayIndex: o,
                                                  value: i,
                                                  score: P,
                                                  matchedIndices:
                                                    S.matchedIndices
                                                }
                                              ]
                                            }),
                                            g.push(v[c]));
                                      }
                                    } else if (s(i))
                                      for (
                                        var z = 0, E = i.length;
                                        z < E;
                                        z += 1
                                      )
                                        this._analyze(
                                          {
                                            key: n,
                                            arrayIndex: z,
                                            value: i[z],
                                            record: a,
                                            index: c
                                          },
                                          {
                                            resultMap: v,
                                            results: g,
                                            tokenSearchers: l,
                                            fullSearcher: f
                                          }
                                        );
                                  }
                                }
                              },
                              {
                                key: '_computeScore',
                                value: function(e, t) {
                                  this._log('\n\nComputing score:\n');
                                  for (var n = 0, r = t.length; n < r; n += 1) {
                                    for (
                                      var o = t[n].output,
                                        i = o.length,
                                        a = 1,
                                        s = 1,
                                        c = 0;
                                      c < i;
                                      c += 1
                                    ) {
                                      var h = e ? e[o[c].key].weight : 1,
                                        l =
                                          (1 === h
                                            ? o[c].score
                                            : o[c].score || 0.001) * h;
                                      1 !== h
                                        ? (s = Math.min(s, l))
                                        : ((o[c].nScore = l), (a *= l));
                                    }
                                    (t[n].score = 1 === s ? a : s),
                                      this._log(t[n]);
                                  }
                                }
                              },
                              {
                                key: '_sort',
                                value: function(e) {
                                  this._log('\n\nSorting....'),
                                    e.sort(this.options.sortFn);
                                }
                              },
                              {
                                key: '_format',
                                value: function(e) {
                                  var t = [];
                                  if (this.options.verbose) {
                                    var n = [];
                                    this._log(
                                      '\n\nOutput:\n\n',
                                      JSON.stringify(e, function(e, t) {
                                        if ('object' === r(t) && null !== t) {
                                          if (-1 !== n.indexOf(t)) return;
                                          n.push(t);
                                        }
                                        return t;
                                      })
                                    ),
                                      (n = null);
                                  }
                                  var o = [];
                                  this.options.includeMatches &&
                                    o.push(function(e, t) {
                                      var n = e.output;
                                      t.matches = [];
                                      for (
                                        var r = 0, o = n.length;
                                        r < o;
                                        r += 1
                                      ) {
                                        var i = n[r];
                                        if (0 !== i.matchedIndices.length) {
                                          var a = {
                                            indices: i.matchedIndices,
                                            value: i.value
                                          };
                                          i.key && (a.key = i.key),
                                            i.hasOwnProperty('arrayIndex') &&
                                              i.arrayIndex > -1 &&
                                              (a.arrayIndex = i.arrayIndex),
                                            t.matches.push(a);
                                        }
                                      }
                                    }),
                                    this.options.includeScore &&
                                      o.push(function(e, t) {
                                        t.score = e.score;
                                      });
                                  for (var i = 0, a = e.length; i < a; i += 1) {
                                    var s = e[i];
                                    if (
                                      (this.options.id &&
                                        (s.item = this.options.getFn(
                                          s.item,
                                          this.options.id
                                        )[0]),
                                      o.length)
                                    ) {
                                      for (
                                        var c = { item: s.item },
                                          h = 0,
                                          l = o.length;
                                        h < l;
                                        h += 1
                                      )
                                        o[h](s, c);
                                      t.push(c);
                                    } else t.push(s.item);
                                  }
                                  return t;
                                }
                              },
                              {
                                key: '_log',
                                value: function() {
                                  var e;
                                  this.options.verbose &&
                                    (e = console).log.apply(e, arguments);
                                }
                              }
                            ]) && o(t.prototype, n),
                            c && o(t, c),
                            e
                          );
                        })();
                      e.exports = c;
                    },
                    function(e, t, n) {
                      function r(e, t) {
                        for (var n = 0; n < t.length; n++) {
                          var r = t[n];
                          (r.enumerable = r.enumerable || !1),
                            (r.configurable = !0),
                            'value' in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r);
                        }
                      }
                      var o = n(3),
                        i = n(4),
                        a = n(7),
                        s = (function() {
                          function e(t, n) {
                            var r = n.location,
                              o = void 0 === r ? 0 : r,
                              i = n.distance,
                              s = void 0 === i ? 100 : i,
                              c = n.threshold,
                              h = void 0 === c ? 0.6 : c,
                              l = n.maxPatternLength,
                              u = void 0 === l ? 32 : l,
                              f = n.isCaseSensitive,
                              d = void 0 !== f && f,
                              v = n.tokenSeparator,
                              p = void 0 === v ? / +/g : v,
                              g = n.findAllMatches,
                              y = void 0 !== g && g,
                              m = n.minMatchCharLength,
                              k = void 0 === m ? 1 : m;
                            !(function(e, t) {
                              if (!(e instanceof t))
                                throw new TypeError(
                                  'Cannot call a class as a function'
                                );
                            })(this, e),
                              (this.options = {
                                location: o,
                                distance: s,
                                threshold: h,
                                maxPatternLength: u,
                                isCaseSensitive: d,
                                tokenSeparator: p,
                                findAllMatches: y,
                                minMatchCharLength: k
                              }),
                              (this.pattern = this.options.isCaseSensitive
                                ? t
                                : t.toLowerCase()),
                              this.pattern.length <= u &&
                                (this.patternAlphabet = a(this.pattern));
                          }
                          var t, n, s;
                          return (
                            (t = e),
                            (n = [
                              {
                                key: 'search',
                                value: function(e) {
                                  if (
                                    (this.options.isCaseSensitive ||
                                      (e = e.toLowerCase()),
                                    this.pattern === e)
                                  )
                                    return {
                                      isMatch: !0,
                                      score: 0,
                                      matchedIndices: [[0, e.length - 1]]
                                    };
                                  var t = this.options,
                                    n = t.maxPatternLength,
                                    r = t.tokenSeparator;
                                  if (this.pattern.length > n)
                                    return o(e, this.pattern, r);
                                  var a = this.options,
                                    s = a.location,
                                    c = a.distance,
                                    h = a.threshold,
                                    l = a.findAllMatches,
                                    u = a.minMatchCharLength;
                                  return i(
                                    e,
                                    this.pattern,
                                    this.patternAlphabet,
                                    {
                                      location: s,
                                      distance: c,
                                      threshold: h,
                                      findAllMatches: l,
                                      minMatchCharLength: u
                                    }
                                  );
                                }
                              }
                            ]) && r(t.prototype, n),
                            s && r(t, s),
                            e
                          );
                        })();
                      e.exports = s;
                    },
                    function(e, t) {
                      var n = /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g;
                      e.exports = function(e, t) {
                        var r =
                            arguments.length > 2 && void 0 !== arguments[2]
                              ? arguments[2]
                              : / +/g,
                          o = new RegExp(t.replace(n, '\\$&').replace(r, '|')),
                          i = e.match(o),
                          a = !!i,
                          s = [];
                        if (a)
                          for (var c = 0, h = i.length; c < h; c += 1) {
                            var l = i[c];
                            s.push([e.indexOf(l), l.length - 1]);
                          }
                        return {
                          score: a ? 0.5 : 1,
                          isMatch: a,
                          matchedIndices: s
                        };
                      };
                    },
                    function(e, t, n) {
                      var r = n(5),
                        o = n(6);
                      e.exports = function(e, t, n, i) {
                        for (
                          var a = i.location,
                            s = void 0 === a ? 0 : a,
                            c = i.distance,
                            h = void 0 === c ? 100 : c,
                            l = i.threshold,
                            u = void 0 === l ? 0.6 : l,
                            f = i.findAllMatches,
                            d = void 0 !== f && f,
                            v = i.minMatchCharLength,
                            p = void 0 === v ? 1 : v,
                            g = s,
                            y = e.length,
                            m = u,
                            k = e.indexOf(t, g),
                            S = t.length,
                            x = [],
                            b = 0;
                          b < y;
                          b += 1
                        )
                          x[b] = 0;
                        if (-1 !== k) {
                          var M = r(t, {
                            errors: 0,
                            currentLocation: k,
                            expectedLocation: g,
                            distance: h
                          });
                          if (
                            ((m = Math.min(M, m)),
                            -1 !== (k = e.lastIndexOf(t, g + S)))
                          ) {
                            var _ = r(t, {
                              errors: 0,
                              currentLocation: k,
                              expectedLocation: g,
                              distance: h
                            });
                            m = Math.min(_, m);
                          }
                        }
                        k = -1;
                        for (
                          var L = [], w = 1, A = S + y, C = 1 << (S - 1), I = 0;
                          I < S;
                          I += 1
                        ) {
                          for (var O = 0, j = A; O < j; ) {
                            r(t, {
                              errors: I,
                              currentLocation: g + j,
                              expectedLocation: g,
                              distance: h
                            }) <= m
                              ? (O = j)
                              : (A = j),
                              (j = Math.floor((A - O) / 2 + O));
                          }
                          A = j;
                          var P = Math.max(1, g - j + 1),
                            F = d ? y : Math.min(g + j, y) + S,
                            T = Array(F + 2);
                          T[F + 1] = (1 << I) - 1;
                          for (var z = F; z >= P; z -= 1) {
                            var E = z - 1,
                              K = n[e.charAt(E)];
                            if (
                              (K && (x[E] = 1),
                              (T[z] = ((T[z + 1] << 1) | 1) & K),
                              0 !== I &&
                                (T[z] |=
                                  ((L[z + 1] | L[z]) << 1) | 1 | L[z + 1]),
                              T[z] & C &&
                                (w = r(t, {
                                  errors: I,
                                  currentLocation: E,
                                  expectedLocation: g,
                                  distance: h
                                })) <= m)
                            ) {
                              if (((m = w), (k = E) <= g)) break;
                              P = Math.max(1, 2 * g - k);
                            }
                          }
                          if (
                            r(t, {
                              errors: I + 1,
                              currentLocation: g,
                              expectedLocation: g,
                              distance: h
                            }) > m
                          )
                            break;
                          L = T;
                        }
                        return {
                          isMatch: k >= 0,
                          score: 0 === w ? 0.001 : w,
                          matchedIndices: o(x, p)
                        };
                      };
                    },
                    function(e, t) {
                      e.exports = function(e, t) {
                        var n = t.errors,
                          r = void 0 === n ? 0 : n,
                          o = t.currentLocation,
                          i = void 0 === o ? 0 : o,
                          a = t.expectedLocation,
                          s = void 0 === a ? 0 : a,
                          c = t.distance,
                          h = void 0 === c ? 100 : c,
                          l = r / e.length,
                          u = Math.abs(s - i);
                        return h ? l + u / h : u ? 1 : l;
                      };
                    },
                    function(e, t) {
                      e.exports = function() {
                        for (
                          var e =
                              arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : [],
                            t =
                              arguments.length > 1 && void 0 !== arguments[1]
                                ? arguments[1]
                                : 1,
                            n = [],
                            r = -1,
                            o = -1,
                            i = 0,
                            a = e.length;
                          i < a;
                          i += 1
                        ) {
                          var s = e[i];
                          s && -1 === r
                            ? (r = i)
                            : s ||
                              -1 === r ||
                              ((o = i - 1) - r + 1 >= t && n.push([r, o]),
                              (r = -1));
                        }
                        return e[i - 1] && i - r >= t && n.push([r, i - 1]), n;
                      };
                    },
                    function(e, t) {
                      e.exports = function(e) {
                        for (var t = {}, n = e.length, r = 0; r < n; r += 1)
                          t[e.charAt(r)] = 0;
                        for (var o = 0; o < n; o += 1)
                          t[e.charAt(o)] |= 1 << (n - o - 1);
                        return t;
                      };
                    },
                    function(e, t, n) {
                      var r = n(0);
                      e.exports = function(e, t) {
                        return (function e(t, n, o) {
                          if (n) {
                            var i = n.indexOf('.'),
                              a = n,
                              s = null;
                            -1 !== i &&
                              ((a = n.slice(0, i)), (s = n.slice(i + 1)));
                            var c = t[a];
                            if (null != c)
                              if (
                                s ||
                                ('string' != typeof c && 'number' != typeof c)
                              )
                                if (r(c))
                                  for (var h = 0, l = c.length; h < l; h += 1)
                                    e(c[h], s, o);
                                else s && e(c, s, o);
                              else o.push(c.toString());
                          } else o.push(t);
                          return o;
                        })(e, t, []);
                      };
                    }
                  ]);
                });

                /***/
              },
              /* 3 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                'use strict';
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  'a',
                  function() {
                    return symbolObservablePonyfill;
                  }
                );
                function symbolObservablePonyfill(root) {
                  var result;
                  var Symbol = root.Symbol;

                  if (typeof Symbol === 'function') {
                    if (Symbol.observable) {
                      result = Symbol.observable;
                    } else {
                      result = Symbol('observable');
                      Symbol.observable = result;
                    }
                  } else {
                    result = '@@observable';
                  }

                  return result;
                }

                /***/
              },
              /* 4 */
              /***/ function(module, exports, __webpack_require__) {
                module.exports = __webpack_require__(7);

                /***/
              },
              /* 5 */
              /***/ function(module, exports) {
                var g;

                // This works in non-strict mode
                g = (function() {
                  return this;
                })();

                try {
                  // This works if eval is allowed (see CSP)
                  g = g || new Function('return this')();
                } catch (e) {
                  // This works if the window reference is available
                  if (typeof window === 'object') g = window;
                }

                // g can still be undefined, but nothing to do about it...
                // We return undefined, instead of nothing here, so it's
                // easier to handle this case. if(!global) { ...}

                module.exports = g;

                /***/
              },
              /* 6 */
              /***/ function(module, exports) {
                module.exports = function(originalModule) {
                  if (!originalModule.webpackPolyfill) {
                    var module = Object.create(originalModule);
                    // module.parent = undefined by default
                    if (!module.children) module.children = [];
                    Object.defineProperty(module, 'loaded', {
                      enumerable: true,
                      get: function() {
                        return module.l;
                      }
                    });
                    Object.defineProperty(module, 'id', {
                      enumerable: true,
                      get: function() {
                        return module.i;
                      }
                    });
                    Object.defineProperty(module, 'exports', {
                      enumerable: true
                    });
                    module.webpackPolyfill = 1;
                  }
                  return module;
                };

                /***/
              },
              /* 7 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                'use strict';
                __webpack_require__.r(__webpack_exports__);

                // EXTERNAL MODULE: ./node_modules/fuse.js/dist/fuse.js
                var dist_fuse = __webpack_require__(2);
                var fuse_default = /*#__PURE__*/ __webpack_require__.n(
                  dist_fuse
                );

                // EXTERNAL MODULE: ./node_modules/deepmerge/dist/cjs.js
                var cjs = __webpack_require__(0);
                var cjs_default = /*#__PURE__*/ __webpack_require__.n(cjs);

                // EXTERNAL MODULE: ./node_modules/symbol-observable/es/index.js
                var es = __webpack_require__(1);

                // CONCATENATED MODULE: ./node_modules/redux/es/redux.js

                /**
                 * These are private action types reserved by Redux.
                 * For any unknown actions, you must return the current state.
                 * If the current state is undefined, you must return the initial state.
                 * Do not reference these action types directly in your code.
                 */
                var randomString = function randomString() {
                  return Math.random()
                    .toString(36)
                    .substring(7)
                    .split('')
                    .join('.');
                };

                var ActionTypes = {
                  INIT: '@@redux/INIT' + randomString(),
                  REPLACE: '@@redux/REPLACE' + randomString(),
                  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
                    return '@@redux/PROBE_UNKNOWN_ACTION' + randomString();
                  }
                };

                /**
                 * @param {any} obj The object to inspect.
                 * @returns {boolean} True if the argument appears to be a plain object.
                 */
                function isPlainObject(obj) {
                  if (typeof obj !== 'object' || obj === null) return false;
                  var proto = obj;

                  while (Object.getPrototypeOf(proto) !== null) {
                    proto = Object.getPrototypeOf(proto);
                  }

                  return Object.getPrototypeOf(obj) === proto;
                }

                /**
                 * Creates a Redux store that holds the state tree.
                 * The only way to change the data in the store is to call `dispatch()` on it.
                 *
                 * There should only be a single store in your app. To specify how different
                 * parts of the state tree respond to actions, you may combine several reducers
                 * into a single reducer function by using `combineReducers`.
                 *
                 * @param {Function} reducer A function that returns the next state tree, given
                 * the current state tree and the action to handle.
                 *
                 * @param {any} [preloadedState] The initial state. You may optionally specify it
                 * to hydrate the state from the server in universal apps, or to restore a
                 * previously serialized user session.
                 * If you use `combineReducers` to produce the root reducer function, this must be
                 * an object with the same shape as `combineReducers` keys.
                 *
                 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
                 * to enhance the store with third-party capabilities such as middleware,
                 * time travel, persistence, etc. The only store enhancer that ships with Redux
                 * is `applyMiddleware()`.
                 *
                 * @returns {Store} A Redux store that lets you read the state, dispatch actions
                 * and subscribe to changes.
                 */

                function createStore(reducer, preloadedState, enhancer) {
                  var _ref2;

                  if (
                    (typeof preloadedState === 'function' &&
                      typeof enhancer === 'function') ||
                    (typeof enhancer === 'function' &&
                      typeof arguments[3] === 'function')
                  ) {
                    throw new Error(
                      'It looks like you are passing several store enhancers to ' +
                        'createStore(). This is not supported. Instead, compose them ' +
                        'together to a single function.'
                    );
                  }

                  if (
                    typeof preloadedState === 'function' &&
                    typeof enhancer === 'undefined'
                  ) {
                    enhancer = preloadedState;
                    preloadedState = undefined;
                  }

                  if (typeof enhancer !== 'undefined') {
                    if (typeof enhancer !== 'function') {
                      throw new Error(
                        'Expected the enhancer to be a function.'
                      );
                    }

                    return enhancer(createStore)(reducer, preloadedState);
                  }

                  if (typeof reducer !== 'function') {
                    throw new Error('Expected the reducer to be a function.');
                  }

                  var currentReducer = reducer;
                  var currentState = preloadedState;
                  var currentListeners = [];
                  var nextListeners = currentListeners;
                  var isDispatching = false;
                  /**
                   * This makes a shallow copy of currentListeners so we can use
                   * nextListeners as a temporary list while dispatching.
                   *
                   * This prevents any bugs around consumers calling
                   * subscribe/unsubscribe in the middle of a dispatch.
                   */

                  function ensureCanMutateNextListeners() {
                    if (nextListeners === currentListeners) {
                      nextListeners = currentListeners.slice();
                    }
                  }
                  /**
                   * Reads the state tree managed by the store.
                   *
                   * @returns {any} The current state tree of your application.
                   */

                  function getState() {
                    if (isDispatching) {
                      throw new Error(
                        'You may not call store.getState() while the reducer is executing. ' +
                          'The reducer has already received the state as an argument. ' +
                          'Pass it down from the top reducer instead of reading it from the store.'
                      );
                    }

                    return currentState;
                  }
                  /**
                   * Adds a change listener. It will be called any time an action is dispatched,
                   * and some part of the state tree may potentially have changed. You may then
                   * call `getState()` to read the current state tree inside the callback.
                   *
                   * You may call `dispatch()` from a change listener, with the following
                   * caveats:
                   *
                   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
                   * If you subscribe or unsubscribe while the listeners are being invoked, this
                   * will not have any effect on the `dispatch()` that is currently in progress.
                   * However, the next `dispatch()` call, whether nested or not, will use a more
                   * recent snapshot of the subscription list.
                   *
                   * 2. The listener should not expect to see all state changes, as the state
                   * might have been updated multiple times during a nested `dispatch()` before
                   * the listener is called. It is, however, guaranteed that all subscribers
                   * registered before the `dispatch()` started will be called with the latest
                   * state by the time it exits.
                   *
                   * @param {Function} listener A callback to be invoked on every dispatch.
                   * @returns {Function} A function to remove this change listener.
                   */

                  function subscribe(listener) {
                    if (typeof listener !== 'function') {
                      throw new Error(
                        'Expected the listener to be a function.'
                      );
                    }

                    if (isDispatching) {
                      throw new Error(
                        'You may not call store.subscribe() while the reducer is executing. ' +
                          'If you would like to be notified after the store has been updated, subscribe from a ' +
                          'component and invoke store.getState() in the callback to access the latest state. ' +
                          'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.'
                      );
                    }

                    var isSubscribed = true;
                    ensureCanMutateNextListeners();
                    nextListeners.push(listener);
                    return function unsubscribe() {
                      if (!isSubscribed) {
                        return;
                      }

                      if (isDispatching) {
                        throw new Error(
                          'You may not unsubscribe from a store listener while the reducer is executing. ' +
                            'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.'
                        );
                      }

                      isSubscribed = false;
                      ensureCanMutateNextListeners();
                      var index = nextListeners.indexOf(listener);
                      nextListeners.splice(index, 1);
                    };
                  }
                  /**
                   * Dispatches an action. It is the only way to trigger a state change.
                   *
                   * The `reducer` function, used to create the store, will be called with the
                   * current state tree and the given `action`. Its return value will
                   * be considered the **next** state of the tree, and the change listeners
                   * will be notified.
                   *
                   * The base implementation only supports plain object actions. If you want to
                   * dispatch a Promise, an Observable, a thunk, or something else, you need to
                   * wrap your store creating function into the corresponding middleware. For
                   * example, see the documentation for the `redux-thunk` package. Even the
                   * middleware will eventually dispatch plain object actions using this method.
                   *
                   * @param {Object} action A plain object representing “what changed”. It is
                   * a good idea to keep actions serializable so you can record and replay user
                   * sessions, or use the time travelling `redux-devtools`. An action must have
                   * a `type` property which may not be `undefined`. It is a good idea to use
                   * string constants for action types.
                   *
                   * @returns {Object} For convenience, the same action object you dispatched.
                   *
                   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
                   * return something else (for example, a Promise you can await).
                   */

                  function dispatch(action) {
                    if (!isPlainObject(action)) {
                      throw new Error(
                        'Actions must be plain objects. ' +
                          'Use custom middleware for async actions.'
                      );
                    }

                    if (typeof action.type === 'undefined') {
                      throw new Error(
                        'Actions may not have an undefined "type" property. ' +
                          'Have you misspelled a constant?'
                      );
                    }

                    if (isDispatching) {
                      throw new Error('Reducers may not dispatch actions.');
                    }

                    try {
                      isDispatching = true;
                      currentState = currentReducer(currentState, action);
                    } finally {
                      isDispatching = false;
                    }

                    var listeners = (currentListeners = nextListeners);

                    for (var i = 0; i < listeners.length; i++) {
                      var listener = listeners[i];
                      listener();
                    }

                    return action;
                  }
                  /**
                   * Replaces the reducer currently used by the store to calculate the state.
                   *
                   * You might need this if your app implements code splitting and you want to
                   * load some of the reducers dynamically. You might also need this if you
                   * implement a hot reloading mechanism for Redux.
                   *
                   * @param {Function} nextReducer The reducer for the store to use instead.
                   * @returns {void}
                   */

                  function replaceReducer(nextReducer) {
                    if (typeof nextReducer !== 'function') {
                      throw new Error(
                        'Expected the nextReducer to be a function.'
                      );
                    }

                    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
                    // Any reducers that existed in both the new and old rootReducer
                    // will receive the previous state. This effectively populates
                    // the new state tree with any relevant data from the old one.

                    dispatch({
                      type: ActionTypes.REPLACE
                    });
                  }
                  /**
                   * Interoperability point for observable/reactive libraries.
                   * @returns {observable} A minimal observable of state changes.
                   * For more information, see the observable proposal:
                   * https://github.com/tc39/proposal-observable
                   */

                  function observable() {
                    var _ref;

                    var outerSubscribe = subscribe;
                    return (
                      (_ref = {
                        /**
                         * The minimal observable subscription method.
                         * @param {Object} observer Any object that can be used as an observer.
                         * The observer object should have a `next` method.
                         * @returns {subscription} An object with an `unsubscribe` method that can
                         * be used to unsubscribe the observable from the store, and prevent further
                         * emission of values from the observable.
                         */
                        subscribe: function subscribe(observer) {
                          if (
                            typeof observer !== 'object' ||
                            observer === null
                          ) {
                            throw new TypeError(
                              'Expected the observer to be an object.'
                            );
                          }

                          function observeState() {
                            if (observer.next) {
                              observer.next(getState());
                            }
                          }

                          observeState();
                          var unsubscribe = outerSubscribe(observeState);
                          return {
                            unsubscribe: unsubscribe
                          };
                        }
                      }),
                      (_ref[es['a' /* default */]] = function() {
                        return this;
                      }),
                      _ref
                    );
                  } // When a store is created, an "INIT" action is dispatched so that every
                  // reducer returns their initial state. This effectively populates
                  // the initial state tree.

                  dispatch({
                    type: ActionTypes.INIT
                  });
                  return (
                    (_ref2 = {
                      dispatch: dispatch,
                      subscribe: subscribe,
                      getState: getState,
                      replaceReducer: replaceReducer
                    }),
                    (_ref2[es['a' /* default */]] = observable),
                    _ref2
                  );
                }

                /**
                 * Prints a warning in the console if it exists.
                 *
                 * @param {String} message The warning message.
                 * @returns {void}
                 */
                function warning(message) {
                  /* eslint-disable no-console */
                  if (
                    typeof console !== 'undefined' &&
                    typeof console.error === 'function'
                  ) {
                    console.error(message);
                  }
                  /* eslint-enable no-console */

                  try {
                    // This error was thrown as a convenience so that if you enable
                    // "break on all exceptions" in your console,
                    // it would pause the execution at this line.
                    throw new Error(message);
                  } catch (e) {} // eslint-disable-line no-empty
                }

                function getUndefinedStateErrorMessage(key, action) {
                  var actionType = action && action.type;
                  var actionDescription =
                    (actionType && 'action "' + String(actionType) + '"') ||
                    'an action';
                  return (
                    'Given ' +
                    actionDescription +
                    ', reducer "' +
                    key +
                    '" returned undefined. ' +
                    'To ignore an action, you must explicitly return the previous state. ' +
                    'If you want this reducer to hold no value, you can return null instead of undefined.'
                  );
                }

                function getUnexpectedStateShapeWarningMessage(
                  inputState,
                  reducers,
                  action,
                  unexpectedKeyCache
                ) {
                  var reducerKeys = Object.keys(reducers);
                  var argumentName =
                    action && action.type === ActionTypes.INIT
                      ? 'preloadedState argument passed to createStore'
                      : 'previous state received by the reducer';

                  if (reducerKeys.length === 0) {
                    return (
                      'Store does not have a valid reducer. Make sure the argument passed ' +
                      'to combineReducers is an object whose values are reducers.'
                    );
                  }

                  if (!isPlainObject(inputState)) {
                    return (
                      'The ' +
                      argumentName +
                      ' has unexpected type of "' +
                      {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] +
                      '". Expected argument to be an object with the following ' +
                      ('keys: "' + reducerKeys.join('", "') + '"')
                    );
                  }

                  var unexpectedKeys = Object.keys(inputState).filter(function(
                    key
                  ) {
                    return (
                      !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]
                    );
                  });
                  unexpectedKeys.forEach(function(key) {
                    unexpectedKeyCache[key] = true;
                  });
                  if (action && action.type === ActionTypes.REPLACE) return;

                  if (unexpectedKeys.length > 0) {
                    return (
                      'Unexpected ' +
                      (unexpectedKeys.length > 1 ? 'keys' : 'key') +
                      ' ' +
                      ('"' +
                        unexpectedKeys.join('", "') +
                        '" found in ' +
                        argumentName +
                        '. ') +
                      'Expected to find one of the known reducer keys instead: ' +
                      ('"' +
                        reducerKeys.join('", "') +
                        '". Unexpected keys will be ignored.')
                    );
                  }
                }

                function assertReducerShape(reducers) {
                  Object.keys(reducers).forEach(function(key) {
                    var reducer = reducers[key];
                    var initialState = reducer(undefined, {
                      type: ActionTypes.INIT
                    });

                    if (typeof initialState === 'undefined') {
                      throw new Error(
                        'Reducer "' +
                          key +
                          '" returned undefined during initialization. ' +
                          'If the state passed to the reducer is undefined, you must ' +
                          'explicitly return the initial state. The initial state may ' +
                          "not be undefined. If you don't want to set a value for this reducer, " +
                          'you can use null instead of undefined.'
                      );
                    }

                    if (
                      typeof reducer(undefined, {
                        type: ActionTypes.PROBE_UNKNOWN_ACTION()
                      }) === 'undefined'
                    ) {
                      throw new Error(
                        'Reducer "' +
                          key +
                          '" returned undefined when probed with a random type. ' +
                          ("Don't try to handle " +
                            ActionTypes.INIT +
                            ' or other actions in "redux/*" ') +
                          'namespace. They are considered private. Instead, you must return the ' +
                          'current state for any unknown actions, unless it is undefined, ' +
                          'in which case you must return the initial state, regardless of the ' +
                          'action type. The initial state may not be undefined, but can be null.'
                      );
                    }
                  });
                }
                /**
                 * Turns an object whose values are different reducer functions, into a single
                 * reducer function. It will call every child reducer, and gather their results
                 * into a single state object, whose keys correspond to the keys of the passed
                 * reducer functions.
                 *
                 * @param {Object} reducers An object whose values correspond to different
                 * reducer functions that need to be combined into one. One handy way to obtain
                 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
                 * undefined for any action. Instead, they should return their initial state
                 * if the state passed to them was undefined, and the current state for any
                 * unrecognized action.
                 *
                 * @returns {Function} A reducer function that invokes every reducer inside the
                 * passed object, and builds a state object with the same shape.
                 */

                function combineReducers(reducers) {
                  var reducerKeys = Object.keys(reducers);
                  var finalReducers = {};

                  for (var i = 0; i < reducerKeys.length; i++) {
                    var key = reducerKeys[i];

                    if (false) {
                    }

                    if (typeof reducers[key] === 'function') {
                      finalReducers[key] = reducers[key];
                    }
                  }

                  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
                  // keys multiple times.

                  var unexpectedKeyCache;

                  if (false) {
                  }

                  var shapeAssertionError;

                  try {
                    assertReducerShape(finalReducers);
                  } catch (e) {
                    shapeAssertionError = e;
                  }

                  return function combination(state, action) {
                    if (state === void 0) {
                      state = {};
                    }

                    if (shapeAssertionError) {
                      throw shapeAssertionError;
                    }

                    if (false) {
                      var warningMessage;
                    }

                    var hasChanged = false;
                    var nextState = {};

                    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
                      var _key = finalReducerKeys[_i];
                      var reducer = finalReducers[_key];
                      var previousStateForKey = state[_key];
                      var nextStateForKey = reducer(
                        previousStateForKey,
                        action
                      );

                      if (typeof nextStateForKey === 'undefined') {
                        var errorMessage = getUndefinedStateErrorMessage(
                          _key,
                          action
                        );
                        throw new Error(errorMessage);
                      }

                      nextState[_key] = nextStateForKey;
                      hasChanged =
                        hasChanged || nextStateForKey !== previousStateForKey;
                    }

                    return hasChanged ? nextState : state;
                  };
                }

                function bindActionCreator(actionCreator, dispatch) {
                  return function() {
                    return dispatch(actionCreator.apply(this, arguments));
                  };
                }
                /**
                 * Turns an object whose values are action creators, into an object with the
                 * same keys, but with every function wrapped into a `dispatch` call so they
                 * may be invoked directly. This is just a convenience method, as you can call
                 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
                 *
                 * For convenience, you can also pass an action creator as the first argument,
                 * and get a dispatch wrapped function in return.
                 *
                 * @param {Function|Object} actionCreators An object whose values are action
                 * creator functions. One handy way to obtain it is to use ES6 `import * as`
                 * syntax. You may also pass a single function.
                 *
                 * @param {Function} dispatch The `dispatch` function available on your Redux
                 * store.
                 *
                 * @returns {Function|Object} The object mimicking the original object, but with
                 * every action creator wrapped into the `dispatch` call. If you passed a
                 * function as `actionCreators`, the return value will also be a single
                 * function.
                 */

                function bindActionCreators(actionCreators, dispatch) {
                  if (typeof actionCreators === 'function') {
                    return bindActionCreator(actionCreators, dispatch);
                  }

                  if (
                    typeof actionCreators !== 'object' ||
                    actionCreators === null
                  ) {
                    throw new Error(
                      'bindActionCreators expected an object or a function, instead received ' +
                        (actionCreators === null
                          ? 'null'
                          : typeof actionCreators) +
                        '. ' +
                        'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?'
                    );
                  }

                  var boundActionCreators = {};

                  for (var key in actionCreators) {
                    var actionCreator = actionCreators[key];

                    if (typeof actionCreator === 'function') {
                      boundActionCreators[key] = bindActionCreator(
                        actionCreator,
                        dispatch
                      );
                    }
                  }

                  return boundActionCreators;
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }

                  return obj;
                }

                function ownKeys(object, enumerableOnly) {
                  var keys = Object.keys(object);

                  if (Object.getOwnPropertySymbols) {
                    keys.push.apply(keys, Object.getOwnPropertySymbols(object));
                  }

                  if (enumerableOnly)
                    keys = keys.filter(function(sym) {
                      return Object.getOwnPropertyDescriptor(
                        object,
                        sym
                      ).enumerable;
                    });
                  return keys;
                }

                function _objectSpread2(target) {
                  for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i] != null ? arguments[i] : {};

                    if (i % 2) {
                      ownKeys(source, true).forEach(function(key) {
                        _defineProperty(target, key, source[key]);
                      });
                    } else if (Object.getOwnPropertyDescriptors) {
                      Object.defineProperties(
                        target,
                        Object.getOwnPropertyDescriptors(source)
                      );
                    } else {
                      ownKeys(source).forEach(function(key) {
                        Object.defineProperty(
                          target,
                          key,
                          Object.getOwnPropertyDescriptor(source, key)
                        );
                      });
                    }
                  }

                  return target;
                }

                /**
                 * Composes single-argument functions from right to left. The rightmost
                 * function can take multiple arguments as it provides the signature for
                 * the resulting composite function.
                 *
                 * @param {...Function} funcs The functions to compose.
                 * @returns {Function} A function obtained by composing the argument functions
                 * from right to left. For example, compose(f, g, h) is identical to doing
                 * (...args) => f(g(h(...args))).
                 */
                function compose() {
                  for (
                    var _len = arguments.length,
                      funcs = new Array(_len),
                      _key = 0;
                    _key < _len;
                    _key++
                  ) {
                    funcs[_key] = arguments[_key];
                  }

                  if (funcs.length === 0) {
                    return function(arg) {
                      return arg;
                    };
                  }

                  if (funcs.length === 1) {
                    return funcs[0];
                  }

                  return funcs.reduce(function(a, b) {
                    return function() {
                      return a(b.apply(void 0, arguments));
                    };
                  });
                }

                /**
                 * Creates a store enhancer that applies middleware to the dispatch method
                 * of the Redux store. This is handy for a variety of tasks, such as expressing
                 * asynchronous actions in a concise manner, or logging every action payload.
                 *
                 * See `redux-thunk` package as an example of the Redux middleware.
                 *
                 * Because middleware is potentially asynchronous, this should be the first
                 * store enhancer in the composition chain.
                 *
                 * Note that each middleware will be given the `dispatch` and `getState` functions
                 * as named arguments.
                 *
                 * @param {...Function} middlewares The middleware chain to be applied.
                 * @returns {Function} A store enhancer applying the middleware.
                 */

                function applyMiddleware() {
                  for (
                    var _len = arguments.length,
                      middlewares = new Array(_len),
                      _key = 0;
                    _key < _len;
                    _key++
                  ) {
                    middlewares[_key] = arguments[_key];
                  }

                  return function(createStore) {
                    return function() {
                      var store = createStore.apply(void 0, arguments);

                      var _dispatch = function dispatch() {
                        throw new Error(
                          'Dispatching while constructing your middleware is not allowed. ' +
                            'Other middleware would not be applied to this dispatch.'
                        );
                      };

                      var middlewareAPI = {
                        getState: store.getState,
                        dispatch: function dispatch() {
                          return _dispatch.apply(void 0, arguments);
                        }
                      };
                      var chain = middlewares.map(function(middleware) {
                        return middleware(middlewareAPI);
                      });
                      _dispatch = compose.apply(void 0, chain)(store.dispatch);
                      return _objectSpread2({}, store, {
                        dispatch: _dispatch
                      });
                    };
                  };
                }

                /*
                 * This is a dummy function to check if the function name has been altered by minification.
                 * If the function has been minified and NODE_ENV !== 'production', warn the user.
                 */

                function isCrushed() {}

                if (false) {
                }

                // CONCATENATED MODULE: ./src/scripts/reducers/items.js
                var defaultState = [];
                function items_items(state, action) {
                  if (state === void 0) {
                    state = defaultState;
                  }

                  switch (action.type) {
                    case 'ADD_ITEM': {
                      // Add object to items array
                      var newState = [].concat(state, [
                        {
                          id: action.id,
                          choiceId: action.choiceId,
                          groupId: action.groupId,
                          value: action.value,
                          label: action.label,
                          active: true,
                          highlighted: false,
                          customProperties: action.customProperties,
                          placeholder: action.placeholder || false,
                          keyCode: null
                        }
                      ]);
                      return newState.map(function(obj) {
                        var item = obj;
                        item.highlighted = false;
                        return item;
                      });
                    }

                    case 'REMOVE_ITEM': {
                      // Set item to inactive
                      return state.map(function(obj) {
                        var item = obj;

                        if (item.id === action.id) {
                          item.active = false;
                        }

                        return item;
                      });
                    }

                    case 'HIGHLIGHT_ITEM': {
                      return state.map(function(obj) {
                        var item = obj;

                        if (item.id === action.id) {
                          item.highlighted = action.highlighted;
                        }

                        return item;
                      });
                    }

                    default: {
                      return state;
                    }
                  }
                }
                // CONCATENATED MODULE: ./src/scripts/reducers/groups.js
                var groups_defaultState = [];
                function groups(state, action) {
                  if (state === void 0) {
                    state = groups_defaultState;
                  }

                  switch (action.type) {
                    case 'ADD_GROUP': {
                      return [].concat(state, [
                        {
                          id: action.id,
                          value: action.value,
                          active: action.active,
                          disabled: action.disabled
                        }
                      ]);
                    }

                    case 'CLEAR_CHOICES': {
                      return [];
                    }

                    default: {
                      return state;
                    }
                  }
                }
                // CONCATENATED MODULE: ./src/scripts/reducers/choices.js
                var choices_defaultState = [];
                function choices_choices(state, action) {
                  if (state === void 0) {
                    state = choices_defaultState;
                  }

                  switch (action.type) {
                    case 'ADD_CHOICE': {
                      /*
            A disabled choice appears in the choice dropdown but cannot be selected
            A selected choice has been added to the passed input's value (added as an item)
            An active choice appears within the choice dropdown
         */
                      return [].concat(state, [
                        {
                          id: action.id,
                          elementId: action.elementId,
                          groupId: action.groupId,
                          value: action.value,
                          label: action.label || action.value,
                          disabled: action.disabled || false,
                          selected: false,
                          active: true,
                          score: 9999,
                          customProperties: action.customProperties,
                          placeholder: action.placeholder || false,
                          keyCode: null
                        }
                      ]);
                    }

                    case 'ADD_ITEM': {
                      // If all choices need to be activated
                      if (action.activateOptions) {
                        return state.map(function(obj) {
                          var choice = obj;
                          choice.active = action.active;
                          return choice;
                        });
                      } // When an item is added and it has an associated choice,
                      // we want to disable it so it can't be chosen again

                      if (action.choiceId > -1) {
                        return state.map(function(obj) {
                          var choice = obj;

                          if (choice.id === parseInt(action.choiceId, 10)) {
                            choice.selected = true;
                          }

                          return choice;
                        });
                      }

                      return state;
                    }

                    case 'REMOVE_ITEM': {
                      // When an item is removed and it has an associated choice,
                      // we want to re-enable it so it can be chosen again
                      if (action.choiceId > -1) {
                        return state.map(function(obj) {
                          var choice = obj;

                          if (choice.id === parseInt(action.choiceId, 10)) {
                            choice.selected = false;
                          }

                          return choice;
                        });
                      }

                      return state;
                    }

                    case 'FILTER_CHOICES': {
                      return state.map(function(obj) {
                        var choice = obj; // Set active state based on whether choice is
                        // within filtered results

                        choice.active = action.results.some(function(_ref) {
                          var item = _ref.item,
                            score = _ref.score;

                          if (item.id === choice.id) {
                            choice.score = score;
                            return true;
                          }

                          return false;
                        });
                        return choice;
                      });
                    }

                    case 'ACTIVATE_CHOICES': {
                      return state.map(function(obj) {
                        var choice = obj;
                        choice.active = action.active;
                        return choice;
                      });
                    }

                    case 'CLEAR_CHOICES': {
                      return choices_defaultState;
                    }

                    default: {
                      return state;
                    }
                  }
                }
                // CONCATENATED MODULE: ./src/scripts/reducers/general.js
                var general_defaultState = {
                  loading: false
                };

                var general = function general(state, action) {
                  if (state === void 0) {
                    state = general_defaultState;
                  }

                  switch (action.type) {
                    case 'SET_IS_LOADING': {
                      return {
                        loading: action.isLoading
                      };
                    }

                    default: {
                      return state;
                    }
                  }
                };

                /* harmony default export */ var reducers_general = general;
                // CONCATENATED MODULE: ./src/scripts/lib/utils.js
                /**
                 * @param {number} min
                 * @param {number} max
                 * @returns {number}
                 */
                var getRandomNumber = function getRandomNumber(min, max) {
                  return Math.floor(Math.random() * (max - min) + min);
                };
                /**
                 * @param {number} length
                 * @returns {string}
                 */

                var generateChars = function generateChars(length) {
                  return Array.from(
                    {
                      length: length
                    },
                    function() {
                      return getRandomNumber(0, 36).toString(36);
                    }
                  ).join('');
                };
                /**
                 * @param {HTMLInputElement | HTMLSelectElement} element
                 * @param {string} prefix
                 * @returns {string}
                 */

                var generateId = function generateId(element, prefix) {
                  var id =
                    element.id ||
                    (element.name && element.name + '-' + generateChars(2)) ||
                    generateChars(4);
                  id = id.replace(/(:|\.|\[|\]|,)/g, '');
                  id = prefix + '-' + id;
                  return id;
                };
                /**
                 * @param {any} obj
                 * @returns {string}
                 */

                var getType = function getType(obj) {
                  return Object.prototype.toString.call(obj).slice(8, -1);
                };
                /**
                 * @param {string} type
                 * @param {any} obj
                 * @returns {boolean}
                 */

                var isType = function isType(type, obj) {
                  return (
                    obj !== undefined && obj !== null && getType(obj) === type
                  );
                };
                /**
                 * @param {HTMLElement} element
                 * @param {HTMLElement} [wrapper={HTMLDivElement}]
                 * @returns {HTMLElement}
                 */

                var utils_wrap = function wrap(element, wrapper) {
                  if (wrapper === void 0) {
                    wrapper = document.createElement('div');
                  }

                  if (element.nextSibling) {
                    element.parentNode.insertBefore(
                      wrapper,
                      element.nextSibling
                    );
                  } else {
                    element.parentNode.appendChild(wrapper);
                  }

                  return wrapper.appendChild(element);
                };
                /**
                 * @param {Element} startEl
                 * @param {string} selector
                 * @param {1 | -1} direction
                 * @returns {Element | undefined}
                 */

                var getAdjacentEl = function getAdjacentEl(
                  startEl,
                  selector,
                  direction
                ) {
                  if (direction === void 0) {
                    direction = 1;
                  }

                  if (
                    !(startEl instanceof Element) ||
                    typeof selector !== 'string'
                  ) {
                    return undefined;
                  }

                  var prop =
                    (direction > 0 ? 'next' : 'previous') + 'ElementSibling';
                  var sibling = startEl[prop];

                  while (sibling) {
                    if (sibling.matches(selector)) {
                      return sibling;
                    }

                    sibling = sibling[prop];
                  }

                  return sibling;
                };
                /**
                 * @param {Element} element
                 * @param {Element} parent
                 * @param {-1 | 1} direction
                 * @returns {boolean}
                 */

                var isScrolledIntoView = function isScrolledIntoView(
                  element,
                  parent,
                  direction
                ) {
                  if (direction === void 0) {
                    direction = 1;
                  }

                  if (!element) {
                    return false;
                  }

                  var isVisible;

                  if (direction > 0) {
                    // In view from bottom
                    isVisible =
                      parent.scrollTop + parent.offsetHeight >=
                      element.offsetTop + element.offsetHeight;
                  } else {
                    // In view from top
                    isVisible = element.offsetTop >= parent.scrollTop;
                  }

                  return isVisible;
                };
                /**
                 * @param {any} value
                 * @returns {any}
                 */

                var sanitise = function sanitise(value) {
                  if (typeof value !== 'string') {
                    return value;
                  }

                  return value
                    .replace(/&/g, '&amp;')
                    .replace(/>/g, '&rt;')
                    .replace(/</g, '&lt;')
                    .replace(/"/g, '&quot;');
                };
                /**
                 * @returns {() => (str: string) => Element}
                 */

                var strToEl = (function() {
                  var tmpEl = document.createElement('div');
                  return function(str) {
                    var cleanedInput = str.trim();
                    tmpEl.innerHTML = cleanedInput;
                    var firldChild = tmpEl.children[0];

                    while (tmpEl.firstChild) {
                      tmpEl.removeChild(tmpEl.firstChild);
                    }

                    return firldChild;
                  };
                })();
                /**
                 * @param {{ label?: string, value: string }} a
                 * @param {{ label?: string, value: string }} b
                 * @returns {number}
                 */

                var sortByAlpha = function sortByAlpha(_ref, _ref2) {
                  var value = _ref.value,
                    _ref$label = _ref.label,
                    label = _ref$label === void 0 ? value : _ref$label;
                  var value2 = _ref2.value,
                    _ref2$label = _ref2.label,
                    label2 = _ref2$label === void 0 ? value2 : _ref2$label;
                  return label.localeCompare(label2, [], {
                    sensitivity: 'base',
                    ignorePunctuation: true,
                    numeric: true
                  });
                };
                /**
                 * @param {{ score: number }} a
                 * @param {{ score: number }} b
                 */

                var sortByScore = function sortByScore(a, b) {
                  return a.score - b.score;
                };
                /**
                 * @param {HTMLElement} element
                 * @param {string} type
                 * @param {object} customArgs
                 */

                var dispatchEvent = function dispatchEvent(
                  element,
                  type,
                  customArgs
                ) {
                  if (customArgs === void 0) {
                    customArgs = null;
                  }

                  var event = new CustomEvent(type, {
                    detail: customArgs,
                    bubbles: true,
                    cancelable: true
                  });
                  return element.dispatchEvent(event);
                };
                /**
                 * @param {array} array
                 * @param {any} value
                 * @param {string} [key="value"]
                 * @returns {boolean}
                 */

                var existsInArray = function existsInArray(array, value, key) {
                  if (key === void 0) {
                    key = 'value';
                  }

                  return array.some(function(item) {
                    if (typeof value === 'string') {
                      return item[key] === value.trim();
                    }

                    return item[key] === value;
                  });
                };
                /**
                 * @param {any} obj
                 * @returns {any}
                 */

                var cloneObject = function cloneObject(obj) {
                  return JSON.parse(JSON.stringify(obj));
                };
                /**
                 * Returns an array of keys present on the first but missing on the second object
                 * @param {object} a
                 * @param {object} b
                 * @returns {string[]}
                 */

                var diff = function diff(a, b) {
                  var aKeys = Object.keys(a).sort();
                  var bKeys = Object.keys(b).sort();
                  return aKeys.filter(function(i) {
                    return bKeys.indexOf(i) < 0;
                  });
                };
                // CONCATENATED MODULE: ./src/scripts/reducers/index.js

                var appReducer = combineReducers({
                  items: items_items,
                  groups: groups,
                  choices: choices_choices,
                  general: reducers_general
                });

                var reducers_rootReducer = function rootReducer(
                  passedState,
                  action
                ) {
                  var state = passedState; // If we are clearing all items, groups and options we reassign
                  // state and then pass that state to our proper reducer. This isn't
                  // mutating our actual state
                  // See: http://stackoverflow.com/a/35641992

                  if (action.type === 'CLEAR_ALL') {
                    state = undefined;
                  } else if (action.type === 'RESET_TO') {
                    return cloneObject(action.state);
                  }

                  return appReducer(state, action);
                };

                /* harmony default export */ var reducers = reducers_rootReducer;
                // CONCATENATED MODULE: ./src/scripts/store/store.js
                function _defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function _createClass(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    _defineProperties(Constructor.prototype, protoProps);
                  if (staticProps) _defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.Choice} Choice
                 * @typedef {import('../../../types/index').Choices.Group} Group
                 * @typedef {import('../../../types/index').Choices.Item} Item
                 */

                var store_Store =
                  /*#__PURE__*/
                  (function() {
                    function Store() {
                      this._store = createStore(
                        reducers,
                        window.__REDUX_DEVTOOLS_EXTENSION__ &&
                          window.__REDUX_DEVTOOLS_EXTENSION__()
                      );
                    }
                    /**
                     * Subscribe store to function call (wrapped Redux method)
                     * @param  {Function} onChange Function to trigger when state changes
                     * @return
                     */

                    var _proto = Store.prototype;

                    _proto.subscribe = function subscribe(onChange) {
                      this._store.subscribe(onChange);
                    };
                    /**
                     * Dispatch event to store (wrapped Redux method)
                     * @param  {{ type: string, [x: string]: any }} action Action to trigger
                     * @return
                     */

                    _proto.dispatch = function dispatch(action) {
                      this._store.dispatch(action);
                    };
                    /**
                     * Get store object (wrapping Redux method)
                     * @returns {object} State
                     */

                    /**
                     * Get loading state from store
                     * @returns {boolean} Loading State
                     */
                    _proto.isLoading = function isLoading() {
                      return this.state.general.loading;
                    };
                    /**
                     * Get single choice by it's ID
                     * @param {string} id
                     * @returns {Choice | undefined} Found choice
                     */

                    _proto.getChoiceById = function getChoiceById(id) {
                      return this.activeChoices.find(function(choice) {
                        return choice.id === parseInt(id, 10);
                      });
                    };
                    /**
                     * Get group by group id
                     * @param  {number} id Group ID
                     * @returns {Group | undefined} Group data
                     */

                    _proto.getGroupById = function getGroupById(id) {
                      return this.groups.find(function(group) {
                        return group.id === id;
                      });
                    };

                    _createClass(Store, [
                      {
                        key: 'state',
                        get: function get() {
                          return this._store.getState();
                        }
                        /**
                         * Get items from store
                         * @returns {Item[]} Item objects
                         */
                      },
                      {
                        key: 'items',
                        get: function get() {
                          return this.state.items;
                        }
                        /**
                         * Get active items from store
                         * @returns {Item[]} Item objects
                         */
                      },
                      {
                        key: 'activeItems',
                        get: function get() {
                          return this.items.filter(function(item) {
                            return item.active === true;
                          });
                        }
                        /**
                         * Get highlighted items from store
                         * @returns {Item[]} Item objects
                         */
                      },
                      {
                        key: 'highlightedActiveItems',
                        get: function get() {
                          return this.items.filter(function(item) {
                            return item.active && item.highlighted;
                          });
                        }
                        /**
                         * Get choices from store
                         * @returns {Choice[]} Option objects
                         */
                      },
                      {
                        key: 'choices',
                        get: function get() {
                          return this.state.choices;
                        }
                        /**
                         * Get active choices from store
                         * @returns {Choice[]} Option objects
                         */
                      },
                      {
                        key: 'activeChoices',
                        get: function get() {
                          return this.choices.filter(function(choice) {
                            return choice.active === true;
                          });
                        }
                        /**
                         * Get selectable choices from store
                         * @returns {Choice[]} Option objects
                         */
                      },
                      {
                        key: 'selectableChoices',
                        get: function get() {
                          return this.choices.filter(function(choice) {
                            return choice.disabled !== true;
                          });
                        }
                        /**
                         * Get choices that can be searched (excluding placeholders)
                         * @returns {Choice[]} Option objects
                         */
                      },
                      {
                        key: 'searchableChoices',
                        get: function get() {
                          return this.selectableChoices.filter(function(
                            choice
                          ) {
                            return choice.placeholder !== true;
                          });
                        }
                        /**
                         * Get placeholder choice from store
                         * @returns {Choice | undefined} Found placeholder
                         */
                      },
                      {
                        key: 'placeholderChoice',
                        get: function get() {
                          return []
                            .concat(this.choices)
                            .reverse()
                            .find(function(choice) {
                              return choice.placeholder === true;
                            });
                        }
                        /**
                         * Get groups from store
                         * @returns {Group[]} Group objects
                         */
                      },
                      {
                        key: 'groups',
                        get: function get() {
                          return this.state.groups;
                        }
                        /**
                         * Get active groups from store
                         * @returns {Group[]} Group objects
                         */
                      },
                      {
                        key: 'activeGroups',
                        get: function get() {
                          var groups = this.groups,
                            choices = this.choices;
                          return groups.filter(function(group) {
                            var isActive =
                              group.active === true && group.disabled === false;
                            var hasActiveOptions = choices.some(function(
                              choice
                            ) {
                              return (
                                choice.active === true &&
                                choice.disabled === false
                              );
                            });
                            return isActive && hasActiveOptions;
                          }, []);
                        }
                      }
                    ]);

                    return Store;
                  })();

                // CONCATENATED MODULE: ./src/scripts/components/dropdown.js
                function dropdown_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function dropdown_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    dropdown_defineProperties(
                      Constructor.prototype,
                      protoProps
                    );
                  if (staticProps)
                    dropdown_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.passedElement} passedElement
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 */
                var Dropdown =
                  /*#__PURE__*/
                  (function() {
                    /**
                     * @param {{
                     *  element: HTMLElement,
                     *  type: passedElement['type'],
                     *  classNames: ClassNames,
                     * }} args
                     */
                    function Dropdown(_ref) {
                      var element = _ref.element,
                        type = _ref.type,
                        classNames = _ref.classNames;
                      this.element = element;
                      this.classNames = classNames;
                      this.type = type;
                      this.isActive = false;
                    }
                    /**
                     * Bottom position of dropdown in viewport coordinates
                     * @returns {number} Vertical position
                     */

                    var _proto = Dropdown.prototype;

                    /**
                     * Find element that matches passed selector
                     * @param {string} selector
                     * @returns {HTMLElement | null}
                     */
                    _proto.getChild = function getChild(selector) {
                      return this.element.querySelector(selector);
                    };
                    /**
                     * Show dropdown to user by adding active state class
                     * @returns {this}
                     */

                    _proto.show = function show() {
                      this.element.classList.add(this.classNames.activeState);
                      this.element.setAttribute('aria-expanded', 'true');
                      this.isActive = true;
                      return this;
                    };
                    /**
                     * Hide dropdown from user
                     * @returns {this}
                     */

                    _proto.hide = function hide() {
                      this.element.classList.remove(
                        this.classNames.activeState
                      );
                      this.element.setAttribute('aria-expanded', 'false');
                      this.isActive = false;
                      return this;
                    };

                    dropdown_createClass(Dropdown, [
                      {
                        key: 'distanceFromTopWindow',
                        get: function get() {
                          return this.element.getBoundingClientRect().bottom;
                        }
                      }
                    ]);

                    return Dropdown;
                  })();

                // CONCATENATED MODULE: ./src/scripts/constants.js

                /**
                 * @typedef {import('../../types/index').Choices.ClassNames} ClassNames
                 * @typedef {import('../../types/index').Choices.Options} Options
                 */

                /** @type {ClassNames} */

                var DEFAULT_CLASSNAMES = {
                  containerOuter: 'choices',
                  containerInner: 'choices__inner',
                  input: 'choices__input',
                  inputCloned: 'choices__input--cloned',
                  list: 'choices__list',
                  listItems: 'choices__list--multiple',
                  listSingle: 'choices__list--single',
                  listDropdown: 'choices__list--dropdown',
                  item: 'choices__item',
                  itemSelectable: 'choices__item--selectable',
                  itemDisabled: 'choices__item--disabled',
                  itemChoice: 'choices__item--choice',
                  placeholder: 'choices__placeholder',
                  group: 'choices__group',
                  groupHeading: 'choices__heading',
                  button: 'choices__button',
                  activeState: 'is-active',
                  focusState: 'is-focused',
                  openState: 'is-open',
                  disabledState: 'is-disabled',
                  highlightedState: 'is-highlighted',
                  selectedState: 'is-selected',
                  flippedState: 'is-flipped',
                  loadingState: 'is-loading',
                  noResults: 'has-no-results',
                  noChoices: 'has-no-choices'
                };
                /** @type {Options} */

                var DEFAULT_CONFIG = {
                  items: [],
                  choices: [],
                  silent: false,
                  renderChoiceLimit: -1,
                  maxItemCount: -1,
                  addItems: true,
                  addItemFilter: null,
                  removeItems: true,
                  removeItemButton: false,
                  editItems: false,
                  duplicateItemsAllowed: true,
                  delimiter: ',',
                  paste: true,
                  searchEnabled: true,
                  searchChoices: true,
                  searchFloor: 1,
                  searchResultLimit: 4,
                  searchFields: ['label', 'value'],
                  position: 'auto',
                  resetScrollPosition: true,
                  shouldSort: true,
                  shouldSortItems: false,
                  sorter: sortByAlpha,
                  placeholder: true,
                  placeholderValue: null,
                  searchPlaceholderValue: null,
                  prependValue: null,
                  appendValue: null,
                  renderSelectedChoices: 'auto',
                  loadingText: 'Loading...',
                  noResultsText: 'No results found',
                  noChoicesText: 'No choices to choose from',
                  itemSelectText: 'Press to select',
                  uniqueItemText: 'Only unique values can be added',
                  customAddItemText:
                    'Only values matching specific conditions can be added',
                  addItemText: function addItemText(value) {
                    return (
                      ('Press Enter to add <b>"' + sanitise(value) + '"</b>')
                    );
                  },
                  maxItemText: function maxItemText(maxItemCount) {
                    return 'Only ' + maxItemCount + ' values can be added';
                  },
                  valueComparer: function valueComparer(value1, value2) {
                    return value1 === value2;
                  },
                  fuseOptions: {
                    includeScore: true
                  },
                  callbackOnInit: null,
                  callbackOnCreateTemplates: null,
                  classNames: DEFAULT_CLASSNAMES
                };
                var EVENTS = {
                  showDropdown: 'showDropdown',
                  hideDropdown: 'hideDropdown',
                  change: 'change',
                  choice: 'choice',
                  search: 'search',
                  addItem: 'addItem',
                  removeItem: 'removeItem',
                  highlightItem: 'highlightItem',
                  highlightChoice: 'highlightChoice'
                };
                var ACTION_TYPES = {
                  ADD_CHOICE: 'ADD_CHOICE',
                  FILTER_CHOICES: 'FILTER_CHOICES',
                  ACTIVATE_CHOICES: 'ACTIVATE_CHOICES',
                  CLEAR_CHOICES: 'CLEAR_CHOICES',
                  ADD_GROUP: 'ADD_GROUP',
                  ADD_ITEM: 'ADD_ITEM',
                  REMOVE_ITEM: 'REMOVE_ITEM',
                  HIGHLIGHT_ITEM: 'HIGHLIGHT_ITEM',
                  CLEAR_ALL: 'CLEAR_ALL'
                };
                var KEY_CODES = {
                  BACK_KEY: 46,
                  DELETE_KEY: 8,
                  ENTER_KEY: 13,
                  A_KEY: 65,
                  ESC_KEY: 27,
                  UP_KEY: 38,
                  DOWN_KEY: 40,
                  PAGE_UP_KEY: 33,
                  PAGE_DOWN_KEY: 34
                };
                var TEXT_TYPE = 'text';
                var SELECT_ONE_TYPE = 'select-one';
                var SELECT_MULTIPLE_TYPE = 'select-multiple';
                var SCROLLING_SPEED = 4;
                // CONCATENATED MODULE: ./src/scripts/components/container.js

                /**
                 * @typedef {import('../../../types/index').Choices.passedElement} passedElement
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 */

                var container_Container =
                  /*#__PURE__*/
                  (function() {
                    /**
                     * @param {{
                     *  element: HTMLElement,
                     *  type: passedElement['type'],
                     *  classNames: ClassNames,
                     *  position
                     * }} args
                     */
                    function Container(_ref) {
                      var element = _ref.element,
                        type = _ref.type,
                        classNames = _ref.classNames,
                        position = _ref.position;
                      this.element = element;
                      this.classNames = classNames;
                      this.type = type;
                      this.position = position;
                      this.isOpen = false;
                      this.isFlipped = false;
                      this.isFocussed = false;
                      this.isDisabled = false;
                      this.isLoading = false;
                      this._onFocus = this._onFocus.bind(this);
                      this._onBlur = this._onBlur.bind(this);
                    }

                    var _proto = Container.prototype;

                    _proto.addEventListeners = function addEventListeners() {
                      this.element.addEventListener('focus', this._onFocus);
                      this.element.addEventListener('blur', this._onBlur);
                    };

                    _proto.removeEventListeners = function removeEventListeners() {
                      this.element.removeEventListener('focus', this._onFocus);
                      this.element.removeEventListener('blur', this._onBlur);
                    };
                    /**
                     * Determine whether container should be flipped based on passed
                     * dropdown position
                     * @param {number} dropdownPos
                     * @returns {boolean}
                     */

                    _proto.shouldFlip = function shouldFlip(dropdownPos) {
                      if (typeof dropdownPos !== 'number') {
                        return false;
                      } // If flip is enabled and the dropdown bottom position is
                      // greater than the window height flip the dropdown.

                      var shouldFlip = false;

                      if (this.position === 'auto') {
                        shouldFlip = !window.matchMedia(
                          '(min-height: ' + (dropdownPos + 1) + 'px)'
                        ).matches;
                      } else if (this.position === 'top') {
                        shouldFlip = true;
                      }

                      return shouldFlip;
                    };
                    /**
                     * @param {string} activeDescendantID
                     */

                    _proto.setActiveDescendant = function setActiveDescendant(
                      activeDescendantID
                    ) {
                      this.element.setAttribute(
                        'aria-activedescendant',
                        activeDescendantID
                      );
                    };

                    _proto.removeActiveDescendant = function removeActiveDescendant() {
                      this.element.removeAttribute('aria-activedescendant');
                    };
                    /**
                     * @param {number} dropdownPos
                     */

                    _proto.open = function open(dropdownPos) {
                      this.element.classList.add(this.classNames.openState);
                      this.element.setAttribute('aria-expanded', 'true');
                      this.isOpen = true;

                      if (this.shouldFlip(dropdownPos)) {
                        this.element.classList.add(
                          this.classNames.flippedState
                        );
                        this.isFlipped = true;
                      }
                    };

                    _proto.close = function close() {
                      this.element.classList.remove(this.classNames.openState);
                      this.element.setAttribute('aria-expanded', 'false');
                      this.removeActiveDescendant();
                      this.isOpen = false; // A dropdown flips if it does not have space within the page

                      if (this.isFlipped) {
                        this.element.classList.remove(
                          this.classNames.flippedState
                        );
                        this.isFlipped = false;
                      }
                    };

                    _proto.focus = function focus() {
                      if (!this.isFocussed) {
                        this.element.focus();
                      }
                    };

                    _proto.addFocusState = function addFocusState() {
                      this.element.classList.add(this.classNames.focusState);
                    };

                    _proto.removeFocusState = function removeFocusState() {
                      this.element.classList.remove(this.classNames.focusState);
                    };

                    _proto.enable = function enable() {
                      this.element.classList.remove(
                        this.classNames.disabledState
                      );
                      this.element.removeAttribute('aria-disabled');

                      if (this.type === SELECT_ONE_TYPE) {
                        this.element.setAttribute('tabindex', '0');
                      }

                      this.isDisabled = false;
                    };

                    _proto.disable = function disable() {
                      this.element.classList.add(this.classNames.disabledState);
                      this.element.setAttribute('aria-disabled', 'true');

                      if (this.type === SELECT_ONE_TYPE) {
                        this.element.setAttribute('tabindex', '-1');
                      }

                      this.isDisabled = true;
                    };
                    /**
                     * @param {HTMLElement} element
                     */

                    _proto.wrap = function wrap(element) {
                      utils_wrap(element, this.element);
                    };
                    /**
                     * @param {Element} element
                     */

                    _proto.unwrap = function unwrap(element) {
                      // Move passed element outside this element
                      this.element.parentNode.insertBefore(
                        element,
                        this.element
                      ); // Remove this element

                      this.element.parentNode.removeChild(this.element);
                    };

                    _proto.addLoadingState = function addLoadingState() {
                      this.element.classList.add(this.classNames.loadingState);
                      this.element.setAttribute('aria-busy', 'true');
                      this.isLoading = true;
                    };

                    _proto.removeLoadingState = function removeLoadingState() {
                      this.element.classList.remove(
                        this.classNames.loadingState
                      );
                      this.element.removeAttribute('aria-busy');
                      this.isLoading = false;
                    };

                    _proto._onFocus = function _onFocus() {
                      this.isFocussed = true;
                    };

                    _proto._onBlur = function _onBlur() {
                      this.isFocussed = false;
                    };

                    return Container;
                  })();

                // CONCATENATED MODULE: ./src/scripts/components/input.js
                function input_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function input_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    input_defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    input_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.passedElement} passedElement
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 */

                var input_Input =
                  /*#__PURE__*/
                  (function() {
                    /**
                     * @param {{
                     *  element: HTMLInputElement,
                     *  type: passedElement['type'],
                     *  classNames: ClassNames,
                     *  preventPaste: boolean
                     * }} args
                     */
                    function Input(_ref) {
                      var element = _ref.element,
                        type = _ref.type,
                        classNames = _ref.classNames,
                        preventPaste = _ref.preventPaste;
                      this.element = element;
                      this.type = type;
                      this.classNames = classNames;
                      this.preventPaste = preventPaste;
                      this.isFocussed = this.element === document.activeElement;
                      this.isDisabled = element.disabled;
                      this._onPaste = this._onPaste.bind(this);
                      this._onInput = this._onInput.bind(this);
                      this._onFocus = this._onFocus.bind(this);
                      this._onBlur = this._onBlur.bind(this);
                    }
                    /**
                     * @param {string} placeholder
                     */

                    var _proto = Input.prototype;

                    _proto.addEventListeners = function addEventListeners() {
                      this.element.addEventListener('paste', this._onPaste);
                      this.element.addEventListener('input', this._onInput, {
                        passive: true
                      });
                      this.element.addEventListener('focus', this._onFocus, {
                        passive: true
                      });
                      this.element.addEventListener('blur', this._onBlur, {
                        passive: true
                      });
                    };

                    _proto.removeEventListeners = function removeEventListeners() {
                      this.element.removeEventListener('input', this._onInput, {
                        passive: true
                      });
                      this.element.removeEventListener('paste', this._onPaste);
                      this.element.removeEventListener('focus', this._onFocus, {
                        passive: true
                      });
                      this.element.removeEventListener('blur', this._onBlur, {
                        passive: true
                      });
                    };

                    _proto.enable = function enable() {
                      this.element.removeAttribute('disabled');
                      this.isDisabled = false;
                    };

                    _proto.disable = function disable() {
                      this.element.setAttribute('disabled', '');
                      this.isDisabled = true;
                    };

                    _proto.focus = function focus() {
                      if (!this.isFocussed) {
                        this.element.focus();
                      }
                    };

                    _proto.blur = function blur() {
                      if (this.isFocussed) {
                        this.element.blur();
                      }
                    };
                    /**
                     * Set value of input to blank
                     * @param {boolean} setWidth
                     * @returns {this}
                     */

                    _proto.clear = function clear(setWidth) {
                      if (setWidth === void 0) {
                        setWidth = true;
                      }

                      if (this.element.value) {
                        this.element.value = '';
                      }

                      if (setWidth) {
                        this.setWidth();
                      }

                      return this;
                    };
                    /**
                     * Set the correct input width based on placeholder
                     * value or input value
                     */

                    _proto.setWidth = function setWidth() {
                      // Resize input to contents or placeholder
                      var _this$element = this.element,
                        style = _this$element.style,
                        value = _this$element.value,
                        placeholder = _this$element.placeholder;
                      style.minWidth = placeholder.length + 1 + 'ch';
                      style.width = value.length + 1 + 'ch';
                    };
                    /**
                     * @param {string} activeDescendantID
                     */

                    _proto.setActiveDescendant = function setActiveDescendant(
                      activeDescendantID
                    ) {
                      this.element.setAttribute(
                        'aria-activedescendant',
                        activeDescendantID
                      );
                    };

                    _proto.removeActiveDescendant = function removeActiveDescendant() {
                      this.element.removeAttribute('aria-activedescendant');
                    };

                    _proto._onInput = function _onInput() {
                      if (this.type !== SELECT_ONE_TYPE) {
                        this.setWidth();
                      }
                    };
                    /**
                     * @param {Event} event
                     */

                    _proto._onPaste = function _onPaste(event) {
                      if (this.preventPaste) {
                        event.preventDefault();
                      }
                    };

                    _proto._onFocus = function _onFocus() {
                      this.isFocussed = true;
                    };

                    _proto._onBlur = function _onBlur() {
                      this.isFocussed = false;
                    };

                    input_createClass(Input, [
                      {
                        key: 'placeholder',
                        set: function set(placeholder) {
                          this.element.placeholder = placeholder;
                        }
                        /**
                         * @returns {string}
                         */
                      },
                      {
                        key: 'value',
                        get: function get() {
                          return sanitise(this.element.value);
                        },
                        /**
                         * @param {string} value
                         */
                        set: function set(value) {
                          this.element.value = value;
                        }
                      }
                    ]);

                    return Input;
                  })();

                // CONCATENATED MODULE: ./src/scripts/components/list.js

                /**
                 * @typedef {import('../../../types/index').Choices.Choice} Choice
                 */

                var list_List =
                  /*#__PURE__*/
                  (function() {
                    /**
                     * @param {{ element: HTMLElement }} args
                     */
                    function List(_ref) {
                      var element = _ref.element;
                      this.element = element;
                      this.scrollPos = this.element.scrollTop;
                      this.height = this.element.offsetHeight;
                    }

                    var _proto = List.prototype;

                    _proto.clear = function clear() {
                      this.element.innerHTML = '';
                    };
                    /**
                     * @param {Element | DocumentFragment} node
                     */

                    _proto.append = function append(node) {
                      this.element.appendChild(node);
                    };
                    /**
                     * @param {string} selector
                     * @returns {Element | null}
                     */

                    _proto.getChild = function getChild(selector) {
                      return this.element.querySelector(selector);
                    };
                    /**
                     * @returns {boolean}
                     */

                    _proto.hasChildren = function hasChildren() {
                      return this.element.hasChildNodes();
                    };

                    _proto.scrollToTop = function scrollToTop() {
                      this.element.scrollTop = 0;
                    };
                    /**
                     * @param {Element} element
                     * @param {1 | -1} direction
                     */

                    _proto.scrollToChildElement = function scrollToChildElement(
                      element,
                      direction
                    ) {
                      var _this = this;

                      if (!element) {
                        return;
                      }

                      var listHeight = this.element.offsetHeight; // Scroll position of dropdown

                      var listScrollPosition =
                        this.element.scrollTop + listHeight;
                      var elementHeight = element.offsetHeight; // Distance from bottom of element to top of parent

                      var elementPos = element.offsetTop + elementHeight; // Difference between the element and scroll position

                      var destination =
                        direction > 0
                          ? this.element.scrollTop +
                            elementPos -
                            listScrollPosition
                          : element.offsetTop;
                      requestAnimationFrame(function() {
                        _this._animateScroll(destination, direction);
                      });
                    };
                    /**
                     * @param {number} scrollPos
                     * @param {number} strength
                     * @param {number} destination
                     */

                    _proto._scrollDown = function _scrollDown(
                      scrollPos,
                      strength,
                      destination
                    ) {
                      var easing = (destination - scrollPos) / strength;
                      var distance = easing > 1 ? easing : 1;
                      this.element.scrollTop = scrollPos + distance;
                    };
                    /**
                     * @param {number} scrollPos
                     * @param {number} strength
                     * @param {number} destination
                     */

                    _proto._scrollUp = function _scrollUp(
                      scrollPos,
                      strength,
                      destination
                    ) {
                      var easing = (scrollPos - destination) / strength;
                      var distance = easing > 1 ? easing : 1;
                      this.element.scrollTop = scrollPos - distance;
                    };
                    /**
                     * @param {*} destination
                     * @param {*} direction
                     */

                    _proto._animateScroll = function _animateScroll(
                      destination,
                      direction
                    ) {
                      var _this2 = this;

                      var strength = SCROLLING_SPEED;
                      var choiceListScrollTop = this.element.scrollTop;
                      var continueAnimation = false;

                      if (direction > 0) {
                        this._scrollDown(
                          choiceListScrollTop,
                          strength,
                          destination
                        );

                        if (choiceListScrollTop < destination) {
                          continueAnimation = true;
                        }
                      } else {
                        this._scrollUp(
                          choiceListScrollTop,
                          strength,
                          destination
                        );

                        if (choiceListScrollTop > destination) {
                          continueAnimation = true;
                        }
                      }

                      if (continueAnimation) {
                        requestAnimationFrame(function() {
                          _this2._animateScroll(destination, direction);
                        });
                      }
                    };

                    return List;
                  })();

                // CONCATENATED MODULE: ./src/scripts/components/wrapped-element.js
                function wrapped_element_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function wrapped_element_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    wrapped_element_defineProperties(
                      Constructor.prototype,
                      protoProps
                    );
                  if (staticProps)
                    wrapped_element_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.passedElement} passedElement
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 */

                var wrapped_element_WrappedElement =
                  /*#__PURE__*/
                  (function() {
                    /**
                     * @param {{
                     *  element: HTMLInputElement | HTMLSelectElement,
                     *  classNames: ClassNames,
                     * }} args
                     */
                    function WrappedElement(_ref) {
                      var element = _ref.element,
                        classNames = _ref.classNames;
                      this.element = element;
                      this.classNames = classNames;

                      if (
                        !(element instanceof HTMLInputElement) &&
                        !(element instanceof HTMLSelectElement)
                      ) {
                        throw new TypeError('Invalid element passed');
                      }

                      this.isDisabled = false;
                    }

                    var _proto = WrappedElement.prototype;

                    _proto.conceal = function conceal() {
                      // Hide passed input
                      this.element.classList.add(this.classNames.input);
                      this.element.hidden = true; // Remove element from tab index

                      this.element.tabIndex = -1; // Backup original styles if any

                      var origStyle = this.element.getAttribute('style');

                      if (origStyle) {
                        this.element.setAttribute(
                          'data-choice-orig-style',
                          origStyle
                        );
                      }

                      this.element.setAttribute('data-choice', 'active');
                    };

                    _proto.reveal = function reveal() {
                      // Reinstate passed element
                      this.element.classList.remove(this.classNames.input);
                      this.element.hidden = false;
                      this.element.removeAttribute('tabindex'); // Recover original styles if any

                      var origStyle = this.element.getAttribute(
                        'data-choice-orig-style'
                      );

                      if (origStyle) {
                        this.element.removeAttribute('data-choice-orig-style');
                        this.element.setAttribute('style', origStyle);
                      } else {
                        this.element.removeAttribute('style');
                      }

                      this.element.removeAttribute('data-choice'); // Re-assign values - this is weird, I know
                      // @todo Figure out why we need to do this

                      this.element.value = this.element.value; // eslint-disable-line no-self-assign
                    };

                    _proto.enable = function enable() {
                      this.element.removeAttribute('disabled');
                      this.element.disabled = false;
                      this.isDisabled = false;
                    };

                    _proto.disable = function disable() {
                      this.element.setAttribute('disabled', '');
                      this.element.disabled = true;
                      this.isDisabled = true;
                    };

                    _proto.triggerEvent = function triggerEvent(
                      eventType,
                      data
                    ) {
                      dispatchEvent(this.element, eventType, data);
                    };

                    wrapped_element_createClass(WrappedElement, [
                      {
                        key: 'isActive',
                        get: function get() {
                          return this.element.dataset.choice === 'active';
                        }
                      },
                      {
                        key: 'dir',
                        get: function get() {
                          return this.element.dir;
                        }
                      },
                      {
                        key: 'value',
                        get: function get() {
                          return this.element.value;
                        },
                        set: function set(value) {
                          // you must define setter here otherwise it will be readonly property
                          this.element.value = value;
                        }
                      }
                    ]);

                    return WrappedElement;
                  })();

                // CONCATENATED MODULE: ./src/scripts/components/wrapped-input.js
                function wrapped_input_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function wrapped_input_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    wrapped_input_defineProperties(
                      Constructor.prototype,
                      protoProps
                    );
                  if (staticProps)
                    wrapped_input_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                function _inheritsLoose(subClass, superClass) {
                  subClass.prototype = Object.create(superClass.prototype);
                  subClass.prototype.constructor = subClass;
                  subClass.__proto__ = superClass;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 * @typedef {import('../../../types/index').Choices.Item} Item
                 */

                var WrappedInput =
                  /*#__PURE__*/
                  (function(_WrappedElement) {
                    _inheritsLoose(WrappedInput, _WrappedElement);

                    /**
                     * @param {{
                     *  element: HTMLInputElement,
                     *  classNames: ClassNames,
                     *  delimiter: string
                     * }} args
                     */
                    function WrappedInput(_ref) {
                      var _this;

                      var element = _ref.element,
                        classNames = _ref.classNames,
                        delimiter = _ref.delimiter;
                      _this =
                        _WrappedElement.call(this, {
                          element: element,
                          classNames: classNames
                        }) || this;
                      _this.delimiter = delimiter;
                      return _this;
                    }
                    /**
                     * @returns {string}
                     */

                    wrapped_input_createClass(WrappedInput, [
                      {
                        key: 'value',
                        get: function get() {
                          return this.element.value;
                        },
                        /**
                         * @param {Item[]} items
                         */
                        set: function set(items) {
                          var itemValues = items.map(function(_ref2) {
                            var value = _ref2.value;
                            return value;
                          });
                          var joinedValues = itemValues.join(this.delimiter);
                          this.element.setAttribute('value', joinedValues);
                          this.element.value = joinedValues;
                        }
                      }
                    ]);

                    return WrappedInput;
                  })(wrapped_element_WrappedElement);

                // CONCATENATED MODULE: ./src/scripts/components/wrapped-select.js
                function wrapped_select_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function wrapped_select_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    wrapped_select_defineProperties(
                      Constructor.prototype,
                      protoProps
                    );
                  if (staticProps)
                    wrapped_select_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                function wrapped_select_inheritsLoose(subClass, superClass) {
                  subClass.prototype = Object.create(superClass.prototype);
                  subClass.prototype.constructor = subClass;
                  subClass.__proto__ = superClass;
                }

                /**
                 * @typedef {import('../../../types/index').Choices.ClassNames} ClassNames
                 * @typedef {import('../../../types/index').Choices.Item} Item
                 * @typedef {import('../../../types/index').Choices.Choice} Choice
                 */

                var WrappedSelect =
                  /*#__PURE__*/
                  (function(_WrappedElement) {
                    wrapped_select_inheritsLoose(
                      WrappedSelect,
                      _WrappedElement
                    );

                    /**
                     * @param {{
                     *  element: HTMLSelectElement,
                     *  classNames: ClassNames,
                     *  delimiter: string
                     *  template: function
                     * }} args
                     */
                    function WrappedSelect(_ref) {
                      var _this;

                      var element = _ref.element,
                        classNames = _ref.classNames,
                        template = _ref.template;
                      _this =
                        _WrappedElement.call(this, {
                          element: element,
                          classNames: classNames
                        }) || this;
                      _this.template = template;
                      return _this;
                    }

                    var _proto = WrappedSelect.prototype;

                    /**
                     * @param {DocumentFragment} fragment
                     */
                    _proto.appendDocFragment = function appendDocFragment(
                      fragment
                    ) {
                      this.element.innerHTML = '';
                      this.element.appendChild(fragment);
                    };

                    wrapped_select_createClass(WrappedSelect, [
                      {
                        key: 'placeholderOption',
                        get: function get() {
                          return (
                            this.element.querySelector('option[value=""]') || // Backward compatibility layer for the non-standard placeholder attribute supported in older versions.
                            this.element.querySelector('option[placeholder]')
                          );
                        }
                        /**
                         * @returns {Element[]}
                         */
                      },
                      {
                        key: 'optionGroups',
                        get: function get() {
                          return Array.from(
                            this.element.getElementsByTagName('OPTGROUP')
                          );
                        }
                        /**
                         * @returns {Item[] | Choice[]}
                         */
                      },
                      {
                        key: 'options',
                        get: function get() {
                          return Array.from(this.element.options);
                        },
                        /**
                         * @param {Item[] | Choice[]} options
                         */
                        set: function set(options) {
                          var _this2 = this;

                          var fragment = document.createDocumentFragment();

                          var addOptionToFragment = function addOptionToFragment(
                            data
                          ) {
                            // Create a standard select option
                            var option = _this2.template(data); // Append it to fragment

                            fragment.appendChild(option);
                          }; // Add each list item to list

                          options.forEach(function(optionData) {
                            return addOptionToFragment(optionData);
                          });
                          this.appendDocFragment(fragment);
                        }
                      }
                    ]);

                    return WrappedSelect;
                  })(wrapped_element_WrappedElement);

                // CONCATENATED MODULE: ./src/scripts/components/index.js

                // CONCATENATED MODULE: ./src/scripts/templates.js
                /**
                 * Helpers to create HTML elements used by Choices
                 * Can be overridden by providing `callbackOnCreateTemplates` option
                 * @typedef {import('../../types/index').Choices.Templates} Templates
                 * @typedef {import('../../types/index').Choices.ClassNames} ClassNames
                 * @typedef {import('../../types/index').Choices.Options} Options
                 * @typedef {import('../../types/index').Choices.Item} Item
                 * @typedef {import('../../types/index').Choices.Choice} Choice
                 * @typedef {import('../../types/index').Choices.Group} Group
                 */
                var TEMPLATES =
                  /** @type {Templates} */
                  {
                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {"ltr" | "rtl" | "auto"} dir
                     * @param {boolean} isSelectElement
                     * @param {boolean} isSelectOneElement
                     * @param {boolean} searchEnabled
                     * @param {"select-one" | "select-multiple" | "text"} passedElementType
                     */
                    containerOuter: function containerOuter(
                      _ref,
                      dir,
                      isSelectElement,
                      isSelectOneElement,
                      searchEnabled,
                      passedElementType
                    ) {
                      var _containerOuter = _ref.containerOuter;
                      var div = Object.assign(document.createElement('div'), {
                        className: _containerOuter
                      });
                      div.dataset.type = passedElementType;

                      if (dir) {
                        div.dir = dir;
                      }

                      if (isSelectOneElement) {
                        div.tabIndex = 0;
                      }

                      if (isSelectElement) {
                        div.setAttribute(
                          'role',
                          searchEnabled ? 'combobox' : 'listbox'
                        );

                        if (searchEnabled) {
                          div.setAttribute('aria-autocomplete', 'list');
                        }
                      }

                      div.setAttribute('aria-haspopup', 'true');
                      div.setAttribute('aria-expanded', 'false');
                      return div;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     */
                    containerInner: function containerInner(_ref2) {
                      var _containerInner = _ref2.containerInner;
                      return Object.assign(document.createElement('div'), {
                        className: _containerInner
                      });
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {boolean} isSelectOneElement
                     */
                    itemList: function itemList(_ref3, isSelectOneElement) {
                      var list = _ref3.list,
                        listSingle = _ref3.listSingle,
                        listItems = _ref3.listItems;
                      return Object.assign(document.createElement('div'), {
                        className:
                          list +
                          ' ' +
                          (isSelectOneElement ? listSingle : listItems)
                      });
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {string} value
                     */
                    placeholder: function placeholder(_ref4, value) {
                      var _placeholder = _ref4.placeholder;
                      return Object.assign(document.createElement('div'), {
                        className: _placeholder,
                        innerHTML: value
                      });
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {Item} item
                     * @param {boolean} removeItemButton
                     */
                    item: function item(_ref5, _ref6, removeItemButton) {
                      var _item = _ref5.item,
                        button = _ref5.button,
                        highlightedState = _ref5.highlightedState,
                        itemSelectable = _ref5.itemSelectable,
                        placeholder = _ref5.placeholder;
                      var id = _ref6.id,
                        value = _ref6.value,
                        label = _ref6.label,
                        customProperties = _ref6.customProperties,
                        active = _ref6.active,
                        disabled = _ref6.disabled,
                        highlighted = _ref6.highlighted,
                        isPlaceholder = _ref6.placeholder;
                      var div = Object.assign(document.createElement('div'), {
                        className: _item,
                        innerHTML: label
                      });
                      Object.assign(div.dataset, {
                        item: '',
                        id: id,
                        value: value,
                        customProperties: customProperties
                      });

                      if (active) {
                        div.setAttribute('aria-selected', 'true');
                      }

                      if (disabled) {
                        div.setAttribute('aria-disabled', 'true');
                      }

                      if (isPlaceholder) {
                        div.classList.add(placeholder);
                      }

                      div.classList.add(
                        highlighted ? highlightedState : itemSelectable
                      );

                      if (removeItemButton) {
                        if (disabled) {
                          div.classList.remove(itemSelectable);
                        }

                        div.dataset.deletable = '';
                        /** @todo This MUST be localizable, not hardcoded! */

                        var REMOVE_ITEM_TEXT = 'Remove item';
                        var removeButton = Object.assign(
                          document.createElement('button'),
                          {
                            type: 'button',
                            className: button,
                            innerHTML: REMOVE_ITEM_TEXT
                          }
                        );
                        removeButton.setAttribute(
                          'aria-label',
                          REMOVE_ITEM_TEXT + ": '" + value + "'"
                        );
                        removeButton.dataset.button = '';
                        div.appendChild(removeButton);
                      }

                      return div;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {boolean} isSelectOneElement
                     */
                    choiceList: function choiceList(_ref7, isSelectOneElement) {
                      var list = _ref7.list;
                      var div = Object.assign(document.createElement('div'), {
                        className: list
                      });

                      if (!isSelectOneElement) {
                        div.setAttribute('aria-multiselectable', 'true');
                      }

                      div.setAttribute('role', 'listbox');
                      return div;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {Group} group
                     */
                    choiceGroup: function choiceGroup(_ref8, _ref9) {
                      var group = _ref8.group,
                        groupHeading = _ref8.groupHeading,
                        itemDisabled = _ref8.itemDisabled;
                      var id = _ref9.id,
                        value = _ref9.value,
                        disabled = _ref9.disabled;
                      var div = Object.assign(document.createElement('div'), {
                        className: group + ' ' + (disabled ? itemDisabled : '')
                      });
                      div.setAttribute('role', 'group');
                      Object.assign(div.dataset, {
                        group: '',
                        id: id,
                        value: value
                      });

                      if (disabled) {
                        div.setAttribute('aria-disabled', 'true');
                      }

                      div.appendChild(
                        Object.assign(document.createElement('div'), {
                          className: groupHeading,
                          innerHTML: value
                        })
                      );
                      return div;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {Choice} choice
                     * @param {Options['itemSelectText']} selectText
                     */
                    choice: function choice(_ref10, _ref11, selectText) {
                      var item = _ref10.item,
                        itemChoice = _ref10.itemChoice,
                        itemSelectable = _ref10.itemSelectable,
                        selectedState = _ref10.selectedState,
                        itemDisabled = _ref10.itemDisabled,
                        placeholder = _ref10.placeholder;
                      var id = _ref11.id,
                        value = _ref11.value,
                        label = _ref11.label,
                        groupId = _ref11.groupId,
                        elementId = _ref11.elementId,
                        isDisabled = _ref11.disabled,
                        isSelected = _ref11.selected,
                        isPlaceholder = _ref11.placeholder;
                      var div = Object.assign(document.createElement('div'), {
                        id: elementId,
                        innerHTML: label,
                        className: item + ' ' + itemChoice
                      });

                      if (isSelected) {
                        div.classList.add(selectedState);
                      }

                      if (isPlaceholder) {
                        div.classList.add(placeholder);
                      }

                      div.setAttribute(
                        'role',
                        groupId > 0 ? 'treeitem' : 'option'
                      );
                      Object.assign(div.dataset, {
                        choice: '',
                        id: id,
                        value: value,
                        selectText: selectText
                      });

                      if (isDisabled) {
                        div.classList.add(itemDisabled);
                        div.dataset.choiceDisabled = '';
                        div.setAttribute('aria-disabled', 'true');
                      } else {
                        div.classList.add(itemSelectable);
                        div.dataset.choiceSelectable = '';
                      }

                      return div;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     * @param {string} placeholderValue
                     */
                    input: function input(_ref12, placeholderValue) {
                      var _input = _ref12.input,
                        inputCloned = _ref12.inputCloned;
                      var inp = Object.assign(document.createElement('input'), {
                        type: 'text',
                        className: _input + ' ' + inputCloned,
                        autocomplete: 'off',
                        autocapitalize: 'off',
                        spellcheck: false
                      });
                      inp.setAttribute('role', 'textbox');
                      inp.setAttribute('aria-autocomplete', 'list');
                      inp.setAttribute('aria-label', placeholderValue);
                      return inp;
                    },

                    /**
                     * @param {Partial<ClassNames>} classNames
                     */
                    dropdown: function dropdown(_ref13) {
                      var list = _ref13.list,
                        listDropdown = _ref13.listDropdown;
                      var div = document.createElement('div');
                      div.classList.add(list, listDropdown);
                      div.setAttribute('aria-expanded', 'false');
                      return div;
                    },

                    /**
                     *
                     * @param {Partial<ClassNames>} classNames
                     * @param {string} innerHTML
                     * @param {"no-choices" | "no-results" | ""} type
                     */
                    notice: function notice(_ref14, innerHTML, type) {
                      var item = _ref14.item,
                        itemChoice = _ref14.itemChoice,
                        noResults = _ref14.noResults,
                        noChoices = _ref14.noChoices;

                      if (type === void 0) {
                        type = '';
                      }

                      var classes = [item, itemChoice];

                      if (type === 'no-choices') {
                        classes.push(noChoices);
                      } else if (type === 'no-results') {
                        classes.push(noResults);
                      }

                      return Object.assign(document.createElement('div'), {
                        innerHTML: innerHTML,
                        className: classes.join(' ')
                      });
                    },

                    /**
                     * @param {Item} option
                     */
                    option: function option(_ref15) {
                      var label = _ref15.label,
                        value = _ref15.value,
                        customProperties = _ref15.customProperties,
                        active = _ref15.active,
                        disabled = _ref15.disabled;
                      var opt = new Option(label, value, false, active);

                      if (customProperties) {
                        opt.dataset.customProperties = customProperties;
                      }

                      opt.disabled = disabled;
                      return opt;
                    }
                  };
                /* harmony default export */ var templates = TEMPLATES;
                // CONCATENATED MODULE: ./src/scripts/actions/choices.js
                /**
                 * @typedef {import('redux').Action} Action
                 * @typedef {import('../../../types/index').Choices.Choice} Choice
                 */

                /**
                 * @argument {Choice} choice
                 * @returns {Action & Choice}
                 */

                var choices_addChoice = function addChoice(_ref) {
                  var value = _ref.value,
                    label = _ref.label,
                    id = _ref.id,
                    groupId = _ref.groupId,
                    disabled = _ref.disabled,
                    elementId = _ref.elementId,
                    customProperties = _ref.customProperties,
                    placeholder = _ref.placeholder,
                    keyCode = _ref.keyCode;
                  return {
                    type: ACTION_TYPES.ADD_CHOICE,
                    value: value,
                    label: label,
                    id: id,
                    groupId: groupId,
                    disabled: disabled,
                    elementId: elementId,
                    customProperties: customProperties,
                    placeholder: placeholder,
                    keyCode: keyCode
                  };
                };
                /**
                 * @argument {Choice[]} results
                 * @returns {Action & { results: Choice[] }}
                 */

                var choices_filterChoices = function filterChoices(results) {
                  return {
                    type: ACTION_TYPES.FILTER_CHOICES,
                    results: results
                  };
                };
                /**
                 * @argument {boolean} active
                 * @returns {Action & { active: boolean }}
                 */

                var choices_activateChoices = function activateChoices(active) {
                  if (active === void 0) {
                    active = true;
                  }

                  return {
                    type: ACTION_TYPES.ACTIVATE_CHOICES,
                    active: active
                  };
                };
                /**
                 * @returns {Action}
                 */

                var choices_clearChoices = function clearChoices() {
                  return {
                    type: ACTION_TYPES.CLEAR_CHOICES
                  };
                };
                // CONCATENATED MODULE: ./src/scripts/actions/items.js

                /**
                 * @typedef {import('redux').Action} Action
                 * @typedef {import('../../../types/index').Choices.Item} Item
                 */

                /**
                 * @param {Item} item
                 * @returns {Action & Item}
                 */

                var items_addItem = function addItem(_ref) {
                  var value = _ref.value,
                    label = _ref.label,
                    id = _ref.id,
                    choiceId = _ref.choiceId,
                    groupId = _ref.groupId,
                    customProperties = _ref.customProperties,
                    placeholder = _ref.placeholder,
                    keyCode = _ref.keyCode;
                  return {
                    type: ACTION_TYPES.ADD_ITEM,
                    value: value,
                    label: label,
                    id: id,
                    choiceId: choiceId,
                    groupId: groupId,
                    customProperties: customProperties,
                    placeholder: placeholder,
                    keyCode: keyCode
                  };
                };
                /**
                 * @param {string} id
                 * @param {string} choiceId
                 * @returns {Action & { id: string, choiceId: string }}
                 */

                var items_removeItem = function removeItem(id, choiceId) {
                  return {
                    type: ACTION_TYPES.REMOVE_ITEM,
                    id: id,
                    choiceId: choiceId
                  };
                };
                /**
                 * @param {string} id
                 * @param {boolean} highlighted
                 * @returns {Action & { id: string, highlighted: boolean }}
                 */

                var items_highlightItem = function highlightItem(
                  id,
                  highlighted
                ) {
                  return {
                    type: ACTION_TYPES.HIGHLIGHT_ITEM,
                    id: id,
                    highlighted: highlighted
                  };
                };
                // CONCATENATED MODULE: ./src/scripts/actions/groups.js

                /**
                 * @typedef {import('redux').Action} Action
                 * @typedef {import('../../../types/index').Choices.Group} Group
                 */

                /**
                 * @param {Group} group
                 * @returns {Action & Group}
                 */

                var groups_addGroup = function addGroup(_ref) {
                  var value = _ref.value,
                    id = _ref.id,
                    active = _ref.active,
                    disabled = _ref.disabled;
                  return {
                    type: ACTION_TYPES.ADD_GROUP,
                    value: value,
                    id: id,
                    active: active,
                    disabled: disabled
                  };
                };
                // CONCATENATED MODULE: ./src/scripts/actions/misc.js
                /**
                 * @typedef {import('redux').Action} Action
                 */

                /**
                 * @returns {Action}
                 */
                var clearAll = function clearAll() {
                  return {
                    type: 'CLEAR_ALL'
                  };
                };
                /**
                 * @param {any} state
                 * @returns {Action & { state: object }}
                 */

                var resetTo = function resetTo(state) {
                  return {
                    type: 'RESET_TO',
                    state: state
                  };
                };
                /**
                 * @param {boolean} isLoading
                 * @returns {Action & { isLoading: boolean }}
                 */

                var setIsLoading = function setIsLoading(isLoading) {
                  return {
                    type: 'SET_IS_LOADING',
                    isLoading: isLoading
                  };
                };
                // CONCATENATED MODULE: ./src/scripts/choices.js
                function choices_defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }

                function choices_createClass(
                  Constructor,
                  protoProps,
                  staticProps
                ) {
                  if (protoProps)
                    choices_defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    choices_defineProperties(Constructor, staticProps);
                  return Constructor;
                }

                /** @see {@link http://browserhacks.com/#hack-acea075d0ac6954f275a70023906050c} */

                var IS_IE11 =
                  '-ms-scroll-limit' in document.documentElement.style &&
                  '-ms-ime-align' in document.documentElement.style;
                /**
                 * @typedef {import('../../types/index').Choices.Choice} Choice
                 * @typedef {import('../../types/index').Choices.Item} Item
                 * @typedef {import('../../types/index').Choices.Group} Group
                 * @typedef {import('../../types/index').Choices.Options} Options
                 */

                /** @type {Partial<Options>} */

                var USER_DEFAULTS = {};
                /**
                 * Choices
                 * @author Josh Johnson<josh@joshuajohnson.co.uk>
                 */

                var choices_Choices =
                  /*#__PURE__*/
                  (function() {
                    choices_createClass(Choices, null, [
                      {
                        key: 'defaults',
                        get: function get() {
                          return Object.preventExtensions({
                            get options() {
                              return USER_DEFAULTS;
                            },

                            get templates() {
                              return TEMPLATES;
                            }
                          });
                        }
                        /**
                         * @param {string | HTMLInputElement | HTMLSelectElement} element
                         * @param {Partial<Options>} userConfig
                         */
                      }
                    ]);

                    function Choices(element, userConfig) {
                      var _this = this;

                      if (element === void 0) {
                        element = '[data-choice]';
                      }

                      if (userConfig === void 0) {
                        userConfig = {};
                      }

                      /** @type {Partial<Options>} */
                      this.config = cjs_default.a.all(
                        [DEFAULT_CONFIG, Choices.defaults.options, userConfig], // When merging array configs, replace with a copy of the userConfig array,
                        // instead of concatenating with the default array
                        {
                          arrayMerge: function arrayMerge(_, sourceArray) {
                            return [].concat(sourceArray);
                          }
                        }
                      );
                      var invalidConfigOptions = diff(
                        this.config,
                        DEFAULT_CONFIG
                      );

                      if (invalidConfigOptions.length) {
                        console.warn(
                          'Unknown config option(s) passed',
                          invalidConfigOptions.join(', ')
                        );
                      }

                      var passedElement =
                        typeof element === 'string'
                          ? document.querySelector(element)
                          : element;

                      if (
                        !(
                          passedElement instanceof HTMLInputElement ||
                          passedElement instanceof HTMLSelectElement
                        )
                      ) {
                        throw TypeError(
                          'Expected one of the following types text|select-one|select-multiple'
                        );
                      }

                      this._isTextElement = passedElement.type === TEXT_TYPE;
                      this._isSelectOneElement =
                        passedElement.type === SELECT_ONE_TYPE;
                      this._isSelectMultipleElement =
                        passedElement.type === SELECT_MULTIPLE_TYPE;
                      this._isSelectElement =
                        this._isSelectOneElement ||
                        this._isSelectMultipleElement;
                      this.config.searchEnabled =
                        this._isSelectMultipleElement ||
                        this.config.searchEnabled;

                      if (
                        !['auto', 'always'].includes(
                          this.config.renderSelectedChoices
                        )
                      ) {
                        this.config.renderSelectedChoices = 'auto';
                      }

                      if (
                        userConfig.addItemFilter &&
                        typeof userConfig.addItemFilter !== 'function'
                      ) {
                        var re =
                          userConfig.addItemFilter instanceof RegExp
                            ? userConfig.addItemFilter
                            : new RegExp(userConfig.addItemFilter);
                        this.config.addItemFilter = re.test.bind(re);
                      }

                      if (this._isTextElement) {
                        this.passedElement = new WrappedInput({
                          element: passedElement,
                          classNames: this.config.classNames,
                          delimiter: this.config.delimiter
                        });
                      } else {
                        this.passedElement = new WrappedSelect({
                          element: passedElement,
                          classNames: this.config.classNames,
                          template: function template(data) {
                            return _this._templates.option(data);
                          }
                        });
                      }

                      this.initialised = false;
                      this._store = new store_Store();
                      this._initialState = {};
                      this._currentState = {};
                      this._prevState = {};
                      this._currentValue = '';
                      this._canSearch = this.config.searchEnabled;
                      this._isScrollingOnIe = false;
                      this._highlightPosition = 0;
                      this._wasTap = true;
                      this._placeholderValue = this._generatePlaceholderValue();
                      this._baseId = generateId(
                        this.passedElement.element,
                        'choices-'
                      );
                      /**
                       * setting direction in cases where it's explicitly set on passedElement
                       * or when calculated direction is different from the document
                       * @type {HTMLElement['dir']}
                       */

                      this._direction = this.passedElement.dir;

                      if (!this._direction) {
                        var _window$getComputedSt = window.getComputedStyle(
                            this.passedElement.element
                          ),
                          elementDirection = _window$getComputedSt.direction;

                        var _window$getComputedSt2 = window.getComputedStyle(
                            document.documentElement
                          ),
                          documentDirection = _window$getComputedSt2.direction;

                        if (elementDirection !== documentDirection) {
                          this._direction = elementDirection;
                        }
                      }

                      this._idNames = {
                        itemChoice: 'item-choice'
                      }; // Assign preset groups from passed element

                      this._presetGroups = this.passedElement.optionGroups; // Assign preset options from passed element

                      this._presetOptions = this.passedElement.options; // Assign preset choices from passed object

                      this._presetChoices = this.config.choices; // Assign preset items from passed object first

                      this._presetItems = this.config.items; // Add any values passed from attribute

                      if (this.passedElement.value) {
                        this._presetItems = this._presetItems.concat(
                          this.passedElement.value.split(this.config.delimiter)
                        );
                      } // Create array of choices from option elements

                      if (this.passedElement.options) {
                        this.passedElement.options.forEach(function(o) {
                          _this._presetChoices.push({
                            value: o.value,
                            label: o.innerHTML,
                            selected: o.selected,
                            disabled: o.disabled || o.parentNode.disabled,
                            placeholder:
                              o.value === '' || o.hasAttribute('placeholder'),
                            customProperties: o.getAttribute(
                              'data-custom-properties'
                            )
                          });
                        });
                      }

                      this._render = this._render.bind(this);
                      this._onFocus = this._onFocus.bind(this);
                      this._onBlur = this._onBlur.bind(this);
                      this._onKeyUp = this._onKeyUp.bind(this);
                      this._onKeyDown = this._onKeyDown.bind(this);
                      this._onClick = this._onClick.bind(this);
                      this._onTouchMove = this._onTouchMove.bind(this);
                      this._onTouchEnd = this._onTouchEnd.bind(this);
                      this._onMouseDown = this._onMouseDown.bind(this);
                      this._onMouseOver = this._onMouseOver.bind(this);
                      this._onFormReset = this._onFormReset.bind(this);
                      this._onAKey = this._onAKey.bind(this);
                      this._onEnterKey = this._onEnterKey.bind(this);
                      this._onEscapeKey = this._onEscapeKey.bind(this);
                      this._onDirectionKey = this._onDirectionKey.bind(this);
                      this._onDeleteKey = this._onDeleteKey.bind(this); // If element has already been initialised with Choices, fail silently

                      if (this.passedElement.isActive) {
                        if (!this.config.silent) {
                          console.warn(
                            'Trying to initialise Choices on element already initialised'
                          );
                        }

                        this.initialised = true;
                        return;
                      } // Let's go

                      this.init();
                    }

                    var _proto = Choices.prototype;

                    _proto.init = function init() {
                      if (this.initialised) {
                        return;
                      }

                      this._createTemplates();

                      this._createElements();

                      this._createStructure(); // Set initial state (We need to clone the state because some reducers
                      // modify the inner objects properties in the state) 🤢

                      this._initialState = cloneObject(this._store.state);

                      this._store.subscribe(this._render);

                      this._render();

                      this._addEventListeners();

                      var shouldDisable =
                        !this.config.addItems ||
                        this.passedElement.element.hasAttribute('disabled');

                      if (shouldDisable) {
                        this.disable();
                      }

                      this.initialised = true;
                      var callbackOnInit = this.config.callbackOnInit; // Run callback if it is a function

                      if (
                        callbackOnInit &&
                        typeof callbackOnInit === 'function'
                      ) {
                        callbackOnInit.call(this);
                      }
                    };

                    _proto.destroy = function destroy() {
                      if (!this.initialised) {
                        return;
                      }

                      this._removeEventListeners();

                      this.passedElement.reveal();
                      this.containerOuter.unwrap(this.passedElement.element);
                      this.clearStore();

                      if (this._isSelectElement) {
                        this.passedElement.options = this._presetOptions;
                      }

                      this._templates = null;
                      this.initialised = false;
                    };

                    _proto.enable = function enable() {
                      if (this.passedElement.isDisabled) {
                        this.passedElement.enable();
                      }

                      if (this.containerOuter.isDisabled) {
                        this._addEventListeners();

                        this.input.enable();
                        this.containerOuter.enable();
                      }

                      return this;
                    };

                    _proto.disable = function disable() {
                      if (!this.passedElement.isDisabled) {
                        this.passedElement.disable();
                      }

                      if (!this.containerOuter.isDisabled) {
                        this._removeEventListeners();

                        this.input.disable();
                        this.containerOuter.disable();
                      }

                      return this;
                    };

                    _proto.highlightItem = function highlightItem(
                      item,
                      runEvent
                    ) {
                      if (runEvent === void 0) {
                        runEvent = true;
                      }

                      if (!item) {
                        return this;
                      }

                      var id = item.id,
                        _item$groupId = item.groupId,
                        groupId = _item$groupId === void 0 ? -1 : _item$groupId,
                        _item$value = item.value,
                        value = _item$value === void 0 ? '' : _item$value,
                        _item$label = item.label,
                        label = _item$label === void 0 ? '' : _item$label;
                      var group =
                        groupId >= 0 ? this._store.getGroupById(groupId) : null;

                      this._store.dispatch(items_highlightItem(id, true));

                      if (runEvent) {
                        this.passedElement.triggerEvent(EVENTS.highlightItem, {
                          id: id,
                          value: value,
                          label: label,
                          groupValue: group && group.value ? group.value : null
                        });
                      }

                      return this;
                    };

                    _proto.unhighlightItem = function unhighlightItem(item) {
                      if (!item) {
                        return this;
                      }

                      var id = item.id,
                        _item$groupId2 = item.groupId,
                        groupId =
                          _item$groupId2 === void 0 ? -1 : _item$groupId2,
                        _item$value2 = item.value,
                        value = _item$value2 === void 0 ? '' : _item$value2,
                        _item$label2 = item.label,
                        label = _item$label2 === void 0 ? '' : _item$label2;
                      var group =
                        groupId >= 0 ? this._store.getGroupById(groupId) : null;

                      this._store.dispatch(items_highlightItem(id, false));

                      this.passedElement.triggerEvent(EVENTS.highlightItem, {
                        id: id,
                        value: value,
                        label: label,
                        groupValue: group && group.value ? group.value : null
                      });
                      return this;
                    };

                    _proto.highlightAll = function highlightAll() {
                      var _this2 = this;

                      this._store.items.forEach(function(item) {
                        return _this2.highlightItem(item);
                      });

                      return this;
                    };

                    _proto.unhighlightAll = function unhighlightAll() {
                      var _this3 = this;

                      this._store.items.forEach(function(item) {
                        return _this3.unhighlightItem(item);
                      });

                      return this;
                    };

                    _proto.removeActiveItemsByValue = function removeActiveItemsByValue(
                      value
                    ) {
                      var _this4 = this;

                      this._store.activeItems
                        .filter(function(item) {
                          return item.value === value;
                        })
                        .forEach(function(item) {
                          return _this4._removeItem(item);
                        });

                      return this;
                    };

                    _proto.removeActiveItems = function removeActiveItems(
                      excludedId
                    ) {
                      var _this5 = this;

                      this._store.activeItems
                        .filter(function(_ref) {
                          var id = _ref.id;
                          return id !== excludedId;
                        })
                        .forEach(function(item) {
                          return _this5._removeItem(item);
                        });

                      return this;
                    };

                    _proto.removeHighlightedItems = function removeHighlightedItems(
                      runEvent
                    ) {
                      var _this6 = this;

                      if (runEvent === void 0) {
                        runEvent = false;
                      }

                      this._store.highlightedActiveItems.forEach(function(
                        item
                      ) {
                        _this6._removeItem(item); // If this action was performed by the user
                        // trigger the event

                        if (runEvent) {
                          _this6._triggerChange(item.value);
                        }
                      });

                      return this;
                    };

                    _proto.showDropdown = function showDropdown(
                      preventInputFocus
                    ) {
                      var _this7 = this;

                      if (this.dropdown.isActive) {
                        return this;
                      }

                      requestAnimationFrame(function() {
                        _this7.dropdown.show();

                        _this7.containerOuter.open(
                          _this7.dropdown.distanceFromTopWindow
                        );

                        if (!preventInputFocus && _this7._canSearch) {
                          _this7.input.focus();
                        }

                        _this7.passedElement.triggerEvent(
                          EVENTS.showDropdown,
                          {}
                        );
                      });
                      return this;
                    };

                    _proto.hideDropdown = function hideDropdown(
                      preventInputBlur
                    ) {
                      var _this8 = this;

                      if (!this.dropdown.isActive) {
                        return this;
                      }

                      requestAnimationFrame(function() {
                        _this8.dropdown.hide();

                        _this8.containerOuter.close();

                        if (!preventInputBlur && _this8._canSearch) {
                          _this8.input.removeActiveDescendant();

                          _this8.input.blur();
                        }

                        _this8.passedElement.triggerEvent(
                          EVENTS.hideDropdown,
                          {}
                        );
                      });
                      return this;
                    };

                    _proto.getValue = function getValue(valueOnly) {
                      if (valueOnly === void 0) {
                        valueOnly = false;
                      }

                      var values = this._store.activeItems.reduce(function(
                        selectedItems,
                        item
                      ) {
                        var itemValue = valueOnly ? item.value : item;
                        selectedItems.push(itemValue);
                        return selectedItems;
                      },
                      []);

                      return this._isSelectOneElement ? values[0] : values;
                    };
                    /**
                     * @param {string[] | import('../../types/index').Choices.Item[]} items
                     */

                    _proto.setValue = function setValue(items) {
                      var _this9 = this;

                      if (!this.initialised) {
                        return this;
                      }

                      items.forEach(function(value) {
                        return _this9._setChoiceOrItem(value);
                      });
                      return this;
                    };

                    _proto.setChoiceByValue = function setChoiceByValue(value) {
                      var _this10 = this;

                      if (!this.initialised || this._isTextElement) {
                        return this;
                      } // If only one value has been passed, convert to array

                      var choiceValue = Array.isArray(value) ? value : [value]; // Loop through each value and

                      choiceValue.forEach(function(val) {
                        return _this10._findAndSelectChoiceByValue(val);
                      });
                      return this;
                    };
                    /**
                     * Set choices of select input via an array of objects (or function that returns array of object or promise of it),
                     * a value field name and a label field name.
                     * This behaves the same as passing items via the choices option but can be called after initialising Choices.
                     * This can also be used to add groups of choices (see example 2); Optionally pass a true `replaceChoices` value to remove any existing choices.
                     * Optionally pass a `customProperties` object to add additional data to your choices (useful when searching/filtering etc).
                     *
                     * **Input types affected:** select-one, select-multiple
                     *
                     * @template {Choice[] | ((instance: Choices) => object[] | Promise<object[]>)} T
                     * @param {T} [choicesArrayOrFetcher]
                     * @param {string} [value = 'value'] - name of `value` field
                     * @param {string} [label = 'label'] - name of 'label' field
                     * @param {boolean} [replaceChoices = false] - whether to replace of add choices
                     * @returns {this | Promise<this>}
                     *
                     * @example
                     * ```js
                     * const example = new Choices(element);
                     *
                     * example.setChoices([
                     *   {value: 'One', label: 'Label One', disabled: true},
                     *   {value: 'Two', label: 'Label Two', selected: true},
                     *   {value: 'Three', label: 'Label Three'},
                     * ], 'value', 'label', false);
                     * ```
                     *
                     * @example
                     * ```js
                     * const example = new Choices(element);
                     *
                     * example.setChoices(async () => {
                     *   try {
                     *      const items = await fetch('/items');
                     *      return items.json()
                     *   } catch(err) {
                     *      console.error(err)
                     *   }
                     * });
                     * ```
                     *
                     * @example
                     * ```js
                     * const example = new Choices(element);
                     *
                     * example.setChoices([{
                     *   label: 'Group one',
                     *   id: 1,
                     *   disabled: false,
                     *   choices: [
                     *     {value: 'Child One', label: 'Child One', selected: true},
                     *     {value: 'Child Two', label: 'Child Two',  disabled: true},
                     *     {value: 'Child Three', label: 'Child Three'},
                     *   ]
                     * },
                     * {
                     *   label: 'Group two',
                     *   id: 2,
                     *   disabled: false,
                     *   choices: [
                     *     {value: 'Child Four', label: 'Child Four', disabled: true},
                     *     {value: 'Child Five', label: 'Child Five'},
                     *     {value: 'Child Six', label: 'Child Six', customProperties: {
                     *       description: 'Custom description about child six',
                     *       random: 'Another random custom property'
                     *     }},
                     *   ]
                     * }], 'value', 'label', false);
                     * ```
                     */

                    _proto.setChoices = function setChoices(
                      choicesArrayOrFetcher,
                      value,
                      label,
                      replaceChoices
                    ) {
                      var _this11 = this;

                      if (choicesArrayOrFetcher === void 0) {
                        choicesArrayOrFetcher = [];
                      }

                      if (value === void 0) {
                        value = 'value';
                      }

                      if (label === void 0) {
                        label = 'label';
                      }

                      if (replaceChoices === void 0) {
                        replaceChoices = false;
                      }

                      if (!this.initialised) {
                        throw new ReferenceError(
                          'setChoices was called on a non-initialized instance of Choices'
                        );
                      }

                      if (!this._isSelectElement) {
                        throw new TypeError(
                          "setChoices can't be used with INPUT based Choices"
                        );
                      }

                      if (typeof value !== 'string' || !value) {
                        throw new TypeError(
                          "value parameter must be a name of 'value' field in passed objects"
                        );
                      } // Clear choices if needed

                      if (replaceChoices) {
                        this.clearChoices();
                      }

                      if (typeof choicesArrayOrFetcher === 'function') {
                        // it's a choices fetcher function
                        var fetcher = choicesArrayOrFetcher(this);

                        if (
                          typeof Promise === 'function' &&
                          fetcher instanceof Promise
                        ) {
                          // that's a promise
                          // eslint-disable-next-line compat/compat
                          return new Promise(function(resolve) {
                            return requestAnimationFrame(resolve);
                          })
                            .then(function() {
                              return _this11._handleLoadingState(true);
                            })
                            .then(function() {
                              return fetcher;
                            })
                            .then(function(data) {
                              return _this11.setChoices(
                                data,
                                value,
                                label,
                                replaceChoices
                              );
                            })
                            .catch(function(err) {
                              if (!_this11.config.silent) {
                                console.error(err);
                              }
                            })
                            .then(function() {
                              return _this11._handleLoadingState(false);
                            })
                            .then(function() {
                              return _this11;
                            });
                        } // function returned something else than promise, let's check if it's an array of choices

                        if (!Array.isArray(fetcher)) {
                          throw new TypeError(
                            '.setChoices first argument function must return either array of choices or Promise, got: ' +
                              typeof fetcher
                          );
                        } // recursion with results, it's sync and choices were cleared already

                        return this.setChoices(fetcher, value, label, false);
                      }

                      if (!Array.isArray(choicesArrayOrFetcher)) {
                        throw new TypeError(
                          '.setChoices must be called either with array of choices with a function resulting into Promise of array of choices'
                        );
                      }

                      this.containerOuter.removeLoadingState();

                      this._startLoading();

                      choicesArrayOrFetcher.forEach(function(groupOrChoice) {
                        if (groupOrChoice.choices) {
                          _this11._addGroup({
                            id: parseInt(groupOrChoice.id, 10) || null,
                            group: groupOrChoice,
                            valueKey: value,
                            labelKey: label
                          });
                        } else {
                          _this11._addChoice({
                            value: groupOrChoice[value],
                            label: groupOrChoice[label],
                            isSelected: groupOrChoice.selected,
                            isDisabled: groupOrChoice.disabled,
                            customProperties: groupOrChoice.customProperties,
                            placeholder: groupOrChoice.placeholder
                          });
                        }
                      });

                      this._stopLoading();

                      return this;
                    };

                    _proto.clearChoices = function clearChoices() {
                      this._store.dispatch(choices_clearChoices());

                      return this;
                    };

                    _proto.clearStore = function clearStore() {
                      this._store.dispatch(clearAll());

                      return this;
                    };

                    _proto.clearInput = function clearInput() {
                      var shouldSetInputWidth = !this._isSelectOneElement;
                      this.input.clear(shouldSetInputWidth);

                      if (!this._isTextElement && this._canSearch) {
                        this._isSearching = false;

                        this._store.dispatch(choices_activateChoices(true));
                      }

                      return this;
                    };

                    _proto._render = function _render() {
                      if (this._store.isLoading()) {
                        return;
                      }

                      this._currentState = this._store.state;
                      var stateChanged =
                        this._currentState.choices !==
                          this._prevState.choices ||
                        this._currentState.groups !== this._prevState.groups ||
                        this._currentState.items !== this._prevState.items;
                      var shouldRenderChoices = this._isSelectElement;
                      var shouldRenderItems =
                        this._currentState.items !== this._prevState.items;

                      if (!stateChanged) {
                        return;
                      }

                      if (shouldRenderChoices) {
                        this._renderChoices();
                      }

                      if (shouldRenderItems) {
                        this._renderItems();
                      }

                      this._prevState = this._currentState;
                    };

                    _proto._renderChoices = function _renderChoices() {
                      var _this12 = this;

                      var _this$_store = this._store,
                        activeGroups = _this$_store.activeGroups,
                        activeChoices = _this$_store.activeChoices;
                      var choiceListFragment = document.createDocumentFragment();
                      this.choiceList.clear();

                      if (this.config.resetScrollPosition) {
                        requestAnimationFrame(function() {
                          return _this12.choiceList.scrollToTop();
                        });
                      } // If we have grouped options

                      if (activeGroups.length >= 1 && !this._isSearching) {
                        // If we have a placeholder choice along with groups
                        var activePlaceholders = activeChoices.filter(function(
                          activeChoice
                        ) {
                          return (
                            activeChoice.placeholder === true &&
                            activeChoice.groupId === -1
                          );
                        });

                        if (activePlaceholders.length >= 1) {
                          choiceListFragment = this._createChoicesFragment(
                            activePlaceholders,
                            choiceListFragment
                          );
                        }

                        choiceListFragment = this._createGroupsFragment(
                          activeGroups,
                          activeChoices,
                          choiceListFragment
                        );
                      } else if (activeChoices.length >= 1) {
                        choiceListFragment = this._createChoicesFragment(
                          activeChoices,
                          choiceListFragment
                        );
                      } // If we have choices to show

                      if (
                        choiceListFragment.childNodes &&
                        choiceListFragment.childNodes.length > 0
                      ) {
                        var activeItems = this._store.activeItems;

                        var canAddItem = this._canAddItem(
                          activeItems,
                          this.input.value
                        ); // ...and we can select them

                        if (canAddItem.response) {
                          // ...append them and highlight the first choice
                          this.choiceList.append(choiceListFragment);

                          this._highlightChoice();
                        } else {
                          // ...otherwise show a notice
                          this.choiceList.append(
                            this._getTemplate('notice', canAddItem.notice)
                          );
                        }
                      } else {
                        // Otherwise show a notice
                        var dropdownItem;
                        var notice;

                        if (this._isSearching) {
                          notice =
                            typeof this.config.noResultsText === 'function'
                              ? this.config.noResultsText()
                              : this.config.noResultsText;
                          dropdownItem = this._getTemplate(
                            'notice',
                            notice,
                            'no-results'
                          );
                        } else {
                          notice =
                            typeof this.config.noChoicesText === 'function'
                              ? this.config.noChoicesText()
                              : this.config.noChoicesText;
                          dropdownItem = this._getTemplate(
                            'notice',
                            notice,
                            'no-choices'
                          );
                        }

                        this.choiceList.append(dropdownItem);
                      }
                    };

                    _proto._renderItems = function _renderItems() {
                      var activeItems = this._store.activeItems || [];
                      this.itemList.clear(); // Create a fragment to store our list items
                      // (so we don't have to update the DOM for each item)

                      var itemListFragment = this._createItemsFragment(
                        activeItems
                      ); // If we have items to add, append them

                      if (itemListFragment.childNodes) {
                        this.itemList.append(itemListFragment);
                      }
                    };

                    _proto._createGroupsFragment = function _createGroupsFragment(
                      groups,
                      choices,
                      fragment
                    ) {
                      var _this13 = this;

                      if (fragment === void 0) {
                        fragment = document.createDocumentFragment();
                      }

                      var getGroupChoices = function getGroupChoices(group) {
                        return choices.filter(function(choice) {
                          if (_this13._isSelectOneElement) {
                            return choice.groupId === group.id;
                          }

                          return (
                            choice.groupId === group.id &&
                            (_this13.config.renderSelectedChoices ===
                              'always' ||
                              !choice.selected)
                          );
                        });
                      }; // If sorting is enabled, filter groups

                      if (this.config.shouldSort) {
                        groups.sort(this.config.sorter);
                      }

                      groups.forEach(function(group) {
                        var groupChoices = getGroupChoices(group);

                        if (groupChoices.length >= 1) {
                          var dropdownGroup = _this13._getTemplate(
                            'choiceGroup',
                            group
                          );

                          fragment.appendChild(dropdownGroup);

                          _this13._createChoicesFragment(
                            groupChoices,
                            fragment,
                            true
                          );
                        }
                      });
                      return fragment;
                    };

                    _proto._createChoicesFragment = function _createChoicesFragment(
                      choices,
                      fragment,
                      withinGroup
                    ) {
                      var _this14 = this;

                      if (fragment === void 0) {
                        fragment = document.createDocumentFragment();
                      }

                      if (withinGroup === void 0) {
                        withinGroup = false;
                      }

                      // Create a fragment to store our list items (so we don't have to update the DOM for each item)
                      var _this$config = this.config,
                        renderSelectedChoices =
                          _this$config.renderSelectedChoices,
                        searchResultLimit = _this$config.searchResultLimit,
                        renderChoiceLimit = _this$config.renderChoiceLimit;
                      var filter = this._isSearching
                        ? sortByScore
                        : this.config.sorter;

                      var appendChoice = function appendChoice(choice) {
                        var shouldRender =
                          renderSelectedChoices === 'auto'
                            ? _this14._isSelectOneElement || !choice.selected
                            : true;

                        if (shouldRender) {
                          var dropdownItem = _this14._getTemplate(
                            'choice',
                            choice,
                            _this14.config.itemSelectText
                          );

                          fragment.appendChild(dropdownItem);
                        }
                      };

                      var rendererableChoices = choices;

                      if (
                        renderSelectedChoices === 'auto' &&
                        !this._isSelectOneElement
                      ) {
                        rendererableChoices = choices.filter(function(choice) {
                          return !choice.selected;
                        });
                      } // Split array into placeholders and "normal" choices

                      var _rendererableChoices$ = rendererableChoices.reduce(
                          function(acc, choice) {
                            if (choice.placeholder) {
                              acc.placeholderChoices.push(choice);
                            } else {
                              acc.normalChoices.push(choice);
                            }

                            return acc;
                          },
                          {
                            placeholderChoices: [],
                            normalChoices: []
                          }
                        ),
                        placeholderChoices =
                          _rendererableChoices$.placeholderChoices,
                        normalChoices = _rendererableChoices$.normalChoices; // If sorting is enabled or the user is searching, filter choices

                      if (this.config.shouldSort || this._isSearching) {
                        normalChoices.sort(filter);
                      }

                      var choiceLimit = rendererableChoices.length; // Prepend placeholeder

                      var sortedChoices = this._isSelectOneElement
                        ? [].concat(placeholderChoices, normalChoices)
                        : normalChoices;

                      if (this._isSearching) {
                        choiceLimit = searchResultLimit;
                      } else if (
                        renderChoiceLimit &&
                        renderChoiceLimit > 0 &&
                        !withinGroup
                      ) {
                        choiceLimit = renderChoiceLimit;
                      } // Add each choice to dropdown within range

                      for (var i = 0; i < choiceLimit; i += 1) {
                        if (sortedChoices[i]) {
                          appendChoice(sortedChoices[i]);
                        }
                      }

                      return fragment;
                    };

                    _proto._createItemsFragment = function _createItemsFragment(
                      items,
                      fragment
                    ) {
                      var _this15 = this;

                      if (fragment === void 0) {
                        fragment = document.createDocumentFragment();
                      }

                      // Create fragment to add elements to
                      var _this$config2 = this.config,
                        shouldSortItems = _this$config2.shouldSortItems,
                        sorter = _this$config2.sorter,
                        removeItemButton = _this$config2.removeItemButton; // If sorting is enabled, filter items

                      if (shouldSortItems && !this._isSelectOneElement) {
                        items.sort(sorter);
                      }

                      if (this._isTextElement) {
                        // Update the value of the hidden input
                        this.passedElement.value = items;
                      } else {
                        // Update the options of the hidden input
                        this.passedElement.options = items;
                      }

                      var addItemToFragment = function addItemToFragment(item) {
                        // Create new list element
                        var listItem = _this15._getTemplate(
                          'item',
                          item,
                          removeItemButton
                        ); // Append it to list

                        fragment.appendChild(listItem);
                      }; // Add each list item to list

                      items.forEach(addItemToFragment);
                      return fragment;
                    };

                    _proto._triggerChange = function _triggerChange(value) {
                      if (value === undefined || value === null) {
                        return;
                      }

                      this.passedElement.triggerEvent(EVENTS.change, {
                        value: value
                      });
                    };

                    _proto._selectPlaceholderChoice = function _selectPlaceholderChoice() {
                      var placeholderChoice = this._store.placeholderChoice;

                      if (placeholderChoice) {
                        this._addItem({
                          value: placeholderChoice.value,
                          label: placeholderChoice.label,
                          choiceId: placeholderChoice.id,
                          groupId: placeholderChoice.groupId,
                          placeholder: placeholderChoice.placeholder
                        });

                        this._triggerChange(placeholderChoice.value);
                      }
                    };

                    _proto._handleButtonAction = function _handleButtonAction(
                      activeItems,
                      element
                    ) {
                      if (
                        !activeItems ||
                        !element ||
                        !this.config.removeItems ||
                        !this.config.removeItemButton
                      ) {
                        return;
                      }

                      var itemId = element.parentNode.getAttribute('data-id');
                      var itemToRemove = activeItems.find(function(item) {
                        return item.id === parseInt(itemId, 10);
                      }); // Remove item associated with button

                      this._removeItem(itemToRemove);

                      this._triggerChange(itemToRemove.value);

                      if (this._isSelectOneElement) {
                        this._selectPlaceholderChoice();
                      }
                    };

                    _proto._handleItemAction = function _handleItemAction(
                      activeItems,
                      element,
                      hasShiftKey
                    ) {
                      var _this16 = this;

                      if (hasShiftKey === void 0) {
                        hasShiftKey = false;
                      }

                      if (
                        !activeItems ||
                        !element ||
                        !this.config.removeItems ||
                        this._isSelectOneElement
                      ) {
                        return;
                      }

                      var passedId = element.getAttribute('data-id'); // We only want to select one item with a click
                      // so we deselect any items that aren't the target
                      // unless shift is being pressed

                      activeItems.forEach(function(item) {
                        if (
                          item.id === parseInt(passedId, 10) &&
                          !item.highlighted
                        ) {
                          _this16.highlightItem(item);
                        } else if (!hasShiftKey && item.highlighted) {
                          _this16.unhighlightItem(item);
                        }
                      }); // Focus input as without focus, a user cannot do anything with a
                      // highlighted item

                      this.input.focus();
                    };

                    _proto._handleChoiceAction = function _handleChoiceAction(
                      activeItems,
                      element
                    ) {
                      if (!activeItems || !element) {
                        return;
                      } // If we are clicking on an option

                      var id = element.dataset.id;

                      var choice = this._store.getChoiceById(id);

                      if (!choice) {
                        return;
                      }

                      var passedKeyCode =
                        activeItems[0] && activeItems[0].keyCode
                          ? activeItems[0].keyCode
                          : null;
                      var hasActiveDropdown = this.dropdown.isActive; // Update choice keyCode

                      choice.keyCode = passedKeyCode;
                      this.passedElement.triggerEvent(EVENTS.choice, {
                        choice: choice
                      });

                      if (!choice.selected && !choice.disabled) {
                        var canAddItem = this._canAddItem(
                          activeItems,
                          choice.value
                        );

                        if (canAddItem.response) {
                          this._addItem({
                            value: choice.value,
                            label: choice.label,
                            choiceId: choice.id,
                            groupId: choice.groupId,
                            customProperties: choice.customProperties,
                            placeholder: choice.placeholder,
                            keyCode: choice.keyCode
                          });

                          this._triggerChange(choice.value);
                        }
                      }

                      this.clearInput(); // We want to close the dropdown if we are dealing with a single select box

                      if (hasActiveDropdown && this._isSelectOneElement) {
                        this.hideDropdown(true);
                        this.containerOuter.focus();
                      }
                    };

                    _proto._handleBackspace = function _handleBackspace(
                      activeItems
                    ) {
                      if (!this.config.removeItems || !activeItems) {
                        return;
                      }

                      var lastItem = activeItems[activeItems.length - 1];
                      var hasHighlightedItems = activeItems.some(function(
                        item
                      ) {
                        return item.highlighted;
                      }); // If editing the last item is allowed and there are not other selected items,
                      // we can edit the item value. Otherwise if we can remove items, remove all selected items

                      if (
                        this.config.editItems &&
                        !hasHighlightedItems &&
                        lastItem
                      ) {
                        this.input.value = lastItem.value;
                        this.input.setWidth();

                        this._removeItem(lastItem);

                        this._triggerChange(lastItem.value);
                      } else {
                        if (!hasHighlightedItems) {
                          // Highlight last item if none already highlighted
                          this.highlightItem(lastItem, false);
                        }

                        this.removeHighlightedItems(true);
                      }
                    };

                    _proto._startLoading = function _startLoading() {
                      this._store.dispatch(setIsLoading(true));
                    };

                    _proto._stopLoading = function _stopLoading() {
                      this._store.dispatch(setIsLoading(false));
                    };

                    _proto._handleLoadingState = function _handleLoadingState(
                      setLoading
                    ) {
                      if (setLoading === void 0) {
                        setLoading = true;
                      }

                      var placeholderItem = this.itemList.getChild(
                        '.' + this.config.classNames.placeholder
                      );

                      if (setLoading) {
                        this.disable();
                        this.containerOuter.addLoadingState();

                        if (this._isSelectOneElement) {
                          if (!placeholderItem) {
                            placeholderItem = this._getTemplate(
                              'placeholder',
                              this.config.loadingText
                            );
                            this.itemList.append(placeholderItem);
                          } else {
                            placeholderItem.innerHTML = this.config.loadingText;
                          }
                        } else {
                          this.input.placeholder = this.config.loadingText;
                        }
                      } else {
                        this.enable();
                        this.containerOuter.removeLoadingState();

                        if (this._isSelectOneElement) {
                          placeholderItem.innerHTML =
                            this._placeholderValue || '';
                        } else {
                          this.input.placeholder = this._placeholderValue || '';
                        }
                      }
                    };

                    _proto._handleSearch = function _handleSearch(value) {
                      if (!value || !this.input.isFocussed) {
                        return;
                      }

                      var choices = this._store.choices;
                      var _this$config3 = this.config,
                        searchFloor = _this$config3.searchFloor,
                        searchChoices = _this$config3.searchChoices;
                      var hasUnactiveChoices = choices.some(function(option) {
                        return !option.active;
                      }); // Check that we have a value to search and the input was an alphanumeric character

                      if (value && value.length >= searchFloor) {
                        var resultCount = searchChoices
                          ? this._searchChoices(value)
                          : 0; // Trigger search event

                        this.passedElement.triggerEvent(EVENTS.search, {
                          value: value,
                          resultCount: resultCount
                        });
                      } else if (hasUnactiveChoices) {
                        // Otherwise reset choices to active
                        this._isSearching = false;

                        this._store.dispatch(choices_activateChoices(true));
                      }
                    };

                    _proto._canAddItem = function _canAddItem(
                      activeItems,
                      value
                    ) {
                      var canAddItem = true;
                      var notice =
                        typeof this.config.addItemText === 'function'
                          ? this.config.addItemText(value)
                          : this.config.addItemText;

                      if (!this._isSelectOneElement) {
                        var isDuplicateValue = existsInArray(
                          activeItems,
                          value
                        );

                        if (
                          this.config.maxItemCount > 0 &&
                          this.config.maxItemCount <= activeItems.length
                        ) {
                          // If there is a max entry limit and we have reached that limit
                          // don't update
                          canAddItem = false;
                          notice =
                            typeof this.config.maxItemText === 'function'
                              ? this.config.maxItemText(
                                  this.config.maxItemCount
                                )
                              : this.config.maxItemText;
                        }

                        if (
                          !this.config.duplicateItemsAllowed &&
                          isDuplicateValue &&
                          canAddItem
                        ) {
                          canAddItem = false;
                          notice =
                            typeof this.config.uniqueItemText === 'function'
                              ? this.config.uniqueItemText(value)
                              : this.config.uniqueItemText;
                        }

                        if (
                          this._isTextElement &&
                          this.config.addItems &&
                          canAddItem &&
                          typeof this.config.addItemFilter === 'function' &&
                          !this.config.addItemFilter(value)
                        ) {
                          canAddItem = false;
                          notice =
                            typeof this.config.customAddItemText === 'function'
                              ? this.config.customAddItemText(value)
                              : this.config.customAddItemText;
                        }
                      }

                      return {
                        response: canAddItem,
                        notice: notice
                      };
                    };

                    _proto._searchChoices = function _searchChoices(value) {
                      var newValue =
                        typeof value === 'string' ? value.trim() : value;
                      var currentValue =
                        typeof this._currentValue === 'string'
                          ? this._currentValue.trim()
                          : this._currentValue;

                      if (
                        newValue.length < 1 &&
                        newValue === currentValue + ' '
                      ) {
                        return 0;
                      } // If new value matches the desired length and is not the same as the current value with a space

                      var haystack = this._store.searchableChoices;
                      var needle = newValue;
                      var keys = [].concat(this.config.searchFields);
                      var options = Object.assign(this.config.fuseOptions, {
                        keys: keys
                      });
                      var fuse = new fuse_default.a(haystack, options);
                      var results = fuse.search(needle);
                      this._currentValue = newValue;
                      this._highlightPosition = 0;
                      this._isSearching = true;

                      this._store.dispatch(choices_filterChoices(results));

                      return results.length;
                    };

                    _proto._addEventListeners = function _addEventListeners() {
                      var _document = document,
                        documentElement = _document.documentElement; // capture events - can cancel event processing or propagation

                      documentElement.addEventListener(
                        'touchend',
                        this._onTouchEnd,
                        true
                      );
                      this.containerOuter.element.addEventListener(
                        'keydown',
                        this._onKeyDown,
                        true
                      );
                      this.containerOuter.element.addEventListener(
                        'mousedown',
                        this._onMouseDown,
                        true
                      ); // passive events - doesn't call `preventDefault` or `stopPropagation`

                      documentElement.addEventListener('click', this._onClick, {
                        passive: true
                      });
                      documentElement.addEventListener(
                        'touchmove',
                        this._onTouchMove,
                        {
                          passive: true
                        }
                      );
                      this.dropdown.element.addEventListener(
                        'mouseover',
                        this._onMouseOver,
                        {
                          passive: true
                        }
                      );

                      if (this._isSelectOneElement) {
                        this.containerOuter.element.addEventListener(
                          'focus',
                          this._onFocus,
                          {
                            passive: true
                          }
                        );
                        this.containerOuter.element.addEventListener(
                          'blur',
                          this._onBlur,
                          {
                            passive: true
                          }
                        );
                      }

                      this.input.element.addEventListener(
                        'keyup',
                        this._onKeyUp,
                        {
                          passive: true
                        }
                      );
                      this.input.element.addEventListener(
                        'focus',
                        this._onFocus,
                        {
                          passive: true
                        }
                      );
                      this.input.element.addEventListener(
                        'blur',
                        this._onBlur,
                        {
                          passive: true
                        }
                      );

                      if (this.input.element.form) {
                        this.input.element.form.addEventListener(
                          'reset',
                          this._onFormReset,
                          {
                            passive: true
                          }
                        );
                      }

                      this.input.addEventListeners();
                    };

                    _proto._removeEventListeners = function _removeEventListeners() {
                      var _document2 = document,
                        documentElement = _document2.documentElement;
                      documentElement.removeEventListener(
                        'touchend',
                        this._onTouchEnd,
                        true
                      );
                      this.containerOuter.element.removeEventListener(
                        'keydown',
                        this._onKeyDown,
                        true
                      );
                      this.containerOuter.element.removeEventListener(
                        'mousedown',
                        this._onMouseDown,
                        true
                      );
                      documentElement.removeEventListener(
                        'click',
                        this._onClick
                      );
                      documentElement.removeEventListener(
                        'touchmove',
                        this._onTouchMove
                      );
                      this.dropdown.element.removeEventListener(
                        'mouseover',
                        this._onMouseOver
                      );

                      if (this._isSelectOneElement) {
                        this.containerOuter.element.removeEventListener(
                          'focus',
                          this._onFocus
                        );
                        this.containerOuter.element.removeEventListener(
                          'blur',
                          this._onBlur
                        );
                      }

                      this.input.element.removeEventListener(
                        'keyup',
                        this._onKeyUp
                      );
                      this.input.element.removeEventListener(
                        'focus',
                        this._onFocus
                      );
                      this.input.element.removeEventListener(
                        'blur',
                        this._onBlur
                      );

                      if (this.input.element.form) {
                        this.input.element.form.removeEventListener(
                          'reset',
                          this._onFormReset
                        );
                      }

                      this.input.removeEventListeners();
                    };
                    /**
                     * @param {KeyboardEvent} event
                     */

                    _proto._onKeyDown = function _onKeyDown(event) {
                      var _keyDownActions;

                      var target = event.target,
                        keyCode = event.keyCode,
                        ctrlKey = event.ctrlKey,
                        metaKey = event.metaKey;
                      var activeItems = this._store.activeItems;
                      var hasFocusedInput = this.input.isFocussed;
                      var hasActiveDropdown = this.dropdown.isActive;
                      var hasItems = this.itemList.hasChildren();
                      var keyString = String.fromCharCode(keyCode);
                      var BACK_KEY = KEY_CODES.BACK_KEY,
                        DELETE_KEY = KEY_CODES.DELETE_KEY,
                        ENTER_KEY = KEY_CODES.ENTER_KEY,
                        A_KEY = KEY_CODES.A_KEY,
                        ESC_KEY = KEY_CODES.ESC_KEY,
                        UP_KEY = KEY_CODES.UP_KEY,
                        DOWN_KEY = KEY_CODES.DOWN_KEY,
                        PAGE_UP_KEY = KEY_CODES.PAGE_UP_KEY,
                        PAGE_DOWN_KEY = KEY_CODES.PAGE_DOWN_KEY;
                      var hasCtrlDownKeyPressed = ctrlKey || metaKey; // If a user is typing and the dropdown is not active

                      if (
                        !this._isTextElement &&
                        /[a-zA-Z0-9-_ ]/.test(keyString)
                      ) {
                        this.showDropdown();
                      } // Map keys to key actions

                      var keyDownActions =
                        ((_keyDownActions = {}),
                        (_keyDownActions[A_KEY] = this._onAKey),
                        (_keyDownActions[ENTER_KEY] = this._onEnterKey),
                        (_keyDownActions[ESC_KEY] = this._onEscapeKey),
                        (_keyDownActions[UP_KEY] = this._onDirectionKey),
                        (_keyDownActions[PAGE_UP_KEY] = this._onDirectionKey),
                        (_keyDownActions[DOWN_KEY] = this._onDirectionKey),
                        (_keyDownActions[PAGE_DOWN_KEY] = this._onDirectionKey),
                        (_keyDownActions[DELETE_KEY] = this._onDeleteKey),
                        (_keyDownActions[BACK_KEY] = this._onDeleteKey),
                        _keyDownActions); // If keycode has a function, run it

                      if (keyDownActions[keyCode]) {
                        keyDownActions[keyCode]({
                          event: event,
                          target: target,
                          keyCode: keyCode,
                          metaKey: metaKey,
                          activeItems: activeItems,
                          hasFocusedInput: hasFocusedInput,
                          hasActiveDropdown: hasActiveDropdown,
                          hasItems: hasItems,
                          hasCtrlDownKeyPressed: hasCtrlDownKeyPressed
                        });
                      }
                    };

                    _proto._onKeyUp = function _onKeyUp(_ref2) {
                      var target = _ref2.target,
                        keyCode = _ref2.keyCode;
                      var value = this.input.value;
                      var activeItems = this._store.activeItems;

                      var canAddItem = this._canAddItem(activeItems, value);

                      var backKey = KEY_CODES.BACK_KEY,
                        deleteKey = KEY_CODES.DELETE_KEY; // We are typing into a text input and have a value, we want to show a dropdown
                      // notice. Otherwise hide the dropdown

                      if (this._isTextElement) {
                        var canShowDropdownNotice = canAddItem.notice && value;

                        if (canShowDropdownNotice) {
                          var dropdownItem = this._getTemplate(
                            'notice',
                            canAddItem.notice
                          );

                          this.dropdown.element.innerHTML =
                            dropdownItem.outerHTML;
                          this.showDropdown(true);
                        } else {
                          this.hideDropdown(true);
                        }
                      } else {
                        var userHasRemovedValue =
                          (keyCode === backKey || keyCode === deleteKey) &&
                          !target.value;
                        var canReactivateChoices =
                          !this._isTextElement && this._isSearching;
                        var canSearch = this._canSearch && canAddItem.response;

                        if (userHasRemovedValue && canReactivateChoices) {
                          this._isSearching = false;

                          this._store.dispatch(choices_activateChoices(true));
                        } else if (canSearch) {
                          this._handleSearch(this.input.value);
                        }
                      }

                      this._canSearch = this.config.searchEnabled;
                    };

                    _proto._onAKey = function _onAKey(_ref3) {
                      var hasItems = _ref3.hasItems,
                        hasCtrlDownKeyPressed = _ref3.hasCtrlDownKeyPressed;

                      // If CTRL + A or CMD + A have been pressed and there are items to select
                      if (hasCtrlDownKeyPressed && hasItems) {
                        this._canSearch = false;
                        var shouldHightlightAll =
                          this.config.removeItems &&
                          !this.input.value &&
                          this.input.element === document.activeElement;

                        if (shouldHightlightAll) {
                          this.highlightAll();
                        }
                      }
                    };

                    _proto._onEnterKey = function _onEnterKey(_ref4) {
                      var event = _ref4.event,
                        target = _ref4.target,
                        activeItems = _ref4.activeItems,
                        hasActiveDropdown = _ref4.hasActiveDropdown;
                      var enterKey = KEY_CODES.ENTER_KEY;
                      var targetWasButton = target.hasAttribute('data-button');

                      if (this._isTextElement && target.value) {
                        var value = this.input.value;

                        var canAddItem = this._canAddItem(activeItems, value);

                        if (canAddItem.response) {
                          this.hideDropdown(true);

                          this._addItem({
                            value: value
                          });

                          this._triggerChange(value);

                          this.clearInput();
                        }
                      }

                      if (targetWasButton) {
                        this._handleButtonAction(activeItems, target);

                        event.preventDefault();
                      }

                      if (hasActiveDropdown) {
                        var highlightedChoice = this.dropdown.getChild(
                          '.' + this.config.classNames.highlightedState
                        );

                        if (highlightedChoice) {
                          // add enter keyCode value
                          if (activeItems[0]) {
                            activeItems[0].keyCode = enterKey; // eslint-disable-line no-param-reassign
                          }

                          this._handleChoiceAction(
                            activeItems,
                            highlightedChoice
                          );
                        }

                        event.preventDefault();
                      } else if (this._isSelectOneElement) {
                        this.showDropdown();
                        event.preventDefault();
                      }
                    };

                    _proto._onEscapeKey = function _onEscapeKey(_ref5) {
                      var hasActiveDropdown = _ref5.hasActiveDropdown;

                      if (hasActiveDropdown) {
                        this.hideDropdown(true);
                        this.containerOuter.focus();
                      }
                    };

                    _proto._onDirectionKey = function _onDirectionKey(_ref6) {
                      var event = _ref6.event,
                        hasActiveDropdown = _ref6.hasActiveDropdown,
                        keyCode = _ref6.keyCode,
                        metaKey = _ref6.metaKey;
                      var downKey = KEY_CODES.DOWN_KEY,
                        pageUpKey = KEY_CODES.PAGE_UP_KEY,
                        pageDownKey = KEY_CODES.PAGE_DOWN_KEY; // If up or down key is pressed, traverse through options

                      if (hasActiveDropdown || this._isSelectOneElement) {
                        this.showDropdown();
                        this._canSearch = false;
                        var directionInt =
                          keyCode === downKey || keyCode === pageDownKey
                            ? 1
                            : -1;
                        var skipKey =
                          metaKey ||
                          keyCode === pageDownKey ||
                          keyCode === pageUpKey;
                        var selectableChoiceIdentifier =
                          '[data-choice-selectable]';
                        var nextEl;

                        if (skipKey) {
                          if (directionInt > 0) {
                            nextEl = this.dropdown.element.querySelector(
                              selectableChoiceIdentifier + ':last-of-type'
                            );
                          } else {
                            nextEl = this.dropdown.element.querySelector(
                              selectableChoiceIdentifier
                            );
                          }
                        } else {
                          var currentEl = this.dropdown.element.querySelector(
                            '.' + this.config.classNames.highlightedState
                          );

                          if (currentEl) {
                            nextEl = getAdjacentEl(
                              currentEl,
                              selectableChoiceIdentifier,
                              directionInt
                            );
                          } else {
                            nextEl = this.dropdown.element.querySelector(
                              selectableChoiceIdentifier
                            );
                          }
                        }

                        if (nextEl) {
                          // We prevent default to stop the cursor moving
                          // when pressing the arrow
                          if (
                            !isScrolledIntoView(
                              nextEl,
                              this.choiceList.element,
                              directionInt
                            )
                          ) {
                            this.choiceList.scrollToChildElement(
                              nextEl,
                              directionInt
                            );
                          }

                          this._highlightChoice(nextEl);
                        } // Prevent default to maintain cursor position whilst
                        // traversing dropdown options

                        event.preventDefault();
                      }
                    };

                    _proto._onDeleteKey = function _onDeleteKey(_ref7) {
                      var event = _ref7.event,
                        target = _ref7.target,
                        hasFocusedInput = _ref7.hasFocusedInput,
                        activeItems = _ref7.activeItems;

                      // If backspace or delete key is pressed and the input has no value
                      if (
                        hasFocusedInput &&
                        !target.value &&
                        !this._isSelectOneElement
                      ) {
                        this._handleBackspace(activeItems);

                        event.preventDefault();
                      }
                    };

                    _proto._onTouchMove = function _onTouchMove() {
                      if (this._wasTap) {
                        this._wasTap = false;
                      }
                    };

                    _proto._onTouchEnd = function _onTouchEnd(event) {
                      var _ref8 = event || event.touches[0],
                        target = _ref8.target;

                      var touchWasWithinContainer =
                        this._wasTap &&
                        this.containerOuter.element.contains(target);

                      if (touchWasWithinContainer) {
                        var containerWasExactTarget =
                          target === this.containerOuter.element ||
                          target === this.containerInner.element;

                        if (containerWasExactTarget) {
                          if (this._isTextElement) {
                            this.input.focus();
                          } else if (this._isSelectMultipleElement) {
                            this.showDropdown();
                          }
                        } // Prevents focus event firing

                        event.stopPropagation();
                      }

                      this._wasTap = true;
                    };
                    /**
                     * Handles mousedown event in capture mode for containetOuter.element
                     * @param {MouseEvent} event
                     */

                    _proto._onMouseDown = function _onMouseDown(event) {
                      var target = event.target;

                      if (!(target instanceof HTMLElement)) {
                        return;
                      } // If we have our mouse down on the scrollbar and are on IE11...

                      if (IS_IE11 && this.choiceList.element.contains(target)) {
                        // check if click was on a scrollbar area
                        var firstChoice =
                          /** @type {HTMLElement} */
                          this.choiceList.element.firstElementChild;
                        var isOnScrollbar =
                          this._direction === 'ltr'
                            ? event.offsetX >= firstChoice.offsetWidth
                            : event.offsetX < firstChoice.offsetLeft;
                        this._isScrollingOnIe = isOnScrollbar;
                      }

                      if (target === this.input.element) {
                        return;
                      }

                      var item = target.closest(
                        '[data-button],[data-item],[data-choice]'
                      );

                      if (item instanceof HTMLElement) {
                        var hasShiftKey = event.shiftKey;
                        var activeItems = this._store.activeItems;
                        var dataset = item.dataset;

                        if ('button' in dataset) {
                          this._handleButtonAction(activeItems, item);
                        } else if ('item' in dataset) {
                          this._handleItemAction(
                            activeItems,
                            item,
                            hasShiftKey
                          );
                        } else if ('choice' in dataset) {
                          this._handleChoiceAction(activeItems, item);
                        }
                      }

                      event.preventDefault();
                    };
                    /**
                     * Handles mouseover event over this.dropdown
                     * @param {MouseEvent} event
                     */

                    _proto._onMouseOver = function _onMouseOver(_ref9) {
                      var target = _ref9.target;

                      if (
                        target instanceof HTMLElement &&
                        'choice' in target.dataset
                      ) {
                        this._highlightChoice(target);
                      }
                    };

                    _proto._onClick = function _onClick(_ref10) {
                      var target = _ref10.target;
                      var clickWasWithinContainer = this.containerOuter.element.contains(
                        target
                      );

                      if (clickWasWithinContainer) {
                        if (
                          !this.dropdown.isActive &&
                          !this.containerOuter.isDisabled
                        ) {
                          if (this._isTextElement) {
                            if (document.activeElement !== this.input.element) {
                              this.input.focus();
                            }
                          } else {
                            this.showDropdown();
                            this.containerOuter.focus();
                          }
                        } else if (
                          this._isSelectOneElement &&
                          target !== this.input.element &&
                          !this.dropdown.element.contains(target)
                        ) {
                          this.hideDropdown();
                        }
                      } else {
                        var hasHighlightedItems =
                          this._store.highlightedActiveItems.length > 0;

                        if (hasHighlightedItems) {
                          this.unhighlightAll();
                        }

                        this.containerOuter.removeFocusState();
                        this.hideDropdown(true);
                      }
                    };

                    _proto._onFocus = function _onFocus(_ref11) {
                      var _this17 = this,
                        _focusActions;

                      var target = _ref11.target;
                      var focusWasWithinContainer = this.containerOuter.element.contains(
                        target
                      );

                      if (!focusWasWithinContainer) {
                        return;
                      }

                      var focusActions =
                        ((_focusActions = {}),
                        (_focusActions[TEXT_TYPE] = function() {
                          if (target === _this17.input.element) {
                            _this17.containerOuter.addFocusState();
                          }
                        }),
                        (_focusActions[SELECT_ONE_TYPE] = function() {
                          _this17.containerOuter.addFocusState();

                          if (target === _this17.input.element) {
                            _this17.showDropdown(true);
                          }
                        }),
                        (_focusActions[SELECT_MULTIPLE_TYPE] = function() {
                          if (target === _this17.input.element) {
                            _this17.showDropdown(true); // If element is a select box, the focused element is the container and the dropdown
                            // isn't already open, focus and show dropdown

                            _this17.containerOuter.addFocusState();
                          }
                        }),
                        _focusActions);
                      focusActions[this.passedElement.element.type]();
                    };

                    _proto._onBlur = function _onBlur(_ref12) {
                      var _this18 = this;

                      var target = _ref12.target;
                      var blurWasWithinContainer = this.containerOuter.element.contains(
                        target
                      );

                      if (blurWasWithinContainer && !this._isScrollingOnIe) {
                        var _blurActions;

                        var activeItems = this._store.activeItems;
                        var hasHighlightedItems = activeItems.some(function(
                          item
                        ) {
                          return item.highlighted;
                        });
                        var blurActions =
                          ((_blurActions = {}),
                          (_blurActions[TEXT_TYPE] = function() {
                            if (target === _this18.input.element) {
                              _this18.containerOuter.removeFocusState();

                              if (hasHighlightedItems) {
                                _this18.unhighlightAll();
                              }

                              _this18.hideDropdown(true);
                            }
                          }),
                          (_blurActions[SELECT_ONE_TYPE] = function() {
                            _this18.containerOuter.removeFocusState();

                            if (
                              target === _this18.input.element ||
                              (target === _this18.containerOuter.element &&
                                !_this18._canSearch)
                            ) {
                              _this18.hideDropdown(true);
                            }
                          }),
                          (_blurActions[SELECT_MULTIPLE_TYPE] = function() {
                            if (target === _this18.input.element) {
                              _this18.containerOuter.removeFocusState();

                              _this18.hideDropdown(true);

                              if (hasHighlightedItems) {
                                _this18.unhighlightAll();
                              }
                            }
                          }),
                          _blurActions);
                        blurActions[this.passedElement.element.type]();
                      } else {
                        // On IE11, clicking the scollbar blurs our input and thus
                        // closes the dropdown. To stop this, we refocus our input
                        // if we know we are on IE *and* are scrolling.
                        this._isScrollingOnIe = false;
                        this.input.element.focus();
                      }
                    };

                    _proto._onFormReset = function _onFormReset() {
                      this._store.dispatch(resetTo(this._initialState));
                    };

                    _proto._highlightChoice = function _highlightChoice(el) {
                      var _this19 = this;

                      if (el === void 0) {
                        el = null;
                      }

                      var choices = Array.from(
                        this.dropdown.element.querySelectorAll(
                          '[data-choice-selectable]'
                        )
                      );

                      if (!choices.length) {
                        return;
                      }

                      var passedEl = el;
                      var highlightedChoices = Array.from(
                        this.dropdown.element.querySelectorAll(
                          '.' + this.config.classNames.highlightedState
                        )
                      ); // Remove any highlighted choices

                      highlightedChoices.forEach(function(choice) {
                        choice.classList.remove(
                          _this19.config.classNames.highlightedState
                        );
                        choice.setAttribute('aria-selected', 'false');
                      });

                      if (passedEl) {
                        this._highlightPosition = choices.indexOf(passedEl);
                      } else {
                        // Highlight choice based on last known highlight location
                        if (choices.length > this._highlightPosition) {
                          // If we have an option to highlight
                          passedEl = choices[this._highlightPosition];
                        } else {
                          // Otherwise highlight the option before
                          passedEl = choices[choices.length - 1];
                        }

                        if (!passedEl) {
                          passedEl = choices[0];
                        }
                      }

                      passedEl.classList.add(
                        this.config.classNames.highlightedState
                      );
                      passedEl.setAttribute('aria-selected', 'true');
                      this.passedElement.triggerEvent(EVENTS.highlightChoice, {
                        el: passedEl
                      });

                      if (this.dropdown.isActive) {
                        // IE11 ignores aria-label and blocks virtual keyboard
                        // if aria-activedescendant is set without a dropdown
                        this.input.setActiveDescendant(passedEl.id);
                        this.containerOuter.setActiveDescendant(passedEl.id);
                      }
                    };

                    _proto._addItem = function _addItem(_ref13) {
                      var value = _ref13.value,
                        _ref13$label = _ref13.label,
                        label = _ref13$label === void 0 ? null : _ref13$label,
                        _ref13$choiceId = _ref13.choiceId,
                        choiceId =
                          _ref13$choiceId === void 0 ? -1 : _ref13$choiceId,
                        _ref13$groupId = _ref13.groupId,
                        groupId =
                          _ref13$groupId === void 0 ? -1 : _ref13$groupId,
                        _ref13$customProperti = _ref13.customProperties,
                        customProperties =
                          _ref13$customProperti === void 0
                            ? null
                            : _ref13$customProperti,
                        _ref13$placeholder = _ref13.placeholder,
                        placeholder =
                          _ref13$placeholder === void 0
                            ? false
                            : _ref13$placeholder,
                        _ref13$keyCode = _ref13.keyCode,
                        keyCode =
                          _ref13$keyCode === void 0 ? null : _ref13$keyCode;
                      var passedValue =
                        typeof value === 'string' ? value.trim() : value;
                      var passedKeyCode = keyCode;
                      var passedCustomProperties = customProperties;
                      var items = this._store.items;
                      var passedLabel = label || passedValue;
                      var passedOptionId = choiceId || -1;
                      var group =
                        groupId >= 0 ? this._store.getGroupById(groupId) : null;
                      var id = items ? items.length + 1 : 1; // If a prepended value has been passed, prepend it

                      if (this.config.prependValue) {
                        passedValue =
                          this.config.prependValue + passedValue.toString();
                      } // If an appended value has been passed, append it

                      if (this.config.appendValue) {
                        passedValue += this.config.appendValue.toString();
                      }

                      this._store.dispatch(
                        items_addItem({
                          value: passedValue,
                          label: passedLabel,
                          id: id,
                          choiceId: passedOptionId,
                          groupId: groupId,
                          customProperties: customProperties,
                          placeholder: placeholder,
                          keyCode: passedKeyCode
                        })
                      );

                      if (this._isSelectOneElement) {
                        this.removeActiveItems(id);
                      } // Trigger change event

                      this.passedElement.triggerEvent(EVENTS.addItem, {
                        id: id,
                        value: passedValue,
                        label: passedLabel,
                        customProperties: passedCustomProperties,
                        groupValue:
                          group && group.value ? group.value : undefined,
                        keyCode: passedKeyCode
                      });
                      return this;
                    };

                    _proto._removeItem = function _removeItem(item) {
                      if (!item || !isType('Object', item)) {
                        return this;
                      }

                      var id = item.id,
                        value = item.value,
                        label = item.label,
                        choiceId = item.choiceId,
                        groupId = item.groupId;
                      var group =
                        groupId >= 0 ? this._store.getGroupById(groupId) : null;

                      this._store.dispatch(items_removeItem(id, choiceId));

                      if (group && group.value) {
                        this.passedElement.triggerEvent(EVENTS.removeItem, {
                          id: id,
                          value: value,
                          label: label,
                          groupValue: group.value
                        });
                      } else {
                        this.passedElement.triggerEvent(EVENTS.removeItem, {
                          id: id,
                          value: value,
                          label: label
                        });
                      }

                      return this;
                    };

                    _proto._addChoice = function _addChoice(_ref14) {
                      var value = _ref14.value,
                        _ref14$label = _ref14.label,
                        label = _ref14$label === void 0 ? null : _ref14$label,
                        _ref14$isSelected = _ref14.isSelected,
                        isSelected =
                          _ref14$isSelected === void 0
                            ? false
                            : _ref14$isSelected,
                        _ref14$isDisabled = _ref14.isDisabled,
                        isDisabled =
                          _ref14$isDisabled === void 0
                            ? false
                            : _ref14$isDisabled,
                        _ref14$groupId = _ref14.groupId,
                        groupId =
                          _ref14$groupId === void 0 ? -1 : _ref14$groupId,
                        _ref14$customProperti = _ref14.customProperties,
                        customProperties =
                          _ref14$customProperti === void 0
                            ? null
                            : _ref14$customProperti,
                        _ref14$placeholder = _ref14.placeholder,
                        placeholder =
                          _ref14$placeholder === void 0
                            ? false
                            : _ref14$placeholder,
                        _ref14$keyCode = _ref14.keyCode,
                        keyCode =
                          _ref14$keyCode === void 0 ? null : _ref14$keyCode;

                      if (typeof value === 'undefined' || value === null) {
                        return;
                      } // Generate unique id

                      var choices = this._store.choices;
                      var choiceLabel = label || value;
                      var choiceId = choices ? choices.length + 1 : 1;
                      var choiceElementId =
                        this._baseId +
                        '-' +
                        this._idNames.itemChoice +
                        '-' +
                        choiceId;

                      this._store.dispatch(
                        choices_addChoice({
                          id: choiceId,
                          groupId: groupId,
                          elementId: choiceElementId,
                          value: value,
                          label: choiceLabel,
                          disabled: isDisabled,
                          customProperties: customProperties,
                          placeholder: placeholder,
                          keyCode: keyCode
                        })
                      );

                      if (isSelected) {
                        this._addItem({
                          value: value,
                          label: choiceLabel,
                          choiceId: choiceId,
                          customProperties: customProperties,
                          placeholder: placeholder,
                          keyCode: keyCode
                        });
                      }
                    };

                    _proto._addGroup = function _addGroup(_ref15) {
                      var _this20 = this;

                      var group = _ref15.group,
                        id = _ref15.id,
                        _ref15$valueKey = _ref15.valueKey,
                        valueKey =
                          _ref15$valueKey === void 0
                            ? 'value'
                            : _ref15$valueKey,
                        _ref15$labelKey = _ref15.labelKey,
                        labelKey =
                          _ref15$labelKey === void 0
                            ? 'label'
                            : _ref15$labelKey;
                      var groupChoices = isType('Object', group)
                        ? group.choices
                        : Array.from(group.getElementsByTagName('OPTION'));
                      var groupId =
                        id || Math.floor(new Date().valueOf() * Math.random());
                      var isDisabled = group.disabled ? group.disabled : false;

                      if (groupChoices) {
                        this._store.dispatch(
                          groups_addGroup({
                            value: group.label,
                            id: groupId,
                            active: true,
                            disabled: isDisabled
                          })
                        );

                        var addGroupChoices = function addGroupChoices(choice) {
                          var isOptDisabled =
                            choice.disabled ||
                            (choice.parentNode && choice.parentNode.disabled);

                          _this20._addChoice({
                            value: choice[valueKey],
                            label: isType('Object', choice)
                              ? choice[labelKey]
                              : choice.innerHTML,
                            isSelected: choice.selected,
                            isDisabled: isOptDisabled,
                            groupId: groupId,
                            customProperties: choice.customProperties,
                            placeholder: choice.placeholder
                          });
                        };

                        groupChoices.forEach(addGroupChoices);
                      } else {
                        this._store.dispatch(
                          groups_addGroup({
                            value: group.label,
                            id: group.id,
                            active: false,
                            disabled: group.disabled
                          })
                        );
                      }
                    };

                    _proto._getTemplate = function _getTemplate(template) {
                      var _this$_templates$temp;

                      if (!template) {
                        return null;
                      }

                      var classNames = this.config.classNames;

                      for (
                        var _len = arguments.length,
                          args = new Array(_len > 1 ? _len - 1 : 0),
                          _key = 1;
                        _key < _len;
                        _key++
                      ) {
                        args[_key - 1] = arguments[_key];
                      }

                      return (_this$_templates$temp = this._templates[
                        template
                      ]).call.apply(
                        _this$_templates$temp,
                        [this, classNames].concat(args)
                      );
                    };

                    _proto._createTemplates = function _createTemplates() {
                      var callbackOnCreateTemplates = this.config
                        .callbackOnCreateTemplates;
                      var userTemplates = {};

                      if (
                        callbackOnCreateTemplates &&
                        typeof callbackOnCreateTemplates === 'function'
                      ) {
                        userTemplates = callbackOnCreateTemplates.call(
                          this,
                          strToEl
                        );
                      }

                      this._templates = cjs_default()(TEMPLATES, userTemplates);
                    };

                    _proto._createElements = function _createElements() {
                      this.containerOuter = new container_Container({
                        element: this._getTemplate(
                          'containerOuter',
                          this._direction,
                          this._isSelectElement,
                          this._isSelectOneElement,
                          this.config.searchEnabled,
                          this.passedElement.element.type
                        ),
                        classNames: this.config.classNames,
                        type: this.passedElement.element.type,
                        position: this.config.position
                      });
                      this.containerInner = new container_Container({
                        element: this._getTemplate('containerInner'),
                        classNames: this.config.classNames,
                        type: this.passedElement.element.type,
                        position: this.config.position
                      });
                      this.input = new input_Input({
                        element: this._getTemplate(
                          'input',
                          this._placeholderValue
                        ),
                        classNames: this.config.classNames,
                        type: this.passedElement.element.type,
                        preventPaste: !this.config.paste
                      });
                      this.choiceList = new list_List({
                        element: this._getTemplate(
                          'choiceList',
                          this._isSelectOneElement
                        )
                      });
                      this.itemList = new list_List({
                        element: this._getTemplate(
                          'itemList',
                          this._isSelectOneElement
                        )
                      });
                      this.dropdown = new Dropdown({
                        element: this._getTemplate('dropdown'),
                        classNames: this.config.classNames,
                        type: this.passedElement.element.type
                      });
                    };

                    _proto._createStructure = function _createStructure() {
                      // Hide original element
                      this.passedElement.conceal(); // Wrap input in container preserving DOM ordering

                      this.containerInner.wrap(this.passedElement.element); // Wrapper inner container with outer container

                      this.containerOuter.wrap(this.containerInner.element);

                      if (this._isSelectOneElement) {
                        this.input.placeholder =
                          this.config.searchPlaceholderValue || '';
                      } else if (this._placeholderValue) {
                        this.input.placeholder = this._placeholderValue;
                        this.input.setWidth();
                      }

                      this.containerOuter.element.appendChild(
                        this.containerInner.element
                      );
                      this.containerOuter.element.appendChild(
                        this.dropdown.element
                      );
                      this.containerInner.element.appendChild(
                        this.itemList.element
                      );

                      if (!this._isTextElement) {
                        this.dropdown.element.appendChild(
                          this.choiceList.element
                        );
                      }

                      if (!this._isSelectOneElement) {
                        this.containerInner.element.appendChild(
                          this.input.element
                        );
                      } else if (this.config.searchEnabled) {
                        this.dropdown.element.insertBefore(
                          this.input.element,
                          this.dropdown.element.firstChild
                        );
                      }

                      if (this._isSelectElement) {
                        this._highlightPosition = 0;
                        this._isSearching = false;

                        this._startLoading();

                        if (this._presetGroups.length) {
                          this._addPredefinedGroups(this._presetGroups);
                        } else {
                          this._addPredefinedChoices(this._presetChoices);
                        }

                        this._stopLoading();
                      }

                      if (this._isTextElement) {
                        this._addPredefinedItems(this._presetItems);
                      }
                    };

                    _proto._addPredefinedGroups = function _addPredefinedGroups(
                      groups
                    ) {
                      var _this21 = this;

                      // If we have a placeholder option
                      var placeholderChoice = this.passedElement
                        .placeholderOption;

                      if (
                        placeholderChoice &&
                        placeholderChoice.parentNode.tagName === 'SELECT'
                      ) {
                        this._addChoice({
                          value: placeholderChoice.value,
                          label: placeholderChoice.innerHTML,
                          isSelected: placeholderChoice.selected,
                          isDisabled: placeholderChoice.disabled,
                          placeholder: true
                        });
                      }

                      groups.forEach(function(group) {
                        return _this21._addGroup({
                          group: group,
                          id: group.id || null
                        });
                      });
                    };

                    _proto._addPredefinedChoices = function _addPredefinedChoices(
                      choices
                    ) {
                      var _this22 = this;

                      // If sorting is enabled or the user is searching, filter choices
                      if (this.config.shouldSort) {
                        choices.sort(this.config.sorter);
                      }

                      var hasSelectedChoice = choices.some(function(choice) {
                        return choice.selected;
                      });
                      var firstEnabledChoiceIndex = choices.findIndex(function(
                        choice
                      ) {
                        return (
                          choice.disabled === undefined || !choice.disabled
                        );
                      });
                      choices.forEach(function(choice, index) {
                        var value = choice.value,
                          label = choice.label,
                          customProperties = choice.customProperties,
                          placeholder = choice.placeholder;

                        if (_this22._isSelectElement) {
                          // If the choice is actually a group
                          if (choice.choices) {
                            _this22._addGroup({
                              group: choice,
                              id: choice.id || null
                            });
                          } else {
                            /**
                             * If there is a selected choice already or the choice is not the first in
                             * the array, add each choice normally.
                             *
                             * Otherwise we pre-select the first enabled choice in the array ("select-one" only)
                             */
                            var shouldPreselect =
                              _this22._isSelectOneElement &&
                              !hasSelectedChoice &&
                              index === firstEnabledChoiceIndex;
                            var isSelected = shouldPreselect
                              ? true
                              : choice.selected;
                            var isDisabled = choice.disabled;

                            _this22._addChoice({
                              value: value,
                              label: label,
                              isSelected: isSelected,
                              isDisabled: isDisabled,
                              customProperties: customProperties,
                              placeholder: placeholder
                            });
                          }
                        } else {
                          _this22._addChoice({
                            value: value,
                            label: label,
                            isSelected: choice.selected,
                            isDisabled: choice.disabled,
                            customProperties: customProperties,
                            placeholder: placeholder
                          });
                        }
                      });
                    };
                    /**
                     * @param {Item[]} items
                     */

                    _proto._addPredefinedItems = function _addPredefinedItems(
                      items
                    ) {
                      var _this23 = this;

                      items.forEach(function(item) {
                        if (typeof item === 'object' && item.value) {
                          _this23._addItem({
                            value: item.value,
                            label: item.label,
                            choiceId: item.id,
                            customProperties: item.customProperties,
                            placeholder: item.placeholder
                          });
                        }

                        if (typeof item === 'string') {
                          _this23._addItem({
                            value: item
                          });
                        }
                      });
                    };

                    _proto._setChoiceOrItem = function _setChoiceOrItem(item) {
                      var _this24 = this;

                      var itemType = getType(item).toLowerCase();
                      var handleType = {
                        object: function object() {
                          if (!item.value) {
                            return;
                          } // If we are dealing with a select input, we need to create an option first
                          // that is then selected. For text inputs we can just add items normally.

                          if (!_this24._isTextElement) {
                            _this24._addChoice({
                              value: item.value,
                              label: item.label,
                              isSelected: true,
                              isDisabled: false,
                              customProperties: item.customProperties,
                              placeholder: item.placeholder
                            });
                          } else {
                            _this24._addItem({
                              value: item.value,
                              label: item.label,
                              choiceId: item.id,
                              customProperties: item.customProperties,
                              placeholder: item.placeholder
                            });
                          }
                        },
                        string: function string() {
                          if (!_this24._isTextElement) {
                            _this24._addChoice({
                              value: item,
                              label: item,
                              isSelected: true,
                              isDisabled: false
                            });
                          } else {
                            _this24._addItem({
                              value: item
                            });
                          }
                        }
                      };
                      handleType[itemType]();
                    };

                    _proto._findAndSelectChoiceByValue = function _findAndSelectChoiceByValue(
                      val
                    ) {
                      var _this25 = this;

                      var choices = this._store.choices; // Check 'value' property exists and the choice isn't already selected

                      var foundChoice = choices.find(function(choice) {
                        return _this25.config.valueComparer(choice.value, val);
                      });

                      if (foundChoice && !foundChoice.selected) {
                        this._addItem({
                          value: foundChoice.value,
                          label: foundChoice.label,
                          choiceId: foundChoice.id,
                          groupId: foundChoice.groupId,
                          customProperties: foundChoice.customProperties,
                          placeholder: foundChoice.placeholder,
                          keyCode: foundChoice.keyCode
                        });
                      }
                    };

                    _proto._generatePlaceholderValue = function _generatePlaceholderValue() {
                      if (this._isSelectElement) {
                        var placeholderOption = this.passedElement
                          .placeholderOption;
                        return placeholderOption
                          ? placeholderOption.text
                          : false;
                      }

                      var _this$config4 = this.config,
                        placeholder = _this$config4.placeholder,
                        placeholderValue = _this$config4.placeholderValue;
                      var dataset = this.passedElement.element.dataset;

                      if (placeholder) {
                        if (placeholderValue) {
                          return placeholderValue;
                        }

                        if (dataset.placeholder) {
                          return dataset.placeholder;
                        }
                      }

                      return false;
                    };

                    return Choices;
                  })();

                /* harmony default export */ var scripts_choices = (__webpack_exports__[
                  'default'
                ] = choices_Choices);

                /***/
              }
              /******/
            ]
          )['default'];
        });
      },
      {}
    ],
    'choice.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.createMultiSelectMenus = void 0;

        var _choices = _interopRequireDefault(require('choices.js'));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var createMultiSelectMenus = function createMultiSelectMenus() {
          var report =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : false;

          if (!report) {
            var selectCategoryCreateTopicForm = new _choices.default(
              '#select-category-create-topic-form'
            );
            var selectTagsCreateTopicForm = new _choices.default(
              '#select-tags-create-topic-form',
              {
                delimiter: ',',
                editItems: true,
                duplicateItemsAllowed: false,
                maxItemCount: 5,
                placeholderValue: 'add tag',
                removeItemButton: true,
                addItemFilter: function addItemFilter(value) {
                  if (!value) {
                    return false;
                  }

                  var regex = /[-a-zA-Z0-9@:%._+#]{1,256}/;
                  var expression = new RegExp(regex.source, 'i');
                  return expression.test(value);
                },
                customAddItemText:
                  'Please enter a valid tag. It should contains only alphanumeric and -%._+# characters are allowed.',
                maxItemText: function maxItemText(maxItemCount) {
                  return String(maxItemCount) + ' tags can be defined at most';
                },
                uniqueItemText: 'This is tag has already been added'
              }
            );
            var selectMediaUrlsCreateTopicForm = new _choices.default(
              '#select-mediaUrls-create-topic-form',
              {
                delimiter: ',',
                editItems: true,
                addItemFilter: function addItemFilter(value) {
                  if (!value) {
                    return false;
                  }

                  var regex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;
                  var expression = new RegExp(regex.source, 'i');
                  return expression.test(value);
                },
                customAddItemText: 'Please enter a valid link.',
                duplicateItemsAllowed: false,
                maxItemCount: 5,
                placeholderValue: 'add source',
                removeItemButton: true,
                maxItemText: function maxItemText(maxItemCount) {
                  return (
                    String(maxItemCount) + ' sources can be defined at most'
                  );
                },
                uniqueItemText: 'This source has already been provided'
              }
            );
            return [
              selectCategoryCreateTopicForm,
              selectTagsCreateTopicForm,
              selectMediaUrlsCreateTopicForm
            ];
          } else {
            var selectMediaUrlsCreateReportForm = new _choices.default(
              '#select-mediaUrls-create-report-form',
              {
                delimiter: ',',
                editItems: true,
                addItemFilter: function addItemFilter(value) {
                  if (!value) {
                    return false;
                  }

                  var regex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;
                  var expression = new RegExp(regex.source, 'i');
                  return expression.test(value);
                },
                customAddItemText: 'Only valid links are allowed.',
                duplicateItemsAllowed: false,
                maxItemCount: 5,
                placeholderValue: 'add source',
                removeItemButton: true,
                maxItemText: function maxItemText(maxItemCount) {
                  return (
                    String(maxItemCount) + ' sources can be defined at most'
                  );
                },
                uniqueItemText: 'This source has already been provided'
              }
            );
            return selectMediaUrlsCreateReportForm;
          }
        };

        exports.createMultiSelectMenus = createMultiSelectMenus;
      },
      {
        'choices.js':
          '../../node_modules/choices.js/public/assets/scripts/choices.js'
      }
    ],
    '../../node_modules/base64-js/index.js': [
      function(require, module, exports) {
        'use strict';

        exports.byteLength = byteLength;
        exports.toByteArray = toByteArray;
        exports.fromByteArray = fromByteArray;

        var lookup = [];
        var revLookup = [];
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

        var code =
          'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
        for (var i = 0, len = code.length; i < len; ++i) {
          lookup[i] = code[i];
          revLookup[code.charCodeAt(i)] = i;
        }

        // Support decoding URL-safe base64 strings, as Node.js does.
        // See: https://en.wikipedia.org/wiki/Base64#URL_applications
        revLookup['-'.charCodeAt(0)] = 62;
        revLookup['_'.charCodeAt(0)] = 63;

        function getLens(b64) {
          var len = b64.length;

          if (len % 4 > 0) {
            throw new Error('Invalid string. Length must be a multiple of 4');
          }

          // Trim off extra bytes after placeholder bytes are found
          // See: https://github.com/beatgammit/base64-js/issues/42
          var validLen = b64.indexOf('=');
          if (validLen === -1) validLen = len;

          var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);

          return [validLen, placeHoldersLen];
        }

        // base64 is 4/3 + up to two characters of the original data
        function byteLength(b64) {
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];
          return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
        }

        function _byteLength(b64, validLen, placeHoldersLen) {
          return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
        }

        function toByteArray(b64) {
          var tmp;
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];

          var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

          var curByte = 0;

          // if there are placeholders, only get up to the last complete 4 chars
          var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

          var i;
          for (i = 0; i < len; i += 4) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 18) |
              (revLookup[b64.charCodeAt(i + 1)] << 12) |
              (revLookup[b64.charCodeAt(i + 2)] << 6) |
              revLookup[b64.charCodeAt(i + 3)];
            arr[curByte++] = (tmp >> 16) & 0xff;
            arr[curByte++] = (tmp >> 8) & 0xff;
            arr[curByte++] = tmp & 0xff;
          }

          if (placeHoldersLen === 2) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 2) |
              (revLookup[b64.charCodeAt(i + 1)] >> 4);
            arr[curByte++] = tmp & 0xff;
          }

          if (placeHoldersLen === 1) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 10) |
              (revLookup[b64.charCodeAt(i + 1)] << 4) |
              (revLookup[b64.charCodeAt(i + 2)] >> 2);
            arr[curByte++] = (tmp >> 8) & 0xff;
            arr[curByte++] = tmp & 0xff;
          }

          return arr;
        }

        function tripletToBase64(num) {
          return (
            lookup[(num >> 18) & 0x3f] +
            lookup[(num >> 12) & 0x3f] +
            lookup[(num >> 6) & 0x3f] +
            lookup[num & 0x3f]
          );
        }

        function encodeChunk(uint8, start, end) {
          var tmp;
          var output = [];
          for (var i = start; i < end; i += 3) {
            tmp =
              ((uint8[i] << 16) & 0xff0000) +
              ((uint8[i + 1] << 8) & 0xff00) +
              (uint8[i + 2] & 0xff);
            output.push(tripletToBase64(tmp));
          }
          return output.join('');
        }

        function fromByteArray(uint8) {
          var tmp;
          var len = uint8.length;
          var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
          var parts = [];
          var maxChunkLength = 16383; // must be multiple of 3

          // go through the array every three bytes, we'll deal with trailing stuff later
          for (
            var i = 0, len2 = len - extraBytes;
            i < len2;
            i += maxChunkLength
          ) {
            parts.push(
              encodeChunk(
                uint8,
                i,
                i + maxChunkLength > len2 ? len2 : i + maxChunkLength
              )
            );
          }

          // pad the end with zeros, but make sure to not forget the extra bytes
          if (extraBytes === 1) {
            tmp = uint8[len - 1];
            parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + '==');
          } else if (extraBytes === 2) {
            tmp = (uint8[len - 2] << 8) + uint8[len - 1];
            parts.push(
              lookup[tmp >> 10] +
                lookup[(tmp >> 4) & 0x3f] +
                lookup[(tmp << 2) & 0x3f] +
                '='
            );
          }

          return parts.join('');
        }
      },
      {}
    ],
    '../../node_modules/ieee754/index.js': [
      function(require, module, exports) {
        exports.read = function(buffer, offset, isLE, mLen, nBytes) {
          var e, m;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var nBits = -7;
          var i = isLE ? nBytes - 1 : 0;
          var d = isLE ? -1 : 1;
          var s = buffer[offset + i];

          i += d;

          e = s & ((1 << -nBits) - 1);
          s >>= -nBits;
          nBits += eLen;
          for (
            ;
            nBits > 0;
            e = e * 256 + buffer[offset + i], i += d, nBits -= 8
          ) {}

          m = e & ((1 << -nBits) - 1);
          e >>= -nBits;
          nBits += mLen;
          for (
            ;
            nBits > 0;
            m = m * 256 + buffer[offset + i], i += d, nBits -= 8
          ) {}

          if (e === 0) {
            e = 1 - eBias;
          } else if (e === eMax) {
            return m ? NaN : (s ? -1 : 1) * Infinity;
          } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
          }
          return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
        };

        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
          var e, m, c;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
          var i = isLE ? 0 : nBytes - 1;
          var d = isLE ? 1 : -1;
          var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

          value = Math.abs(value);

          if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
          } else {
            e = Math.floor(Math.log(value) / Math.LN2);
            if (value * (c = Math.pow(2, -e)) < 1) {
              e--;
              c *= 2;
            }
            if (e + eBias >= 1) {
              value += rt / c;
            } else {
              value += rt * Math.pow(2, 1 - eBias);
            }
            if (value * c >= 2) {
              e++;
              c /= 2;
            }

            if (e + eBias >= eMax) {
              m = 0;
              e = eMax;
            } else if (e + eBias >= 1) {
              m = (value * c - 1) * Math.pow(2, mLen);
              e = e + eBias;
            } else {
              m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
              e = 0;
            }
          }

          for (
            ;
            mLen >= 8;
            buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8
          ) {}

          e = (e << mLen) | m;
          eLen += mLen;
          for (
            ;
            eLen > 0;
            buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8
          ) {}

          buffer[offset + i - d] |= s * 128;
        };
      },
      {}
    ],
    '../../node_modules/isarray/index.js': [
      function(require, module, exports) {
        var toString = {}.toString;

        module.exports =
          Array.isArray ||
          function(arr) {
            return toString.call(arr) == '[object Array]';
          };
      },
      {}
    ],
    '../../node_modules/buffer/index.js': [
      function(require, module, exports) {
        var global = arguments[3];
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <http://feross.org>
         * @license  MIT
         */
        /* eslint-disable no-proto */

        ('use strict');

        var base64 = require('base64-js');
        var ieee754 = require('ieee754');
        var isArray = require('isarray');

        exports.Buffer = Buffer;
        exports.SlowBuffer = SlowBuffer;
        exports.INSPECT_MAX_BYTES = 50;

        /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
        Buffer.TYPED_ARRAY_SUPPORT =
          global.TYPED_ARRAY_SUPPORT !== undefined
            ? global.TYPED_ARRAY_SUPPORT
            : typedArraySupport();

        /*
         * Export kMaxLength after typed array support is determined.
         */
        exports.kMaxLength = kMaxLength();

        function typedArraySupport() {
          try {
            var arr = new Uint8Array(1);
            arr.__proto__ = {
              __proto__: Uint8Array.prototype,
              foo: function() {
                return 42;
              }
            };
            return (
              arr.foo() === 42 && // typed array instances can be augmented
              typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
              arr.subarray(1, 1).byteLength === 0
            ); // ie10 has broken `subarray`
          } catch (e) {
            return false;
          }
        }

        function kMaxLength() {
          return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
        }

        function createBuffer(that, length) {
          if (kMaxLength() < length) {
            throw new RangeError('Invalid typed array length');
          }
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            // Return an augmented `Uint8Array` instance, for best performance
            that = new Uint8Array(length);
            that.__proto__ = Buffer.prototype;
          } else {
            // Fallback: Return an object instance of the Buffer class
            if (that === null) {
              that = new Buffer(length);
            }
            that.length = length;
          }

          return that;
        }

        /**
         * The Buffer constructor returns instances of `Uint8Array` that have their
         * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
         * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
         * and the `Uint8Array` methods. Square bracket notation works as expected -- it
         * returns a single octet.
         *
         * The `Uint8Array` prototype remains unmodified.
         */

        function Buffer(arg, encodingOrOffset, length) {
          if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
            return new Buffer(arg, encodingOrOffset, length);
          }

          // Common case.
          if (typeof arg === 'number') {
            if (typeof encodingOrOffset === 'string') {
              throw new Error(
                'If encoding is specified then the first argument must be a string'
              );
            }
            return allocUnsafe(this, arg);
          }
          return from(this, arg, encodingOrOffset, length);
        }

        Buffer.poolSize = 8192; // not used by this implementation

        // TODO: Legacy, not needed anymore. Remove in next major version.
        Buffer._augment = function(arr) {
          arr.__proto__ = Buffer.prototype;
          return arr;
        };

        function from(that, value, encodingOrOffset, length) {
          if (typeof value === 'number') {
            throw new TypeError('"value" argument must not be a number');
          }

          if (
            typeof ArrayBuffer !== 'undefined' &&
            value instanceof ArrayBuffer
          ) {
            return fromArrayBuffer(that, value, encodingOrOffset, length);
          }

          if (typeof value === 'string') {
            return fromString(that, value, encodingOrOffset);
          }

          return fromObject(that, value);
        }

        /**
         * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
         * if value is a number.
         * Buffer.from(str[, encoding])
         * Buffer.from(array)
         * Buffer.from(buffer)
         * Buffer.from(arrayBuffer[, byteOffset[, length]])
         **/
        Buffer.from = function(value, encodingOrOffset, length) {
          return from(null, value, encodingOrOffset, length);
        };

        if (Buffer.TYPED_ARRAY_SUPPORT) {
          Buffer.prototype.__proto__ = Uint8Array.prototype;
          Buffer.__proto__ = Uint8Array;
          if (
            typeof Symbol !== 'undefined' &&
            Symbol.species &&
            Buffer[Symbol.species] === Buffer
          ) {
            // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
            Object.defineProperty(Buffer, Symbol.species, {
              value: null,
              configurable: true
            });
          }
        }

        function assertSize(size) {
          if (typeof size !== 'number') {
            throw new TypeError('"size" argument must be a number');
          } else if (size < 0) {
            throw new RangeError('"size" argument must not be negative');
          }
        }

        function alloc(that, size, fill, encoding) {
          assertSize(size);
          if (size <= 0) {
            return createBuffer(that, size);
          }
          if (fill !== undefined) {
            // Only pay attention to encoding if it's a string. This
            // prevents accidentally sending in a number that would
            // be interpretted as a start offset.
            return typeof encoding === 'string'
              ? createBuffer(that, size).fill(fill, encoding)
              : createBuffer(that, size).fill(fill);
          }
          return createBuffer(that, size);
        }

        /**
         * Creates a new filled Buffer instance.
         * alloc(size[, fill[, encoding]])
         **/
        Buffer.alloc = function(size, fill, encoding) {
          return alloc(null, size, fill, encoding);
        };

        function allocUnsafe(that, size) {
          assertSize(size);
          that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT) {
            for (var i = 0; i < size; ++i) {
              that[i] = 0;
            }
          }
          return that;
        }

        /**
         * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
         * */
        Buffer.allocUnsafe = function(size) {
          return allocUnsafe(null, size);
        };
        /**
         * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
         */
        Buffer.allocUnsafeSlow = function(size) {
          return allocUnsafe(null, size);
        };

        function fromString(that, string, encoding) {
          if (typeof encoding !== 'string' || encoding === '') {
            encoding = 'utf8';
          }

          if (!Buffer.isEncoding(encoding)) {
            throw new TypeError('"encoding" must be a valid string encoding');
          }

          var length = byteLength(string, encoding) | 0;
          that = createBuffer(that, length);

          var actual = that.write(string, encoding);

          if (actual !== length) {
            // Writing a hex string, for example, that contains invalid characters will
            // cause everything after the first invalid character to be ignored. (e.g.
            // 'abxxcd' will be treated as 'ab')
            that = that.slice(0, actual);
          }

          return that;
        }

        function fromArrayLike(that, array) {
          var length = array.length < 0 ? 0 : checked(array.length) | 0;
          that = createBuffer(that, length);
          for (var i = 0; i < length; i += 1) {
            that[i] = array[i] & 255;
          }
          return that;
        }

        function fromArrayBuffer(that, array, byteOffset, length) {
          array.byteLength; // this throws if `array` is not a valid ArrayBuffer

          if (byteOffset < 0 || array.byteLength < byteOffset) {
            throw new RangeError("'offset' is out of bounds");
          }

          if (array.byteLength < byteOffset + (length || 0)) {
            throw new RangeError("'length' is out of bounds");
          }

          if (byteOffset === undefined && length === undefined) {
            array = new Uint8Array(array);
          } else if (length === undefined) {
            array = new Uint8Array(array, byteOffset);
          } else {
            array = new Uint8Array(array, byteOffset, length);
          }

          if (Buffer.TYPED_ARRAY_SUPPORT) {
            // Return an augmented `Uint8Array` instance, for best performance
            that = array;
            that.__proto__ = Buffer.prototype;
          } else {
            // Fallback: Return an object instance of the Buffer class
            that = fromArrayLike(that, array);
          }
          return that;
        }

        function fromObject(that, obj) {
          if (Buffer.isBuffer(obj)) {
            var len = checked(obj.length) | 0;
            that = createBuffer(that, len);

            if (that.length === 0) {
              return that;
            }

            obj.copy(that, 0, 0, len);
            return that;
          }

          if (obj) {
            if (
              (typeof ArrayBuffer !== 'undefined' &&
                obj.buffer instanceof ArrayBuffer) ||
              'length' in obj
            ) {
              if (typeof obj.length !== 'number' || isnan(obj.length)) {
                return createBuffer(that, 0);
              }
              return fromArrayLike(that, obj);
            }

            if (obj.type === 'Buffer' && isArray(obj.data)) {
              return fromArrayLike(that, obj.data);
            }
          }

          throw new TypeError(
            'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
          );
        }

        function checked(length) {
          // Note: cannot use `length < kMaxLength()` here because that fails when
          // length is NaN (which is otherwise coerced to zero.)
          if (length >= kMaxLength()) {
            throw new RangeError(
              'Attempt to allocate Buffer larger than maximum ' +
                'size: 0x' +
                kMaxLength().toString(16) +
                ' bytes'
            );
          }
          return length | 0;
        }

        function SlowBuffer(length) {
          if (+length != length) {
            // eslint-disable-line eqeqeq
            length = 0;
          }
          return Buffer.alloc(+length);
        }

        Buffer.isBuffer = function isBuffer(b) {
          return !!(b != null && b._isBuffer);
        };

        Buffer.compare = function compare(a, b) {
          if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
            throw new TypeError('Arguments must be Buffers');
          }

          if (a === b) return 0;

          var x = a.length;
          var y = b.length;

          for (var i = 0, len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
              x = a[i];
              y = b[i];
              break;
            }
          }

          if (x < y) return -1;
          if (y < x) return 1;
          return 0;
        };

        Buffer.isEncoding = function isEncoding(encoding) {
          switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return true;
            default:
              return false;
          }
        };

        Buffer.concat = function concat(list, length) {
          if (!isArray(list)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          }

          if (list.length === 0) {
            return Buffer.alloc(0);
          }

          var i;
          if (length === undefined) {
            length = 0;
            for (i = 0; i < list.length; ++i) {
              length += list[i].length;
            }
          }

          var buffer = Buffer.allocUnsafe(length);
          var pos = 0;
          for (i = 0; i < list.length; ++i) {
            var buf = list[i];
            if (!Buffer.isBuffer(buf)) {
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            }
            buf.copy(buffer, pos);
            pos += buf.length;
          }
          return buffer;
        };

        function byteLength(string, encoding) {
          if (Buffer.isBuffer(string)) {
            return string.length;
          }
          if (
            typeof ArrayBuffer !== 'undefined' &&
            typeof ArrayBuffer.isView === 'function' &&
            (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)
          ) {
            return string.byteLength;
          }
          if (typeof string !== 'string') {
            string = '' + string;
          }

          var len = string.length;
          if (len === 0) return 0;

          // Use a for loop to avoid recursion
          var loweredCase = false;
          for (;;) {
            switch (encoding) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return len;
              case 'utf8':
              case 'utf-8':
              case undefined:
                return utf8ToBytes(string).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return len * 2;
              case 'hex':
                return len >>> 1;
              case 'base64':
                return base64ToBytes(string).length;
              default:
                if (loweredCase) return utf8ToBytes(string).length; // assume utf8
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        }
        Buffer.byteLength = byteLength;

        function slowToString(encoding, start, end) {
          var loweredCase = false;

          // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
          // property of a typed array.

          // This behaves neither like String nor Uint8Array in that we set start/end
          // to their upper/lower bounds if the value passed is out of range.
          // undefined is handled specially as per ECMA-262 6th Edition,
          // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
          if (start === undefined || start < 0) {
            start = 0;
          }
          // Return early if start > this.length. Done here to prevent potential uint32
          // coercion fail below.
          if (start > this.length) {
            return '';
          }

          if (end === undefined || end > this.length) {
            end = this.length;
          }

          if (end <= 0) {
            return '';
          }

          // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
          end >>>= 0;
          start >>>= 0;

          if (end <= start) {
            return '';
          }

          if (!encoding) encoding = 'utf8';

          while (true) {
            switch (encoding) {
              case 'hex':
                return hexSlice(this, start, end);

              case 'utf8':
              case 'utf-8':
                return utf8Slice(this, start, end);

              case 'ascii':
                return asciiSlice(this, start, end);

              case 'latin1':
              case 'binary':
                return latin1Slice(this, start, end);

              case 'base64':
                return base64Slice(this, start, end);

              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return utf16leSlice(this, start, end);

              default:
                if (loweredCase)
                  throw new TypeError('Unknown encoding: ' + encoding);
                encoding = (encoding + '').toLowerCase();
                loweredCase = true;
            }
          }
        }

        // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
        // Buffer instances.
        Buffer.prototype._isBuffer = true;

        function swap(b, n, m) {
          var i = b[n];
          b[n] = b[m];
          b[m] = i;
        }

        Buffer.prototype.swap16 = function swap16() {
          var len = this.length;
          if (len % 2 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          }
          for (var i = 0; i < len; i += 2) {
            swap(this, i, i + 1);
          }
          return this;
        };

        Buffer.prototype.swap32 = function swap32() {
          var len = this.length;
          if (len % 4 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          }
          for (var i = 0; i < len; i += 4) {
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
          }
          return this;
        };

        Buffer.prototype.swap64 = function swap64() {
          var len = this.length;
          if (len % 8 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          }
          for (var i = 0; i < len; i += 8) {
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
          }
          return this;
        };

        Buffer.prototype.toString = function toString() {
          var length = this.length | 0;
          if (length === 0) return '';
          if (arguments.length === 0) return utf8Slice(this, 0, length);
          return slowToString.apply(this, arguments);
        };

        Buffer.prototype.equals = function equals(b) {
          if (!Buffer.isBuffer(b))
            throw new TypeError('Argument must be a Buffer');
          if (this === b) return true;
          return Buffer.compare(this, b) === 0;
        };

        Buffer.prototype.inspect = function inspect() {
          var str = '';
          var max = exports.INSPECT_MAX_BYTES;
          if (this.length > 0) {
            str = this.toString('hex', 0, max)
              .match(/.{2}/g)
              .join(' ');
            if (this.length > max) str += ' ... ';
          }
          return '<Buffer ' + str + '>';
        };

        Buffer.prototype.compare = function compare(
          target,
          start,
          end,
          thisStart,
          thisEnd
        ) {
          if (!Buffer.isBuffer(target)) {
            throw new TypeError('Argument must be a Buffer');
          }

          if (start === undefined) {
            start = 0;
          }
          if (end === undefined) {
            end = target ? target.length : 0;
          }
          if (thisStart === undefined) {
            thisStart = 0;
          }
          if (thisEnd === undefined) {
            thisEnd = this.length;
          }

          if (
            start < 0 ||
            end > target.length ||
            thisStart < 0 ||
            thisEnd > this.length
          ) {
            throw new RangeError('out of range index');
          }

          if (thisStart >= thisEnd && start >= end) {
            return 0;
          }
          if (thisStart >= thisEnd) {
            return -1;
          }
          if (start >= end) {
            return 1;
          }

          start >>>= 0;
          end >>>= 0;
          thisStart >>>= 0;
          thisEnd >>>= 0;

          if (this === target) return 0;

          var x = thisEnd - thisStart;
          var y = end - start;
          var len = Math.min(x, y);

          var thisCopy = this.slice(thisStart, thisEnd);
          var targetCopy = target.slice(start, end);

          for (var i = 0; i < len; ++i) {
            if (thisCopy[i] !== targetCopy[i]) {
              x = thisCopy[i];
              y = targetCopy[i];
              break;
            }
          }

          if (x < y) return -1;
          if (y < x) return 1;
          return 0;
        };

        // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
        // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
        //
        // Arguments:
        // - buffer - a Buffer to search
        // - val - a string, Buffer, or number
        // - byteOffset - an index into `buffer`; will be clamped to an int32
        // - encoding - an optional encoding, relevant is val is a string
        // - dir - true for indexOf, false for lastIndexOf
        function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
          // Empty buffer means no match
          if (buffer.length === 0) return -1;

          // Normalize byteOffset
          if (typeof byteOffset === 'string') {
            encoding = byteOffset;
            byteOffset = 0;
          } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
          } else if (byteOffset < -0x80000000) {
            byteOffset = -0x80000000;
          }
          byteOffset = +byteOffset; // Coerce to Number.
          if (isNaN(byteOffset)) {
            // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
            byteOffset = dir ? 0 : buffer.length - 1;
          }

          // Normalize byteOffset: negative offsets start from the end of the buffer
          if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
          if (byteOffset >= buffer.length) {
            if (dir) return -1;
            else byteOffset = buffer.length - 1;
          } else if (byteOffset < 0) {
            if (dir) byteOffset = 0;
            else return -1;
          }

          // Normalize val
          if (typeof val === 'string') {
            val = Buffer.from(val, encoding);
          }

          // Finally, search either indexOf (if dir is true) or lastIndexOf
          if (Buffer.isBuffer(val)) {
            // Special case: looking for empty string/buffer always fails
            if (val.length === 0) {
              return -1;
            }
            return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
          } else if (typeof val === 'number') {
            val = val & 0xff; // Search for a byte value [0-255]
            if (
              Buffer.TYPED_ARRAY_SUPPORT &&
              typeof Uint8Array.prototype.indexOf === 'function'
            ) {
              if (dir) {
                return Uint8Array.prototype.indexOf.call(
                  buffer,
                  val,
                  byteOffset
                );
              } else {
                return Uint8Array.prototype.lastIndexOf.call(
                  buffer,
                  val,
                  byteOffset
                );
              }
            }
            return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
          }

          throw new TypeError('val must be string, number or Buffer');
        }

        function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
          var indexSize = 1;
          var arrLength = arr.length;
          var valLength = val.length;

          if (encoding !== undefined) {
            encoding = String(encoding).toLowerCase();
            if (
              encoding === 'ucs2' ||
              encoding === 'ucs-2' ||
              encoding === 'utf16le' ||
              encoding === 'utf-16le'
            ) {
              if (arr.length < 2 || val.length < 2) {
                return -1;
              }
              indexSize = 2;
              arrLength /= 2;
              valLength /= 2;
              byteOffset /= 2;
            }
          }

          function read(buf, i) {
            if (indexSize === 1) {
              return buf[i];
            } else {
              return buf.readUInt16BE(i * indexSize);
            }
          }

          var i;
          if (dir) {
            var foundIndex = -1;
            for (i = byteOffset; i < arrLength; i++) {
              if (
                read(arr, i) ===
                read(val, foundIndex === -1 ? 0 : i - foundIndex)
              ) {
                if (foundIndex === -1) foundIndex = i;
                if (i - foundIndex + 1 === valLength)
                  return foundIndex * indexSize;
              } else {
                if (foundIndex !== -1) i -= i - foundIndex;
                foundIndex = -1;
              }
            }
          } else {
            if (byteOffset + valLength > arrLength)
              byteOffset = arrLength - valLength;
            for (i = byteOffset; i >= 0; i--) {
              var found = true;
              for (var j = 0; j < valLength; j++) {
                if (read(arr, i + j) !== read(val, j)) {
                  found = false;
                  break;
                }
              }
              if (found) return i;
            }
          }

          return -1;
        }

        Buffer.prototype.includes = function includes(
          val,
          byteOffset,
          encoding
        ) {
          return this.indexOf(val, byteOffset, encoding) !== -1;
        };

        Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
        };

        Buffer.prototype.lastIndexOf = function lastIndexOf(
          val,
          byteOffset,
          encoding
        ) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
        };

        function hexWrite(buf, string, offset, length) {
          offset = Number(offset) || 0;
          var remaining = buf.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = Number(length);
            if (length > remaining) {
              length = remaining;
            }
          }

          // must be an even number of digits
          var strLen = string.length;
          if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

          if (length > strLen / 2) {
            length = strLen / 2;
          }
          for (var i = 0; i < length; ++i) {
            var parsed = parseInt(string.substr(i * 2, 2), 16);
            if (isNaN(parsed)) return i;
            buf[offset + i] = parsed;
          }
          return i;
        }

        function utf8Write(buf, string, offset, length) {
          return blitBuffer(
            utf8ToBytes(string, buf.length - offset),
            buf,
            offset,
            length
          );
        }

        function asciiWrite(buf, string, offset, length) {
          return blitBuffer(asciiToBytes(string), buf, offset, length);
        }

        function latin1Write(buf, string, offset, length) {
          return asciiWrite(buf, string, offset, length);
        }

        function base64Write(buf, string, offset, length) {
          return blitBuffer(base64ToBytes(string), buf, offset, length);
        }

        function ucs2Write(buf, string, offset, length) {
          return blitBuffer(
            utf16leToBytes(string, buf.length - offset),
            buf,
            offset,
            length
          );
        }

        Buffer.prototype.write = function write(
          string,
          offset,
          length,
          encoding
        ) {
          // Buffer#write(string)
          if (offset === undefined) {
            encoding = 'utf8';
            length = this.length;
            offset = 0;
            // Buffer#write(string, encoding)
          } else if (length === undefined && typeof offset === 'string') {
            encoding = offset;
            length = this.length;
            offset = 0;
            // Buffer#write(string, offset[, length][, encoding])
          } else if (isFinite(offset)) {
            offset = offset | 0;
            if (isFinite(length)) {
              length = length | 0;
              if (encoding === undefined) encoding = 'utf8';
            } else {
              encoding = length;
              length = undefined;
            }
            // legacy write(string, encoding, offset, length) - remove in v0.13
          } else {
            throw new Error(
              'Buffer.write(string, encoding, offset[, length]) is no longer supported'
            );
          }

          var remaining = this.length - offset;
          if (length === undefined || length > remaining) length = remaining;

          if (
            (string.length > 0 && (length < 0 || offset < 0)) ||
            offset > this.length
          ) {
            throw new RangeError('Attempt to write outside buffer bounds');
          }

          if (!encoding) encoding = 'utf8';

          var loweredCase = false;
          for (;;) {
            switch (encoding) {
              case 'hex':
                return hexWrite(this, string, offset, length);

              case 'utf8':
              case 'utf-8':
                return utf8Write(this, string, offset, length);

              case 'ascii':
                return asciiWrite(this, string, offset, length);

              case 'latin1':
              case 'binary':
                return latin1Write(this, string, offset, length);

              case 'base64':
                // Warning: maxLength not taken into account in base64Write
                return base64Write(this, string, offset, length);

              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return ucs2Write(this, string, offset, length);

              default:
                if (loweredCase)
                  throw new TypeError('Unknown encoding: ' + encoding);
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        };

        Buffer.prototype.toJSON = function toJSON() {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0)
          };
        };

        function base64Slice(buf, start, end) {
          if (start === 0 && end === buf.length) {
            return base64.fromByteArray(buf);
          } else {
            return base64.fromByteArray(buf.slice(start, end));
          }
        }

        function utf8Slice(buf, start, end) {
          end = Math.min(buf.length, end);
          var res = [];

          var i = start;
          while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence =
              firstByte > 0xef
                ? 4
                : firstByte > 0xdf
                ? 3
                : firstByte > 0xbf
                ? 2
                : 1;

            if (i + bytesPerSequence <= end) {
              var secondByte, thirdByte, fourthByte, tempCodePoint;

              switch (bytesPerSequence) {
                case 1:
                  if (firstByte < 0x80) {
                    codePoint = firstByte;
                  }
                  break;
                case 2:
                  secondByte = buf[i + 1];
                  if ((secondByte & 0xc0) === 0x80) {
                    tempCodePoint =
                      ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f);
                    if (tempCodePoint > 0x7f) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 3:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  if (
                    (secondByte & 0xc0) === 0x80 &&
                    (thirdByte & 0xc0) === 0x80
                  ) {
                    tempCodePoint =
                      ((firstByte & 0xf) << 0xc) |
                      ((secondByte & 0x3f) << 0x6) |
                      (thirdByte & 0x3f);
                    if (
                      tempCodePoint > 0x7ff &&
                      (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)
                    ) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 4:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  fourthByte = buf[i + 3];
                  if (
                    (secondByte & 0xc0) === 0x80 &&
                    (thirdByte & 0xc0) === 0x80 &&
                    (fourthByte & 0xc0) === 0x80
                  ) {
                    tempCodePoint =
                      ((firstByte & 0xf) << 0x12) |
                      ((secondByte & 0x3f) << 0xc) |
                      ((thirdByte & 0x3f) << 0x6) |
                      (fourthByte & 0x3f);
                    if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {
                      codePoint = tempCodePoint;
                    }
                  }
              }
            }

            if (codePoint === null) {
              // we did not generate a valid codePoint so insert a
              // replacement char (U+FFFD) and advance only 1 byte
              codePoint = 0xfffd;
              bytesPerSequence = 1;
            } else if (codePoint > 0xffff) {
              // encode to utf16 (surrogate pair dance)
              codePoint -= 0x10000;
              res.push(((codePoint >>> 10) & 0x3ff) | 0xd800);
              codePoint = 0xdc00 | (codePoint & 0x3ff);
            }

            res.push(codePoint);
            i += bytesPerSequence;
          }

          return decodeCodePointsArray(res);
        }

        // Based on http://stackoverflow.com/a/22747272/680742, the browser with
        // the lowest limit is Chrome, with 0x10000 args.
        // We go 1 magnitude less, for safety
        var MAX_ARGUMENTS_LENGTH = 0x1000;

        function decodeCodePointsArray(codePoints) {
          var len = codePoints.length;
          if (len <= MAX_ARGUMENTS_LENGTH) {
            return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
          }

          // Decode in chunks to avoid "call stack size exceeded".
          var res = '';
          var i = 0;
          while (i < len) {
            res += String.fromCharCode.apply(
              String,
              codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH))
            );
          }
          return res;
        }

        function asciiSlice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);

          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i] & 0x7f);
          }
          return ret;
        }

        function latin1Slice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);

          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i]);
          }
          return ret;
        }

        function hexSlice(buf, start, end) {
          var len = buf.length;

          if (!start || start < 0) start = 0;
          if (!end || end < 0 || end > len) end = len;

          var out = '';
          for (var i = start; i < end; ++i) {
            out += toHex(buf[i]);
          }
          return out;
        }

        function utf16leSlice(buf, start, end) {
          var bytes = buf.slice(start, end);
          var res = '';
          for (var i = 0; i < bytes.length; i += 2) {
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
          }
          return res;
        }

        Buffer.prototype.slice = function slice(start, end) {
          var len = this.length;
          start = ~~start;
          end = end === undefined ? len : ~~end;

          if (start < 0) {
            start += len;
            if (start < 0) start = 0;
          } else if (start > len) {
            start = len;
          }

          if (end < 0) {
            end += len;
            if (end < 0) end = 0;
          } else if (end > len) {
            end = len;
          }

          if (end < start) end = start;

          var newBuf;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            newBuf = this.subarray(start, end);
            newBuf.__proto__ = Buffer.prototype;
          } else {
            var sliceLen = end - start;
            newBuf = new Buffer(sliceLen, undefined);
            for (var i = 0; i < sliceLen; ++i) {
              newBuf[i] = this[i + start];
            }
          }

          return newBuf;
        };

        /*
         * Need to make sure that buffer isn't trying to write out of bounds.
         */
        function checkOffset(offset, ext, length) {
          if (offset % 1 !== 0 || offset < 0)
            throw new RangeError('offset is not uint');
          if (offset + ext > length)
            throw new RangeError('Trying to access beyond buffer length');
        }

        Buffer.prototype.readUIntLE = function readUIntLE(
          offset,
          byteLength,
          noAssert
        ) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }

          return val;
        };

        Buffer.prototype.readUIntBE = function readUIntBE(
          offset,
          byteLength,
          noAssert
        ) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            checkOffset(offset, byteLength, this.length);
          }

          var val = this[offset + --byteLength];
          var mul = 1;
          while (byteLength > 0 && (mul *= 0x100)) {
            val += this[offset + --byteLength] * mul;
          }

          return val;
        };

        Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 1, this.length);
          return this[offset];
        };

        Buffer.prototype.readUInt16LE = function readUInt16LE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          return this[offset] | (this[offset + 1] << 8);
        };

        Buffer.prototype.readUInt16BE = function readUInt16BE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          return (this[offset] << 8) | this[offset + 1];
        };

        Buffer.prototype.readUInt32LE = function readUInt32LE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            (this[offset] |
              (this[offset + 1] << 8) |
              (this[offset + 2] << 16)) +
            this[offset + 3] * 0x1000000
          );
        };

        Buffer.prototype.readUInt32BE = function readUInt32BE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            this[offset] * 0x1000000 +
            ((this[offset + 1] << 16) |
              (this[offset + 2] << 8) |
              this[offset + 3])
          );
        };

        Buffer.prototype.readIntLE = function readIntLE(
          offset,
          byteLength,
          noAssert
        ) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
          mul *= 0x80;

          if (val >= mul) val -= Math.pow(2, 8 * byteLength);

          return val;
        };

        Buffer.prototype.readIntBE = function readIntBE(
          offset,
          byteLength,
          noAssert
        ) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var i = byteLength;
          var mul = 1;
          var val = this[offset + --i];
          while (i > 0 && (mul *= 0x100)) {
            val += this[offset + --i] * mul;
          }
          mul *= 0x80;

          if (val >= mul) val -= Math.pow(2, 8 * byteLength);

          return val;
        };

        Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 1, this.length);
          if (!(this[offset] & 0x80)) return this[offset];
          return (0xff - this[offset] + 1) * -1;
        };

        Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset] | (this[offset + 1] << 8);
          return val & 0x8000 ? val | 0xffff0000 : val;
        };

        Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset + 1] | (this[offset] << 8);
          return val & 0x8000 ? val | 0xffff0000 : val;
        };

        Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            this[offset] |
            (this[offset + 1] << 8) |
            (this[offset + 2] << 16) |
            (this[offset + 3] << 24)
          );
        };

        Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            (this[offset] << 24) |
            (this[offset + 1] << 16) |
            (this[offset + 2] << 8) |
            this[offset + 3]
          );
        };

        Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, true, 23, 4);
        };

        Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, false, 23, 4);
        };

        Buffer.prototype.readDoubleLE = function readDoubleLE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, true, 52, 8);
        };

        Buffer.prototype.readDoubleBE = function readDoubleBE(
          offset,
          noAssert
        ) {
          if (!noAssert) checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, false, 52, 8);
        };

        function checkInt(buf, value, offset, ext, max, min) {
          if (!Buffer.isBuffer(buf))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (value > max || value < min)
            throw new RangeError('"value" argument is out of bounds');
          if (offset + ext > buf.length)
            throw new RangeError('Index out of range');
        }

        Buffer.prototype.writeUIntLE = function writeUIntLE(
          value,
          offset,
          byteLength,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }

          var mul = 1;
          var i = 0;
          this[offset] = value & 0xff;
          while (++i < byteLength && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeUIntBE = function writeUIntBE(
          value,
          offset,
          byteLength,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }

          var i = byteLength - 1;
          var mul = 1;
          this[offset + i] = value & 0xff;
          while (--i >= 0 && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeUInt8 = function writeUInt8(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
          this[offset] = value & 0xff;
          return offset + 1;
        };

        function objectWriteUInt16(buf, value, offset, littleEndian) {
          if (value < 0) value = 0xffff + value + 1;
          for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
            buf[offset + i] =
              (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
              ((littleEndian ? i : 1 - i) * 8);
          }
        }

        Buffer.prototype.writeUInt16LE = function writeUInt16LE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };

        Buffer.prototype.writeUInt16BE = function writeUInt16BE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 8;
            this[offset + 1] = value & 0xff;
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };

        function objectWriteUInt32(buf, value, offset, littleEndian) {
          if (value < 0) value = 0xffffffff + value + 1;
          for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
            buf[offset + i] =
              (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff;
          }
        }

        Buffer.prototype.writeUInt32LE = function writeUInt32LE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset + 3] = value >>> 24;
            this[offset + 2] = value >>> 16;
            this[offset + 1] = value >>> 8;
            this[offset] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };

        Buffer.prototype.writeUInt32BE = function writeUInt32BE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };

        Buffer.prototype.writeIntLE = function writeIntLE(
          value,
          offset,
          byteLength,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);

            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }

          var i = 0;
          var mul = 1;
          var sub = 0;
          this[offset] = value & 0xff;
          while (++i < byteLength && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeIntBE = function writeIntBE(
          value,
          offset,
          byteLength,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);

            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }

          var i = byteLength - 1;
          var mul = 1;
          var sub = 0;
          this[offset + i] = value & 0xff;
          while (--i >= 0 && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeInt8 = function writeInt8(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
          if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
          if (value < 0) value = 0xff + value + 1;
          this[offset] = value & 0xff;
          return offset + 1;
        };

        Buffer.prototype.writeInt16LE = function writeInt16LE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };

        Buffer.prototype.writeInt16BE = function writeInt16BE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 8;
            this[offset + 1] = value & 0xff;
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };

        Buffer.prototype.writeInt32LE = function writeInt32LE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
            this[offset + 2] = value >>> 16;
            this[offset + 3] = value >>> 24;
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };

        Buffer.prototype.writeInt32BE = function writeInt32BE(
          value,
          offset,
          noAssert
        ) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (value < 0) value = 0xffffffff + value + 1;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };

        function checkIEEE754(buf, value, offset, ext, max, min) {
          if (offset + ext > buf.length)
            throw new RangeError('Index out of range');
          if (offset < 0) throw new RangeError('Index out of range');
        }

        function writeFloat(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(
              buf,
              value,
              offset,
              4,
              3.4028234663852886e38,
              -3.4028234663852886e38
            );
          }
          ieee754.write(buf, value, offset, littleEndian, 23, 4);
          return offset + 4;
        }

        Buffer.prototype.writeFloatLE = function writeFloatLE(
          value,
          offset,
          noAssert
        ) {
          return writeFloat(this, value, offset, true, noAssert);
        };

        Buffer.prototype.writeFloatBE = function writeFloatBE(
          value,
          offset,
          noAssert
        ) {
          return writeFloat(this, value, offset, false, noAssert);
        };

        function writeDouble(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(
              buf,
              value,
              offset,
              8,
              1.7976931348623157e308,
              -1.7976931348623157e308
            );
          }
          ieee754.write(buf, value, offset, littleEndian, 52, 8);
          return offset + 8;
        }

        Buffer.prototype.writeDoubleLE = function writeDoubleLE(
          value,
          offset,
          noAssert
        ) {
          return writeDouble(this, value, offset, true, noAssert);
        };

        Buffer.prototype.writeDoubleBE = function writeDoubleBE(
          value,
          offset,
          noAssert
        ) {
          return writeDouble(this, value, offset, false, noAssert);
        };

        // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
        Buffer.prototype.copy = function copy(target, targetStart, start, end) {
          if (!start) start = 0;
          if (!end && end !== 0) end = this.length;
          if (targetStart >= target.length) targetStart = target.length;
          if (!targetStart) targetStart = 0;
          if (end > 0 && end < start) end = start;

          // Copy 0 bytes; we're done
          if (end === start) return 0;
          if (target.length === 0 || this.length === 0) return 0;

          // Fatal error conditions
          if (targetStart < 0) {
            throw new RangeError('targetStart out of bounds');
          }
          if (start < 0 || start >= this.length)
            throw new RangeError('sourceStart out of bounds');
          if (end < 0) throw new RangeError('sourceEnd out of bounds');

          // Are we oob?
          if (end > this.length) end = this.length;
          if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
          }

          var len = end - start;
          var i;

          if (this === target && start < targetStart && targetStart < end) {
            // descending copy from end
            for (i = len - 1; i >= 0; --i) {
              target[i + targetStart] = this[i + start];
            }
          } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
            // ascending copy from start
            for (i = 0; i < len; ++i) {
              target[i + targetStart] = this[i + start];
            }
          } else {
            Uint8Array.prototype.set.call(
              target,
              this.subarray(start, start + len),
              targetStart
            );
          }

          return len;
        };

        // Usage:
        //    buffer.fill(number[, offset[, end]])
        //    buffer.fill(buffer[, offset[, end]])
        //    buffer.fill(string[, offset[, end]][, encoding])
        Buffer.prototype.fill = function fill(val, start, end, encoding) {
          // Handle string cases:
          if (typeof val === 'string') {
            if (typeof start === 'string') {
              encoding = start;
              start = 0;
              end = this.length;
            } else if (typeof end === 'string') {
              encoding = end;
              end = this.length;
            }
            if (val.length === 1) {
              var code = val.charCodeAt(0);
              if (code < 256) {
                val = code;
              }
            }
            if (encoding !== undefined && typeof encoding !== 'string') {
              throw new TypeError('encoding must be a string');
            }
            if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
              throw new TypeError('Unknown encoding: ' + encoding);
            }
          } else if (typeof val === 'number') {
            val = val & 255;
          }

          // Invalid ranges are not set to a default, so can range check early.
          if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError('Out of range index');
          }

          if (end <= start) {
            return this;
          }

          start = start >>> 0;
          end = end === undefined ? this.length : end >>> 0;

          if (!val) val = 0;

          var i;
          if (typeof val === 'number') {
            for (i = start; i < end; ++i) {
              this[i] = val;
            }
          } else {
            var bytes = Buffer.isBuffer(val)
              ? val
              : utf8ToBytes(new Buffer(val, encoding).toString());
            var len = bytes.length;
            for (i = 0; i < end - start; ++i) {
              this[i + start] = bytes[i % len];
            }
          }

          return this;
        };

        // HELPER FUNCTIONS
        // ================

        var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

        function base64clean(str) {
          // Node strips out invalid characters like \n and \t from the string, base64-js does not
          str = stringtrim(str).replace(INVALID_BASE64_RE, '');
          // Node converts strings with length < 2 to ''
          if (str.length < 2) return '';
          // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
          while (str.length % 4 !== 0) {
            str = str + '=';
          }
          return str;
        }

        function stringtrim(str) {
          if (str.trim) return str.trim();
          return str.replace(/^\s+|\s+$/g, '');
        }

        function toHex(n) {
          if (n < 16) return '0' + n.toString(16);
          return n.toString(16);
        }

        function utf8ToBytes(string, units) {
          units = units || Infinity;
          var codePoint;
          var length = string.length;
          var leadSurrogate = null;
          var bytes = [];

          for (var i = 0; i < length; ++i) {
            codePoint = string.charCodeAt(i);

            // is surrogate component
            if (codePoint > 0xd7ff && codePoint < 0xe000) {
              // last char was a lead
              if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 0xdbff) {
                  // unexpected trail
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                  continue;
                } else if (i + 1 === length) {
                  // unpaired lead
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                  continue;
                }

                // valid lead
                leadSurrogate = codePoint;

                continue;
              }

              // 2 leads in a row
              if (codePoint < 0xdc00) {
                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                leadSurrogate = codePoint;
                continue;
              }

              // valid surrogate pair
              codePoint =
                (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +
                0x10000;
            } else if (leadSurrogate) {
              // valid bmp char, but last char was a lead
              if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
            }

            leadSurrogate = null;

            // encode utf8
            if (codePoint < 0x80) {
              if ((units -= 1) < 0) break;
              bytes.push(codePoint);
            } else if (codePoint < 0x800) {
              if ((units -= 2) < 0) break;
              bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80);
            } else if (codePoint < 0x10000) {
              if ((units -= 3) < 0) break;
              bytes.push(
                (codePoint >> 0xc) | 0xe0,
                ((codePoint >> 0x6) & 0x3f) | 0x80,
                (codePoint & 0x3f) | 0x80
              );
            } else if (codePoint < 0x110000) {
              if ((units -= 4) < 0) break;
              bytes.push(
                (codePoint >> 0x12) | 0xf0,
                ((codePoint >> 0xc) & 0x3f) | 0x80,
                ((codePoint >> 0x6) & 0x3f) | 0x80,
                (codePoint & 0x3f) | 0x80
              );
            } else {
              throw new Error('Invalid code point');
            }
          }

          return bytes;
        }

        function asciiToBytes(str) {
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            // Node's code seems to be doing this and not & 0x7F..
            byteArray.push(str.charCodeAt(i) & 0xff);
          }
          return byteArray;
        }

        function utf16leToBytes(str, units) {
          var c, hi, lo;
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            if ((units -= 2) < 0) break;

            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
          }

          return byteArray;
        }

        function base64ToBytes(str) {
          return base64.toByteArray(base64clean(str));
        }

        function blitBuffer(src, dst, offset, length) {
          for (var i = 0; i < length; ++i) {
            if (i + offset >= dst.length || i >= src.length) break;
            dst[i + offset] = src[i];
          }
          return i;
        }

        function isnan(val) {
          return val !== val; // eslint-disable-line no-self-compare
        }
      },
      {
        'base64-js': '../../node_modules/base64-js/index.js',
        ieee754: '../../node_modules/ieee754/index.js',
        isarray: '../../node_modules/isarray/index.js',
        buffer: '../../node_modules/buffer/index.js'
      }
    ],
    '../../node_modules/quill/dist/quill.js': [
      function(require, module, exports) {
        var define;
        var Buffer = require('buffer').Buffer;
        /*!
         * Quill Editor v1.3.7
         * https://quilljs.com/
         * Copyright (c) 2014, Jason Chen
         * Copyright (c) 2013, salesforce.com
         */
        (function webpackUniversalModuleDefinition(root, factory) {
          if (typeof exports === 'object' && typeof module === 'object')
            module.exports = factory();
          else if (typeof define === 'function' && define.amd)
            define([], factory);
          else if (typeof exports === 'object') exports['Quill'] = factory();
          else root['Quill'] = factory();
        })(typeof self !== 'undefined' ? self : this, function() {
          return /******/ (function(modules) {
            // webpackBootstrap
            /******/ // The module cache
            /******/ var installedModules = {}; // The require function
            /******/
            /******/ /******/ function __webpack_require__(moduleId) {
              /******/
              /******/ // Check if module is in cache
              /******/ if (installedModules[moduleId]) {
                /******/ return installedModules[moduleId].exports;
                /******/
              } // Create a new module (and put it into the cache)
              /******/ /******/ var module = (installedModules[moduleId] = {
                /******/ i: moduleId,
                /******/ l: false,
                /******/ exports: {}
                /******/
              }); // Execute the module function
              /******/
              /******/ /******/ modules[moduleId].call(
                module.exports,
                module,
                module.exports,
                __webpack_require__
              ); // Flag the module as loaded
              /******/
              /******/ /******/ module.l = true; // Return the exports of the module
              /******/
              /******/ /******/ return module.exports;
              /******/
            } // expose the modules object (__webpack_modules__)
            /******/
            /******/
            /******/ /******/ __webpack_require__.m = modules; // expose the module cache
            /******/
            /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
            /******/
            /******/ /******/ __webpack_require__.d = function(
              exports,
              name,
              getter
            ) {
              /******/ if (!__webpack_require__.o(exports, name)) {
                /******/ Object.defineProperty(exports, name, {
                  /******/ configurable: false,
                  /******/ enumerable: true,
                  /******/ get: getter
                  /******/
                });
                /******/
              }
              /******/
            }; // getDefaultExport function for compatibility with non-harmony modules
            /******/
            /******/ /******/ __webpack_require__.n = function(module) {
              /******/ var getter =
                module && module.__esModule
                  ? /******/ function getDefault() {
                      return module['default'];
                    }
                  : /******/ function getModuleExports() {
                      return module;
                    };
              /******/ __webpack_require__.d(getter, 'a', getter);
              /******/ return getter;
              /******/
            }; // Object.prototype.hasOwnProperty.call
            /******/
            /******/ /******/ __webpack_require__.o = function(
              object,
              property
            ) {
              return Object.prototype.hasOwnProperty.call(object, property);
            }; // __webpack_public_path__
            /******/
            /******/ /******/ __webpack_require__.p = ''; // Load entry module and return exports
            /******/
            /******/ /******/ return __webpack_require__(
              (__webpack_require__.s = 109)
            );
            /******/
          })(
            /************************************************************************/
            /******/ [
              /* 0 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', { value: true });
                var container_1 = __webpack_require__(17);
                var format_1 = __webpack_require__(18);
                var leaf_1 = __webpack_require__(19);
                var scroll_1 = __webpack_require__(45);
                var inline_1 = __webpack_require__(46);
                var block_1 = __webpack_require__(47);
                var embed_1 = __webpack_require__(48);
                var text_1 = __webpack_require__(49);
                var attributor_1 = __webpack_require__(12);
                var class_1 = __webpack_require__(32);
                var style_1 = __webpack_require__(33);
                var store_1 = __webpack_require__(31);
                var Registry = __webpack_require__(1);
                var Parchment = {
                  Scope: Registry.Scope,
                  create: Registry.create,
                  find: Registry.find,
                  query: Registry.query,
                  register: Registry.register,
                  Container: container_1.default,
                  Format: format_1.default,
                  Leaf: leaf_1.default,
                  Embed: embed_1.default,
                  Scroll: scroll_1.default,
                  Block: block_1.default,
                  Inline: inline_1.default,
                  Text: text_1.default,
                  Attributor: {
                    Attribute: attributor_1.default,
                    Class: class_1.default,
                    Style: style_1.default,
                    Store: store_1.default
                  }
                };
                exports.default = Parchment;

                /***/
              },
              /* 1 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var ParchmentError = /** @class */ (function(_super) {
                  __extends(ParchmentError, _super);
                  function ParchmentError(message) {
                    var _this = this;
                    message = '[Parchment] ' + message;
                    _this = _super.call(this, message) || this;
                    _this.message = message;
                    _this.name = _this.constructor.name;
                    return _this;
                  }
                  return ParchmentError;
                })(Error);
                exports.ParchmentError = ParchmentError;
                var attributes = {};
                var classes = {};
                var tags = {};
                var types = {};
                exports.DATA_KEY = '__blot';
                var Scope;
                (function(Scope) {
                  Scope[(Scope['TYPE'] = 3)] = 'TYPE';
                  Scope[(Scope['LEVEL'] = 12)] = 'LEVEL';
                  Scope[(Scope['ATTRIBUTE'] = 13)] = 'ATTRIBUTE';
                  Scope[(Scope['BLOT'] = 14)] = 'BLOT';
                  Scope[(Scope['INLINE'] = 7)] = 'INLINE';
                  Scope[(Scope['BLOCK'] = 11)] = 'BLOCK';
                  Scope[(Scope['BLOCK_BLOT'] = 10)] = 'BLOCK_BLOT';
                  Scope[(Scope['INLINE_BLOT'] = 6)] = 'INLINE_BLOT';
                  Scope[(Scope['BLOCK_ATTRIBUTE'] = 9)] = 'BLOCK_ATTRIBUTE';
                  Scope[(Scope['INLINE_ATTRIBUTE'] = 5)] = 'INLINE_ATTRIBUTE';
                  Scope[(Scope['ANY'] = 15)] = 'ANY';
                })((Scope = exports.Scope || (exports.Scope = {})));
                function create(input, value) {
                  var match = query(input);
                  if (match == null) {
                    throw new ParchmentError(
                      'Unable to create ' + input + ' blot'
                    );
                  }
                  var BlotClass = match;
                  var node =
                    // @ts-ignore
                    input instanceof Node ||
                    input['nodeType'] === Node.TEXT_NODE
                      ? input
                      : BlotClass.create(value);
                  return new BlotClass(node, value);
                }
                exports.create = create;
                function find(node, bubble) {
                  if (bubble === void 0) {
                    bubble = false;
                  }
                  if (node == null) return null;
                  // @ts-ignore
                  if (node[exports.DATA_KEY] != null)
                    return node[exports.DATA_KEY].blot;
                  if (bubble) return find(node.parentNode, bubble);
                  return null;
                }
                exports.find = find;
                function query(query, scope) {
                  if (scope === void 0) {
                    scope = Scope.ANY;
                  }
                  var match;
                  if (typeof query === 'string') {
                    match = types[query] || attributes[query];
                    // @ts-ignore
                  } else if (
                    query instanceof Text ||
                    query['nodeType'] === Node.TEXT_NODE
                  ) {
                    match = types['text'];
                  } else if (typeof query === 'number') {
                    if (query & Scope.LEVEL & Scope.BLOCK) {
                      match = types['block'];
                    } else if (query & Scope.LEVEL & Scope.INLINE) {
                      match = types['inline'];
                    }
                  } else if (query instanceof HTMLElement) {
                    var names = (query.getAttribute('class') || '').split(
                      /\s+/
                    );
                    for (var i in names) {
                      match = classes[names[i]];
                      if (match) break;
                    }
                    match = match || tags[query.tagName];
                  }
                  if (match == null) return null;
                  // @ts-ignore
                  if (
                    scope & Scope.LEVEL & match.scope &&
                    scope & Scope.TYPE & match.scope
                  )
                    return match;
                  return null;
                }
                exports.query = query;
                function register() {
                  var Definitions = [];
                  for (var _i = 0; _i < arguments.length; _i++) {
                    Definitions[_i] = arguments[_i];
                  }
                  if (Definitions.length > 1) {
                    return Definitions.map(function(d) {
                      return register(d);
                    });
                  }
                  var Definition = Definitions[0];
                  if (
                    typeof Definition.blotName !== 'string' &&
                    typeof Definition.attrName !== 'string'
                  ) {
                    throw new ParchmentError('Invalid definition');
                  } else if (Definition.blotName === 'abstract') {
                    throw new ParchmentError('Cannot register abstract class');
                  }
                  types[
                    Definition.blotName || Definition.attrName
                  ] = Definition;
                  if (typeof Definition.keyName === 'string') {
                    attributes[Definition.keyName] = Definition;
                  } else {
                    if (Definition.className != null) {
                      classes[Definition.className] = Definition;
                    }
                    if (Definition.tagName != null) {
                      if (Array.isArray(Definition.tagName)) {
                        Definition.tagName = Definition.tagName.map(function(
                          tagName
                        ) {
                          return tagName.toUpperCase();
                        });
                      } else {
                        Definition.tagName = Definition.tagName.toUpperCase();
                      }
                      var tagNames = Array.isArray(Definition.tagName)
                        ? Definition.tagName
                        : [Definition.tagName];
                      tagNames.forEach(function(tag) {
                        if (tags[tag] == null || Definition.className == null) {
                          tags[tag] = Definition;
                        }
                      });
                    }
                  }
                  return Definition;
                }
                exports.register = register;

                /***/
              },
              /* 2 */
              /***/ function(module, exports, __webpack_require__) {
                var diff = __webpack_require__(51);
                var equal = __webpack_require__(11);
                var extend = __webpack_require__(3);
                var op = __webpack_require__(20);

                var NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()

                var Delta = function(ops) {
                  // Assume we are given a well formed ops
                  if (Array.isArray(ops)) {
                    this.ops = ops;
                  } else if (ops != null && Array.isArray(ops.ops)) {
                    this.ops = ops.ops;
                  } else {
                    this.ops = [];
                  }
                };

                Delta.prototype.insert = function(text, attributes) {
                  var newOp = {};
                  if (text.length === 0) return this;
                  newOp.insert = text;
                  if (
                    attributes != null &&
                    typeof attributes === 'object' &&
                    Object.keys(attributes).length > 0
                  ) {
                    newOp.attributes = attributes;
                  }
                  return this.push(newOp);
                };

                Delta.prototype['delete'] = function(length) {
                  if (length <= 0) return this;
                  return this.push({ delete: length });
                };

                Delta.prototype.retain = function(length, attributes) {
                  if (length <= 0) return this;
                  var newOp = { retain: length };
                  if (
                    attributes != null &&
                    typeof attributes === 'object' &&
                    Object.keys(attributes).length > 0
                  ) {
                    newOp.attributes = attributes;
                  }
                  return this.push(newOp);
                };

                Delta.prototype.push = function(newOp) {
                  var index = this.ops.length;
                  var lastOp = this.ops[index - 1];
                  newOp = extend(true, {}, newOp);
                  if (typeof lastOp === 'object') {
                    if (
                      typeof newOp['delete'] === 'number' &&
                      typeof lastOp['delete'] === 'number'
                    ) {
                      this.ops[index - 1] = {
                        delete: lastOp['delete'] + newOp['delete']
                      };
                      return this;
                    }
                    // Since it does not matter if we insert before or after deleting at the same index,
                    // always prefer to insert first
                    if (
                      typeof lastOp['delete'] === 'number' &&
                      newOp.insert != null
                    ) {
                      index -= 1;
                      lastOp = this.ops[index - 1];
                      if (typeof lastOp !== 'object') {
                        this.ops.unshift(newOp);
                        return this;
                      }
                    }
                    if (equal(newOp.attributes, lastOp.attributes)) {
                      if (
                        typeof newOp.insert === 'string' &&
                        typeof lastOp.insert === 'string'
                      ) {
                        this.ops[index - 1] = {
                          insert: lastOp.insert + newOp.insert
                        };
                        if (typeof newOp.attributes === 'object')
                          this.ops[index - 1].attributes = newOp.attributes;
                        return this;
                      } else if (
                        typeof newOp.retain === 'number' &&
                        typeof lastOp.retain === 'number'
                      ) {
                        this.ops[index - 1] = {
                          retain: lastOp.retain + newOp.retain
                        };
                        if (typeof newOp.attributes === 'object')
                          this.ops[index - 1].attributes = newOp.attributes;
                        return this;
                      }
                    }
                  }
                  if (index === this.ops.length) {
                    this.ops.push(newOp);
                  } else {
                    this.ops.splice(index, 0, newOp);
                  }
                  return this;
                };

                Delta.prototype.chop = function() {
                  var lastOp = this.ops[this.ops.length - 1];
                  if (lastOp && lastOp.retain && !lastOp.attributes) {
                    this.ops.pop();
                  }
                  return this;
                };

                Delta.prototype.filter = function(predicate) {
                  return this.ops.filter(predicate);
                };

                Delta.prototype.forEach = function(predicate) {
                  this.ops.forEach(predicate);
                };

                Delta.prototype.map = function(predicate) {
                  return this.ops.map(predicate);
                };

                Delta.prototype.partition = function(predicate) {
                  var passed = [],
                    failed = [];
                  this.forEach(function(op) {
                    var target = predicate(op) ? passed : failed;
                    target.push(op);
                  });
                  return [passed, failed];
                };

                Delta.prototype.reduce = function(predicate, initial) {
                  return this.ops.reduce(predicate, initial);
                };

                Delta.prototype.changeLength = function() {
                  return this.reduce(function(length, elem) {
                    if (elem.insert) {
                      return length + op.length(elem);
                    } else if (elem.delete) {
                      return length - elem.delete;
                    }
                    return length;
                  }, 0);
                };

                Delta.prototype.length = function() {
                  return this.reduce(function(length, elem) {
                    return length + op.length(elem);
                  }, 0);
                };

                Delta.prototype.slice = function(start, end) {
                  start = start || 0;
                  if (typeof end !== 'number') end = Infinity;
                  var ops = [];
                  var iter = op.iterator(this.ops);
                  var index = 0;
                  while (index < end && iter.hasNext()) {
                    var nextOp;
                    if (index < start) {
                      nextOp = iter.next(start - index);
                    } else {
                      nextOp = iter.next(end - index);
                      ops.push(nextOp);
                    }
                    index += op.length(nextOp);
                  }
                  return new Delta(ops);
                };

                Delta.prototype.compose = function(other) {
                  var thisIter = op.iterator(this.ops);
                  var otherIter = op.iterator(other.ops);
                  var ops = [];
                  var firstOther = otherIter.peek();
                  if (
                    firstOther != null &&
                    typeof firstOther.retain === 'number' &&
                    firstOther.attributes == null
                  ) {
                    var firstLeft = firstOther.retain;
                    while (
                      thisIter.peekType() === 'insert' &&
                      thisIter.peekLength() <= firstLeft
                    ) {
                      firstLeft -= thisIter.peekLength();
                      ops.push(thisIter.next());
                    }
                    if (firstOther.retain - firstLeft > 0) {
                      otherIter.next(firstOther.retain - firstLeft);
                    }
                  }
                  var delta = new Delta(ops);
                  while (thisIter.hasNext() || otherIter.hasNext()) {
                    if (otherIter.peekType() === 'insert') {
                      delta.push(otherIter.next());
                    } else if (thisIter.peekType() === 'delete') {
                      delta.push(thisIter.next());
                    } else {
                      var length = Math.min(
                        thisIter.peekLength(),
                        otherIter.peekLength()
                      );
                      var thisOp = thisIter.next(length);
                      var otherOp = otherIter.next(length);
                      if (typeof otherOp.retain === 'number') {
                        var newOp = {};
                        if (typeof thisOp.retain === 'number') {
                          newOp.retain = length;
                        } else {
                          newOp.insert = thisOp.insert;
                        }
                        // Preserve null when composing with a retain, otherwise remove it for inserts
                        var attributes = op.attributes.compose(
                          thisOp.attributes,
                          otherOp.attributes,
                          typeof thisOp.retain === 'number'
                        );
                        if (attributes) newOp.attributes = attributes;
                        delta.push(newOp);

                        // Optimization if rest of other is just retain
                        if (
                          !otherIter.hasNext() &&
                          equal(delta.ops[delta.ops.length - 1], newOp)
                        ) {
                          var rest = new Delta(thisIter.rest());
                          return delta.concat(rest).chop();
                        }

                        // Other op should be delete, we could be an insert or retain
                        // Insert + delete cancels out
                      } else if (
                        typeof otherOp['delete'] === 'number' &&
                        typeof thisOp.retain === 'number'
                      ) {
                        delta.push(otherOp);
                      }
                    }
                  }
                  return delta.chop();
                };

                Delta.prototype.concat = function(other) {
                  var delta = new Delta(this.ops.slice());
                  if (other.ops.length > 0) {
                    delta.push(other.ops[0]);
                    delta.ops = delta.ops.concat(other.ops.slice(1));
                  }
                  return delta;
                };

                Delta.prototype.diff = function(other, index) {
                  if (this.ops === other.ops) {
                    return new Delta();
                  }
                  var strings = [this, other].map(function(delta) {
                    return delta
                      .map(function(op) {
                        if (op.insert != null) {
                          return typeof op.insert === 'string'
                            ? op.insert
                            : NULL_CHARACTER;
                        }
                        var prep = delta === other ? 'on' : 'with';
                        throw new Error(
                          'diff() called ' + prep + ' non-document'
                        );
                      })
                      .join('');
                  });
                  var delta = new Delta();
                  var diffResult = diff(strings[0], strings[1], index);
                  var thisIter = op.iterator(this.ops);
                  var otherIter = op.iterator(other.ops);
                  diffResult.forEach(function(component) {
                    var length = component[1].length;
                    while (length > 0) {
                      var opLength = 0;
                      switch (component[0]) {
                        case diff.INSERT:
                          opLength = Math.min(otherIter.peekLength(), length);
                          delta.push(otherIter.next(opLength));
                          break;
                        case diff.DELETE:
                          opLength = Math.min(length, thisIter.peekLength());
                          thisIter.next(opLength);
                          delta['delete'](opLength);
                          break;
                        case diff.EQUAL:
                          opLength = Math.min(
                            thisIter.peekLength(),
                            otherIter.peekLength(),
                            length
                          );
                          var thisOp = thisIter.next(opLength);
                          var otherOp = otherIter.next(opLength);
                          if (equal(thisOp.insert, otherOp.insert)) {
                            delta.retain(
                              opLength,
                              op.attributes.diff(
                                thisOp.attributes,
                                otherOp.attributes
                              )
                            );
                          } else {
                            delta.push(otherOp)['delete'](opLength);
                          }
                          break;
                      }
                      length -= opLength;
                    }
                  });
                  return delta.chop();
                };

                Delta.prototype.eachLine = function(predicate, newline) {
                  newline = newline || '\n';
                  var iter = op.iterator(this.ops);
                  var line = new Delta();
                  var i = 0;
                  while (iter.hasNext()) {
                    if (iter.peekType() !== 'insert') return;
                    var thisOp = iter.peek();
                    var start = op.length(thisOp) - iter.peekLength();
                    var index =
                      typeof thisOp.insert === 'string'
                        ? thisOp.insert.indexOf(newline, start) - start
                        : -1;
                    if (index < 0) {
                      line.push(iter.next());
                    } else if (index > 0) {
                      line.push(iter.next(index));
                    } else {
                      if (
                        predicate(line, iter.next(1).attributes || {}, i) ===
                        false
                      ) {
                        return;
                      }
                      i += 1;
                      line = new Delta();
                    }
                  }
                  if (line.length() > 0) {
                    predicate(line, {}, i);
                  }
                };

                Delta.prototype.transform = function(other, priority) {
                  priority = !!priority;
                  if (typeof other === 'number') {
                    return this.transformPosition(other, priority);
                  }
                  var thisIter = op.iterator(this.ops);
                  var otherIter = op.iterator(other.ops);
                  var delta = new Delta();
                  while (thisIter.hasNext() || otherIter.hasNext()) {
                    if (
                      thisIter.peekType() === 'insert' &&
                      (priority || otherIter.peekType() !== 'insert')
                    ) {
                      delta.retain(op.length(thisIter.next()));
                    } else if (otherIter.peekType() === 'insert') {
                      delta.push(otherIter.next());
                    } else {
                      var length = Math.min(
                        thisIter.peekLength(),
                        otherIter.peekLength()
                      );
                      var thisOp = thisIter.next(length);
                      var otherOp = otherIter.next(length);
                      if (thisOp['delete']) {
                        // Our delete either makes their delete redundant or removes their retain
                        continue;
                      } else if (otherOp['delete']) {
                        delta.push(otherOp);
                      } else {
                        // We retain either their retain or insert
                        delta.retain(
                          length,
                          op.attributes.transform(
                            thisOp.attributes,
                            otherOp.attributes,
                            priority
                          )
                        );
                      }
                    }
                  }
                  return delta.chop();
                };

                Delta.prototype.transformPosition = function(index, priority) {
                  priority = !!priority;
                  var thisIter = op.iterator(this.ops);
                  var offset = 0;
                  while (thisIter.hasNext() && offset <= index) {
                    var length = thisIter.peekLength();
                    var nextType = thisIter.peekType();
                    thisIter.next();
                    if (nextType === 'delete') {
                      index -= Math.min(length, index - offset);
                      continue;
                    } else if (
                      nextType === 'insert' &&
                      (offset < index || !priority)
                    ) {
                      index += length;
                    }
                    offset += length;
                  }
                  return index;
                };

                module.exports = Delta;

                /***/
              },
              /* 3 */
              /***/ function(module, exports) {
                'use strict';

                var hasOwn = Object.prototype.hasOwnProperty;
                var toStr = Object.prototype.toString;
                var defineProperty = Object.defineProperty;
                var gOPD = Object.getOwnPropertyDescriptor;

                var isArray = function isArray(arr) {
                  if (typeof Array.isArray === 'function') {
                    return Array.isArray(arr);
                  }

                  return toStr.call(arr) === '[object Array]';
                };

                var isPlainObject = function isPlainObject(obj) {
                  if (!obj || toStr.call(obj) !== '[object Object]') {
                    return false;
                  }

                  var hasOwnConstructor = hasOwn.call(obj, 'constructor');
                  var hasIsPrototypeOf =
                    obj.constructor &&
                    obj.constructor.prototype &&
                    hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
                  // Not own constructor property must be Object
                  if (
                    obj.constructor &&
                    !hasOwnConstructor &&
                    !hasIsPrototypeOf
                  ) {
                    return false;
                  }

                  // Own properties are enumerated firstly, so to speed up,
                  // if last one is own, then all properties are own.
                  var key;
                  for (key in obj) {
                    /**/
                  }

                  return typeof key === 'undefined' || hasOwn.call(obj, key);
                };

                // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
                var setProperty = function setProperty(target, options) {
                  if (defineProperty && options.name === '__proto__') {
                    defineProperty(target, options.name, {
                      enumerable: true,
                      configurable: true,
                      value: options.newValue,
                      writable: true
                    });
                  } else {
                    target[options.name] = options.newValue;
                  }
                };

                // Return undefined instead of __proto__ if '__proto__' is not an own property
                var getProperty = function getProperty(obj, name) {
                  if (name === '__proto__') {
                    if (!hasOwn.call(obj, name)) {
                      return void 0;
                    } else if (gOPD) {
                      // In early versions of node, obj['__proto__'] is buggy when obj has
                      // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
                      return gOPD(obj, name).value;
                    }
                  }

                  return obj[name];
                };

                module.exports = function extend() {
                  var options, name, src, copy, copyIsArray, clone;
                  var target = arguments[0];
                  var i = 1;
                  var length = arguments.length;
                  var deep = false;

                  // Handle a deep copy situation
                  if (typeof target === 'boolean') {
                    deep = target;
                    target = arguments[1] || {};
                    // skip the boolean and the target
                    i = 2;
                  }
                  if (
                    target == null ||
                    (typeof target !== 'object' && typeof target !== 'function')
                  ) {
                    target = {};
                  }

                  for (; i < length; ++i) {
                    options = arguments[i];
                    // Only deal with non-null/undefined values
                    if (options != null) {
                      // Extend the base object
                      for (name in options) {
                        src = getProperty(target, name);
                        copy = getProperty(options, name);

                        // Prevent never-ending loop
                        if (target !== copy) {
                          // Recurse if we're merging plain objects or arrays
                          if (
                            deep &&
                            copy &&
                            (isPlainObject(copy) ||
                              (copyIsArray = isArray(copy)))
                          ) {
                            if (copyIsArray) {
                              copyIsArray = false;
                              clone = src && isArray(src) ? src : [];
                            } else {
                              clone = src && isPlainObject(src) ? src : {};
                            }

                            // Never move original objects, clone them
                            setProperty(target, {
                              name: name,
                              newValue: extend(deep, clone, copy)
                            });

                            // Don't bring in undefined values
                          } else if (typeof copy !== 'undefined') {
                            setProperty(target, { name: name, newValue: copy });
                          }
                        }
                      }
                    }
                  }

                  // Return the modified object
                  return target;
                };

                /***/
              },
              /* 4 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.BlockEmbed = exports.bubbleFormats = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _break = __webpack_require__(16);

                var _break2 = _interopRequireDefault(_break);

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var NEWLINE_LENGTH = 1;

                var BlockEmbed = (function(_Parchment$Embed) {
                  _inherits(BlockEmbed, _Parchment$Embed);

                  function BlockEmbed() {
                    _classCallCheck(this, BlockEmbed);

                    return _possibleConstructorReturn(
                      this,
                      (
                        BlockEmbed.__proto__ ||
                        Object.getPrototypeOf(BlockEmbed)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(BlockEmbed, [
                    {
                      key: 'attach',
                      value: function attach() {
                        _get(
                          BlockEmbed.prototype.__proto__ ||
                            Object.getPrototypeOf(BlockEmbed.prototype),
                          'attach',
                          this
                        ).call(this);
                        this.attributes = new _parchment2.default.Attributor.Store(
                          this.domNode
                        );
                      }
                    },
                    {
                      key: 'delta',
                      value: function delta() {
                        return new _quillDelta2.default().insert(
                          this.value(),
                          (0, _extend2.default)(
                            this.formats(),
                            this.attributes.values()
                          )
                        );
                      }
                    },
                    {
                      key: 'format',
                      value: function format(name, value) {
                        var attribute = _parchment2.default.query(
                          name,
                          _parchment2.default.Scope.BLOCK_ATTRIBUTE
                        );
                        if (attribute != null) {
                          this.attributes.attribute(attribute, value);
                        }
                      }
                    },
                    {
                      key: 'formatAt',
                      value: function formatAt(index, length, name, value) {
                        this.format(name, value);
                      }
                    },
                    {
                      key: 'insertAt',
                      value: function insertAt(index, value, def) {
                        if (typeof value === 'string' && value.endsWith('\n')) {
                          var block = _parchment2.default.create(
                            Block.blotName
                          );
                          this.parent.insertBefore(
                            block,
                            index === 0 ? this : this.next
                          );
                          block.insertAt(0, value.slice(0, -1));
                        } else {
                          _get(
                            BlockEmbed.prototype.__proto__ ||
                              Object.getPrototypeOf(BlockEmbed.prototype),
                            'insertAt',
                            this
                          ).call(this, index, value, def);
                        }
                      }
                    }
                  ]);

                  return BlockEmbed;
                })(_parchment2.default.Embed);

                BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
                // It is important for cursor behavior BlockEmbeds use tags that are block level elements

                var Block = (function(_Parchment$Block) {
                  _inherits(Block, _Parchment$Block);

                  function Block(domNode) {
                    _classCallCheck(this, Block);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (Block.__proto__ || Object.getPrototypeOf(Block)).call(
                        this,
                        domNode
                      )
                    );

                    _this2.cache = {};
                    return _this2;
                  }

                  _createClass(Block, [
                    {
                      key: 'delta',
                      value: function delta() {
                        if (this.cache.delta == null) {
                          this.cache.delta = this.descendants(
                            _parchment2.default.Leaf
                          )
                            .reduce(function(delta, leaf) {
                              if (leaf.length() === 0) {
                                return delta;
                              } else {
                                return delta.insert(
                                  leaf.value(),
                                  bubbleFormats(leaf)
                                );
                              }
                            }, new _quillDelta2.default())
                            .insert('\n', bubbleFormats(this));
                        }
                        return this.cache.delta;
                      }
                    },
                    {
                      key: 'deleteAt',
                      value: function deleteAt(index, length) {
                        _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'deleteAt',
                          this
                        ).call(this, index, length);
                        this.cache = {};
                      }
                    },
                    {
                      key: 'formatAt',
                      value: function formatAt(index, length, name, value) {
                        if (length <= 0) return;
                        if (
                          _parchment2.default.query(
                            name,
                            _parchment2.default.Scope.BLOCK
                          )
                        ) {
                          if (index + length === this.length()) {
                            this.format(name, value);
                          }
                        } else {
                          _get(
                            Block.prototype.__proto__ ||
                              Object.getPrototypeOf(Block.prototype),
                            'formatAt',
                            this
                          ).call(
                            this,
                            index,
                            Math.min(length, this.length() - index - 1),
                            name,
                            value
                          );
                        }
                        this.cache = {};
                      }
                    },
                    {
                      key: 'insertAt',
                      value: function insertAt(index, value, def) {
                        if (def != null)
                          return _get(
                            Block.prototype.__proto__ ||
                              Object.getPrototypeOf(Block.prototype),
                            'insertAt',
                            this
                          ).call(this, index, value, def);
                        if (value.length === 0) return;
                        var lines = value.split('\n');
                        var text = lines.shift();
                        if (text.length > 0) {
                          if (
                            index < this.length() - 1 ||
                            this.children.tail == null
                          ) {
                            _get(
                              Block.prototype.__proto__ ||
                                Object.getPrototypeOf(Block.prototype),
                              'insertAt',
                              this
                            ).call(
                              this,
                              Math.min(index, this.length() - 1),
                              text
                            );
                          } else {
                            this.children.tail.insertAt(
                              this.children.tail.length(),
                              text
                            );
                          }
                          this.cache = {};
                        }
                        var block = this;
                        lines.reduce(function(index, line) {
                          block = block.split(index, true);
                          block.insertAt(0, line);
                          return line.length;
                        }, index + text.length);
                      }
                    },
                    {
                      key: 'insertBefore',
                      value: function insertBefore(blot, ref) {
                        var head = this.children.head;
                        _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'insertBefore',
                          this
                        ).call(this, blot, ref);
                        if (head instanceof _break2.default) {
                          head.remove();
                        }
                        this.cache = {};
                      }
                    },
                    {
                      key: 'length',
                      value: function length() {
                        if (this.cache.length == null) {
                          this.cache.length =
                            _get(
                              Block.prototype.__proto__ ||
                                Object.getPrototypeOf(Block.prototype),
                              'length',
                              this
                            ).call(this) + NEWLINE_LENGTH;
                        }
                        return this.cache.length;
                      }
                    },
                    {
                      key: 'moveChildren',
                      value: function moveChildren(target, ref) {
                        _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'moveChildren',
                          this
                        ).call(this, target, ref);
                        this.cache = {};
                      }
                    },
                    {
                      key: 'optimize',
                      value: function optimize(context) {
                        _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'optimize',
                          this
                        ).call(this, context);
                        this.cache = {};
                      }
                    },
                    {
                      key: 'path',
                      value: function path(index) {
                        return _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'path',
                          this
                        ).call(this, index, true);
                      }
                    },
                    {
                      key: 'removeChild',
                      value: function removeChild(child) {
                        _get(
                          Block.prototype.__proto__ ||
                            Object.getPrototypeOf(Block.prototype),
                          'removeChild',
                          this
                        ).call(this, child);
                        this.cache = {};
                      }
                    },
                    {
                      key: 'split',
                      value: function split(index) {
                        var force =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : false;

                        if (
                          force &&
                          (index === 0 ||
                            index >= this.length() - NEWLINE_LENGTH)
                        ) {
                          var clone = this.clone();
                          if (index === 0) {
                            this.parent.insertBefore(clone, this);
                            return this;
                          } else {
                            this.parent.insertBefore(clone, this.next);
                            return clone;
                          }
                        } else {
                          var next = _get(
                            Block.prototype.__proto__ ||
                              Object.getPrototypeOf(Block.prototype),
                            'split',
                            this
                          ).call(this, index, force);
                          this.cache = {};
                          return next;
                        }
                      }
                    }
                  ]);

                  return Block;
                })(_parchment2.default.Block);

                Block.blotName = 'block';
                Block.tagName = 'P';
                Block.defaultChild = 'break';
                Block.allowedChildren = [
                  _inline2.default,
                  _parchment2.default.Embed,
                  _text2.default
                ];

                function bubbleFormats(blot) {
                  var formats =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : {};

                  if (blot == null) return formats;
                  if (typeof blot.formats === 'function') {
                    formats = (0, _extend2.default)(formats, blot.formats());
                  }
                  if (
                    blot.parent == null ||
                    blot.parent.blotName == 'scroll' ||
                    blot.parent.statics.scope !== blot.statics.scope
                  ) {
                    return formats;
                  }
                  return bubbleFormats(blot.parent, formats);
                }

                exports.bubbleFormats = bubbleFormats;
                exports.BlockEmbed = BlockEmbed;
                exports.default = Block;

                /***/
              },
              /* 5 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.overload = exports.expandConfig = undefined;

                var _typeof =
                  typeof Symbol === 'function' &&
                  typeof Symbol.iterator === 'symbol'
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === 'function' &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? 'symbol'
                          : typeof obj;
                      };

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                __webpack_require__(50);

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _editor = __webpack_require__(14);

                var _editor2 = _interopRequireDefault(_editor);

                var _emitter3 = __webpack_require__(8);

                var _emitter4 = _interopRequireDefault(_emitter3);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _selection = __webpack_require__(15);

                var _selection2 = _interopRequireDefault(_selection);

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                var _theme = __webpack_require__(34);

                var _theme2 = _interopRequireDefault(_theme);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var debug = (0, _logger2.default)('quill');

                var Quill = (function() {
                  _createClass(Quill, null, [
                    {
                      key: 'debug',
                      value: function debug(limit) {
                        if (limit === true) {
                          limit = 'log';
                        }
                        _logger2.default.level(limit);
                      }
                    },
                    {
                      key: 'find',
                      value: function find(node) {
                        return node.__quill || _parchment2.default.find(node);
                      }
                    },
                    {
                      key: 'import',
                      value: function _import(name) {
                        if (this.imports[name] == null) {
                          debug.error(
                            'Cannot import ' +
                              name +
                              '. Are you sure it was registered?'
                          );
                        }
                        return this.imports[name];
                      }
                    },
                    {
                      key: 'register',
                      value: function register(path, target) {
                        var _this = this;

                        var overwrite =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : false;

                        if (typeof path !== 'string') {
                          var name = path.attrName || path.blotName;
                          if (typeof name === 'string') {
                            // register(Blot | Attributor, overwrite)
                            this.register('formats/' + name, path, target);
                          } else {
                            Object.keys(path).forEach(function(key) {
                              _this.register(key, path[key], target);
                            });
                          }
                        } else {
                          if (this.imports[path] != null && !overwrite) {
                            debug.warn('Overwriting ' + path + ' with', target);
                          }
                          this.imports[path] = target;
                          if (
                            (path.startsWith('blots/') ||
                              path.startsWith('formats/')) &&
                            target.blotName !== 'abstract'
                          ) {
                            _parchment2.default.register(target);
                          } else if (
                            path.startsWith('modules') &&
                            typeof target.register === 'function'
                          ) {
                            target.register();
                          }
                        }
                      }
                    }
                  ]);

                  function Quill(container) {
                    var _this2 = this;

                    var options =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : {};

                    _classCallCheck(this, Quill);

                    this.options = expandConfig(container, options);
                    this.container = this.options.container;
                    if (this.container == null) {
                      return debug.error('Invalid Quill container', container);
                    }
                    if (this.options.debug) {
                      Quill.debug(this.options.debug);
                    }
                    var html = this.container.innerHTML.trim();
                    this.container.classList.add('ql-container');
                    this.container.innerHTML = '';
                    this.container.__quill = this;
                    this.root = this.addContainer('ql-editor');
                    this.root.classList.add('ql-blank');
                    this.root.setAttribute('data-gramm', false);
                    this.scrollingContainer =
                      this.options.scrollingContainer || this.root;
                    this.emitter = new _emitter4.default();
                    this.scroll = _parchment2.default.create(this.root, {
                      emitter: this.emitter,
                      whitelist: this.options.formats
                    });
                    this.editor = new _editor2.default(this.scroll);
                    this.selection = new _selection2.default(
                      this.scroll,
                      this.emitter
                    );
                    this.theme = new this.options.theme(this, this.options);
                    this.keyboard = this.theme.addModule('keyboard');
                    this.clipboard = this.theme.addModule('clipboard');
                    this.history = this.theme.addModule('history');
                    this.theme.init();
                    this.emitter.on(
                      _emitter4.default.events.EDITOR_CHANGE,
                      function(type) {
                        if (type === _emitter4.default.events.TEXT_CHANGE) {
                          _this2.root.classList.toggle(
                            'ql-blank',
                            _this2.editor.isBlank()
                          );
                        }
                      }
                    );
                    this.emitter.on(
                      _emitter4.default.events.SCROLL_UPDATE,
                      function(source, mutations) {
                        var range = _this2.selection.lastRange;
                        var index =
                          range && range.length === 0 ? range.index : undefined;
                        modify.call(
                          _this2,
                          function() {
                            return _this2.editor.update(null, mutations, index);
                          },
                          source
                        );
                      }
                    );
                    var contents = this.clipboard.convert(
                      '<div class=\'ql-editor\' style="white-space: normal;">' +
                        html +
                        '<p><br></p></div>'
                    );
                    this.setContents(contents);
                    this.history.clear();
                    if (this.options.placeholder) {
                      this.root.setAttribute(
                        'data-placeholder',
                        this.options.placeholder
                      );
                    }
                    if (this.options.readOnly) {
                      this.disable();
                    }
                  }

                  _createClass(Quill, [
                    {
                      key: 'addContainer',
                      value: function addContainer(container) {
                        var refNode =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : null;

                        if (typeof container === 'string') {
                          var className = container;
                          container = document.createElement('div');
                          container.classList.add(className);
                        }
                        this.container.insertBefore(container, refNode);
                        return container;
                      }
                    },
                    {
                      key: 'blur',
                      value: function blur() {
                        this.selection.setRange(null);
                      }
                    },
                    {
                      key: 'deleteText',
                      value: function deleteText(index, length, source) {
                        var _this3 = this;

                        var _overload = overload(index, length, source);

                        var _overload2 = _slicedToArray(_overload, 4);

                        index = _overload2[0];
                        length = _overload2[1];
                        source = _overload2[3];

                        return modify.call(
                          this,
                          function() {
                            return _this3.editor.deleteText(index, length);
                          },
                          source,
                          index,
                          -1 * length
                        );
                      }
                    },
                    {
                      key: 'disable',
                      value: function disable() {
                        this.enable(false);
                      }
                    },
                    {
                      key: 'enable',
                      value: function enable() {
                        var enabled =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : true;

                        this.scroll.enable(enabled);
                        this.container.classList.toggle(
                          'ql-disabled',
                          !enabled
                        );
                      }
                    },
                    {
                      key: 'focus',
                      value: function focus() {
                        var scrollTop = this.scrollingContainer.scrollTop;
                        this.selection.focus();
                        this.scrollingContainer.scrollTop = scrollTop;
                        this.scrollIntoView();
                      }
                    },
                    {
                      key: 'format',
                      value: function format(name, value) {
                        var _this4 = this;

                        var source =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : _emitter4.default.sources.API;

                        return modify.call(
                          this,
                          function() {
                            var range = _this4.getSelection(true);
                            var change = new _quillDelta2.default();
                            if (range == null) {
                              return change;
                            } else if (
                              _parchment2.default.query(
                                name,
                                _parchment2.default.Scope.BLOCK
                              )
                            ) {
                              change = _this4.editor.formatLine(
                                range.index,
                                range.length,
                                _defineProperty({}, name, value)
                              );
                            } else if (range.length === 0) {
                              _this4.selection.format(name, value);
                              return change;
                            } else {
                              change = _this4.editor.formatText(
                                range.index,
                                range.length,
                                _defineProperty({}, name, value)
                              );
                            }
                            _this4.setSelection(
                              range,
                              _emitter4.default.sources.SILENT
                            );
                            return change;
                          },
                          source
                        );
                      }
                    },
                    {
                      key: 'formatLine',
                      value: function formatLine(
                        index,
                        length,
                        name,
                        value,
                        source
                      ) {
                        var _this5 = this;

                        var formats = void 0;

                        var _overload3 = overload(
                          index,
                          length,
                          name,
                          value,
                          source
                        );

                        var _overload4 = _slicedToArray(_overload3, 4);

                        index = _overload4[0];
                        length = _overload4[1];
                        formats = _overload4[2];
                        source = _overload4[3];

                        return modify.call(
                          this,
                          function() {
                            return _this5.editor.formatLine(
                              index,
                              length,
                              formats
                            );
                          },
                          source,
                          index,
                          0
                        );
                      }
                    },
                    {
                      key: 'formatText',
                      value: function formatText(
                        index,
                        length,
                        name,
                        value,
                        source
                      ) {
                        var _this6 = this;

                        var formats = void 0;

                        var _overload5 = overload(
                          index,
                          length,
                          name,
                          value,
                          source
                        );

                        var _overload6 = _slicedToArray(_overload5, 4);

                        index = _overload6[0];
                        length = _overload6[1];
                        formats = _overload6[2];
                        source = _overload6[3];

                        return modify.call(
                          this,
                          function() {
                            return _this6.editor.formatText(
                              index,
                              length,
                              formats
                            );
                          },
                          source,
                          index,
                          0
                        );
                      }
                    },
                    {
                      key: 'getBounds',
                      value: function getBounds(index) {
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : 0;

                        var bounds = void 0;
                        if (typeof index === 'number') {
                          bounds = this.selection.getBounds(index, length);
                        } else {
                          bounds = this.selection.getBounds(
                            index.index,
                            index.length
                          );
                        }
                        var containerBounds = this.container.getBoundingClientRect();
                        return {
                          bottom: bounds.bottom - containerBounds.top,
                          height: bounds.height,
                          left: bounds.left - containerBounds.left,
                          right: bounds.right - containerBounds.left,
                          top: bounds.top - containerBounds.top,
                          width: bounds.width
                        };
                      }
                    },
                    {
                      key: 'getContents',
                      value: function getContents() {
                        var index =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : 0;
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : this.getLength() - index;

                        var _overload7 = overload(index, length);

                        var _overload8 = _slicedToArray(_overload7, 2);

                        index = _overload8[0];
                        length = _overload8[1];

                        return this.editor.getContents(index, length);
                      }
                    },
                    {
                      key: 'getFormat',
                      value: function getFormat() {
                        var index =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : this.getSelection(true);
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : 0;

                        if (typeof index === 'number') {
                          return this.editor.getFormat(index, length);
                        } else {
                          return this.editor.getFormat(
                            index.index,
                            index.length
                          );
                        }
                      }
                    },
                    {
                      key: 'getIndex',
                      value: function getIndex(blot) {
                        return blot.offset(this.scroll);
                      }
                    },
                    {
                      key: 'getLength',
                      value: function getLength() {
                        return this.scroll.length();
                      }
                    },
                    {
                      key: 'getLeaf',
                      value: function getLeaf(index) {
                        return this.scroll.leaf(index);
                      }
                    },
                    {
                      key: 'getLine',
                      value: function getLine(index) {
                        return this.scroll.line(index);
                      }
                    },
                    {
                      key: 'getLines',
                      value: function getLines() {
                        var index =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : 0;
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : Number.MAX_VALUE;

                        if (typeof index !== 'number') {
                          return this.scroll.lines(index.index, index.length);
                        } else {
                          return this.scroll.lines(index, length);
                        }
                      }
                    },
                    {
                      key: 'getModule',
                      value: function getModule(name) {
                        return this.theme.modules[name];
                      }
                    },
                    {
                      key: 'getSelection',
                      value: function getSelection() {
                        var focus =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : false;

                        if (focus) this.focus();
                        this.update(); // Make sure we access getRange with editor in consistent state
                        return this.selection.getRange()[0];
                      }
                    },
                    {
                      key: 'getText',
                      value: function getText() {
                        var index =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : 0;
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : this.getLength() - index;

                        var _overload9 = overload(index, length);

                        var _overload10 = _slicedToArray(_overload9, 2);

                        index = _overload10[0];
                        length = _overload10[1];

                        return this.editor.getText(index, length);
                      }
                    },
                    {
                      key: 'hasFocus',
                      value: function hasFocus() {
                        return this.selection.hasFocus();
                      }
                    },
                    {
                      key: 'insertEmbed',
                      value: function insertEmbed(index, embed, value) {
                        var _this7 = this;

                        var source =
                          arguments.length > 3 && arguments[3] !== undefined
                            ? arguments[3]
                            : Quill.sources.API;

                        return modify.call(
                          this,
                          function() {
                            return _this7.editor.insertEmbed(
                              index,
                              embed,
                              value
                            );
                          },
                          source,
                          index
                        );
                      }
                    },
                    {
                      key: 'insertText',
                      value: function insertText(
                        index,
                        text,
                        name,
                        value,
                        source
                      ) {
                        var _this8 = this;

                        var formats = void 0;

                        var _overload11 = overload(
                          index,
                          0,
                          name,
                          value,
                          source
                        );

                        var _overload12 = _slicedToArray(_overload11, 4);

                        index = _overload12[0];
                        formats = _overload12[2];
                        source = _overload12[3];

                        return modify.call(
                          this,
                          function() {
                            return _this8.editor.insertText(
                              index,
                              text,
                              formats
                            );
                          },
                          source,
                          index,
                          text.length
                        );
                      }
                    },
                    {
                      key: 'isEnabled',
                      value: function isEnabled() {
                        return !this.container.classList.contains(
                          'ql-disabled'
                        );
                      }
                    },
                    {
                      key: 'off',
                      value: function off() {
                        return this.emitter.off.apply(this.emitter, arguments);
                      }
                    },
                    {
                      key: 'on',
                      value: function on() {
                        return this.emitter.on.apply(this.emitter, arguments);
                      }
                    },
                    {
                      key: 'once',
                      value: function once() {
                        return this.emitter.once.apply(this.emitter, arguments);
                      }
                    },
                    {
                      key: 'pasteHTML',
                      value: function pasteHTML(index, html, source) {
                        this.clipboard.dangerouslyPasteHTML(
                          index,
                          html,
                          source
                        );
                      }
                    },
                    {
                      key: 'removeFormat',
                      value: function removeFormat(index, length, source) {
                        var _this9 = this;

                        var _overload13 = overload(index, length, source);

                        var _overload14 = _slicedToArray(_overload13, 4);

                        index = _overload14[0];
                        length = _overload14[1];
                        source = _overload14[3];

                        return modify.call(
                          this,
                          function() {
                            return _this9.editor.removeFormat(index, length);
                          },
                          source,
                          index
                        );
                      }
                    },
                    {
                      key: 'scrollIntoView',
                      value: function scrollIntoView() {
                        this.selection.scrollIntoView(this.scrollingContainer);
                      }
                    },
                    {
                      key: 'setContents',
                      value: function setContents(delta) {
                        var _this10 = this;

                        var source =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : _emitter4.default.sources.API;

                        return modify.call(
                          this,
                          function() {
                            delta = new _quillDelta2.default(delta);
                            var length = _this10.getLength();
                            var deleted = _this10.editor.deleteText(0, length);
                            var applied = _this10.editor.applyDelta(delta);
                            var lastOp = applied.ops[applied.ops.length - 1];
                            if (
                              lastOp != null &&
                              typeof lastOp.insert === 'string' &&
                              lastOp.insert[lastOp.insert.length - 1] === '\n'
                            ) {
                              _this10.editor.deleteText(
                                _this10.getLength() - 1,
                                1
                              );
                              applied.delete(1);
                            }
                            var ret = deleted.compose(applied);
                            return ret;
                          },
                          source
                        );
                      }
                    },
                    {
                      key: 'setSelection',
                      value: function setSelection(index, length, source) {
                        if (index == null) {
                          this.selection.setRange(
                            null,
                            length || Quill.sources.API
                          );
                        } else {
                          var _overload15 = overload(index, length, source);

                          var _overload16 = _slicedToArray(_overload15, 4);

                          index = _overload16[0];
                          length = _overload16[1];
                          source = _overload16[3];

                          this.selection.setRange(
                            new _selection.Range(index, length),
                            source
                          );
                          if (source !== _emitter4.default.sources.SILENT) {
                            this.selection.scrollIntoView(
                              this.scrollingContainer
                            );
                          }
                        }
                      }
                    },
                    {
                      key: 'setText',
                      value: function setText(text) {
                        var source =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : _emitter4.default.sources.API;

                        var delta = new _quillDelta2.default().insert(text);
                        return this.setContents(delta, source);
                      }
                    },
                    {
                      key: 'update',
                      value: function update() {
                        var source =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : _emitter4.default.sources.USER;

                        var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes
                        this.selection.update(source);
                        return change;
                      }
                    },
                    {
                      key: 'updateContents',
                      value: function updateContents(delta) {
                        var _this11 = this;

                        var source =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : _emitter4.default.sources.API;

                        return modify.call(
                          this,
                          function() {
                            delta = new _quillDelta2.default(delta);
                            return _this11.editor.applyDelta(delta, source);
                          },
                          source,
                          true
                        );
                      }
                    }
                  ]);

                  return Quill;
                })();

                Quill.DEFAULTS = {
                  bounds: null,
                  formats: null,
                  modules: {},
                  placeholder: '',
                  readOnly: false,
                  scrollingContainer: null,
                  strict: true,
                  theme: 'default'
                };
                Quill.events = _emitter4.default.events;
                Quill.sources = _emitter4.default.sources;
                // eslint-disable-next-line no-undef
                Quill.version = false ? 'dev' : '1.3.7';

                Quill.imports = {
                  delta: _quillDelta2.default,
                  parchment: _parchment2.default,
                  'core/module': _module2.default,
                  'core/theme': _theme2.default
                };

                function expandConfig(container, userConfig) {
                  userConfig = (0, _extend2.default)(
                    true,
                    {
                      container: container,
                      modules: {
                        clipboard: true,
                        keyboard: true,
                        history: true
                      }
                    },
                    userConfig
                  );
                  if (
                    !userConfig.theme ||
                    userConfig.theme === Quill.DEFAULTS.theme
                  ) {
                    userConfig.theme = _theme2.default;
                  } else {
                    userConfig.theme = Quill.import(
                      'themes/' + userConfig.theme
                    );
                    if (userConfig.theme == null) {
                      throw new Error(
                        'Invalid theme ' +
                          userConfig.theme +
                          '. Did you register it?'
                      );
                    }
                  }
                  var themeConfig = (0, _extend2.default)(
                    true,
                    {},
                    userConfig.theme.DEFAULTS
                  );
                  [themeConfig, userConfig].forEach(function(config) {
                    config.modules = config.modules || {};
                    Object.keys(config.modules).forEach(function(module) {
                      if (config.modules[module] === true) {
                        config.modules[module] = {};
                      }
                    });
                  });
                  var moduleNames = Object.keys(themeConfig.modules).concat(
                    Object.keys(userConfig.modules)
                  );
                  var moduleConfig = moduleNames.reduce(function(config, name) {
                    var moduleClass = Quill.import('modules/' + name);
                    if (moduleClass == null) {
                      debug.error(
                        'Cannot load ' +
                          name +
                          ' module. Are you sure you registered it?'
                      );
                    } else {
                      config[name] = moduleClass.DEFAULTS || {};
                    }
                    return config;
                  }, {});
                  // Special case toolbar shorthand
                  if (
                    userConfig.modules != null &&
                    userConfig.modules.toolbar &&
                    userConfig.modules.toolbar.constructor !== Object
                  ) {
                    userConfig.modules.toolbar = {
                      container: userConfig.modules.toolbar
                    };
                  }
                  userConfig = (0, _extend2.default)(
                    true,
                    {},
                    Quill.DEFAULTS,
                    { modules: moduleConfig },
                    themeConfig,
                    userConfig
                  );
                  ['bounds', 'container', 'scrollingContainer'].forEach(
                    function(key) {
                      if (typeof userConfig[key] === 'string') {
                        userConfig[key] = document.querySelector(
                          userConfig[key]
                        );
                      }
                    }
                  );
                  userConfig.modules = Object.keys(userConfig.modules).reduce(
                    function(config, name) {
                      if (userConfig.modules[name]) {
                        config[name] = userConfig.modules[name];
                      }
                      return config;
                    },
                    {}
                  );
                  return userConfig;
                }

                // Handle selection preservation and TEXT_CHANGE emission
                // common to modification APIs
                function modify(modifier, source, index, shift) {
                  if (
                    this.options.strict &&
                    !this.isEnabled() &&
                    source === _emitter4.default.sources.USER
                  ) {
                    return new _quillDelta2.default();
                  }
                  var range = index == null ? null : this.getSelection();
                  var oldDelta = this.editor.delta;
                  var change = modifier();
                  if (range != null) {
                    if (index === true) index = range.index;
                    if (shift == null) {
                      range = shiftRange(range, change, source);
                    } else if (shift !== 0) {
                      range = shiftRange(range, index, shift, source);
                    }
                    this.setSelection(range, _emitter4.default.sources.SILENT);
                  }
                  if (change.length() > 0) {
                    var _emitter;

                    var args = [
                      _emitter4.default.events.TEXT_CHANGE,
                      change,
                      oldDelta,
                      source
                    ];
                    (_emitter = this.emitter).emit.apply(
                      _emitter,
                      [_emitter4.default.events.EDITOR_CHANGE].concat(args)
                    );
                    if (source !== _emitter4.default.sources.SILENT) {
                      var _emitter2;

                      (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                    }
                  }
                  return change;
                }

                function overload(index, length, name, value, source) {
                  var formats = {};
                  if (
                    typeof index.index === 'number' &&
                    typeof index.length === 'number'
                  ) {
                    // Allow for throwaway end (used by insertText/insertEmbed)
                    if (typeof length !== 'number') {
                      (source = value),
                        (value = name),
                        (name = length),
                        (length = index.length),
                        (index = index.index);
                    } else {
                      (length = index.length), (index = index.index);
                    }
                  } else if (typeof length !== 'number') {
                    (source = value),
                      (value = name),
                      (name = length),
                      (length = 0);
                  }
                  // Handle format being object, two format name/value strings or excluded
                  if (
                    (typeof name === 'undefined'
                      ? 'undefined'
                      : _typeof(name)) === 'object'
                  ) {
                    formats = name;
                    source = value;
                  } else if (typeof name === 'string') {
                    if (value != null) {
                      formats[name] = value;
                    } else {
                      source = name;
                    }
                  }
                  // Handle optional source
                  source = source || _emitter4.default.sources.API;
                  return [index, length, formats, source];
                }

                function shiftRange(range, index, length, source) {
                  if (range == null) return null;
                  var start = void 0,
                    end = void 0;
                  if (index instanceof _quillDelta2.default) {
                    var _map = [range.index, range.index + range.length].map(
                      function(pos) {
                        return index.transformPosition(
                          pos,
                          source !== _emitter4.default.sources.USER
                        );
                      }
                    );

                    var _map2 = _slicedToArray(_map, 2);

                    start = _map2[0];
                    end = _map2[1];
                  } else {
                    var _map3 = [range.index, range.index + range.length].map(
                      function(pos) {
                        if (
                          pos < index ||
                          (pos === index &&
                            source === _emitter4.default.sources.USER)
                        )
                          return pos;
                        if (length >= 0) {
                          return pos + length;
                        } else {
                          return Math.max(index, pos + length);
                        }
                      }
                    );

                    var _map4 = _slicedToArray(_map3, 2);

                    start = _map4[0];
                    end = _map4[1];
                  }
                  return new _selection.Range(start, end - start);
                }

                exports.expandConfig = expandConfig;
                exports.overload = overload;
                exports.default = Quill;

                /***/
              },
              /* 6 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Inline = (function(_Parchment$Inline) {
                  _inherits(Inline, _Parchment$Inline);

                  function Inline() {
                    _classCallCheck(this, Inline);

                    return _possibleConstructorReturn(
                      this,
                      (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Inline,
                    [
                      {
                        key: 'formatAt',
                        value: function formatAt(index, length, name, value) {
                          if (
                            Inline.compare(this.statics.blotName, name) < 0 &&
                            _parchment2.default.query(
                              name,
                              _parchment2.default.Scope.BLOT
                            )
                          ) {
                            var blot = this.isolate(index, length);
                            if (value) {
                              blot.wrap(name, value);
                            }
                          } else {
                            _get(
                              Inline.prototype.__proto__ ||
                                Object.getPrototypeOf(Inline.prototype),
                              'formatAt',
                              this
                            ).call(this, index, length, name, value);
                          }
                        }
                      },
                      {
                        key: 'optimize',
                        value: function optimize(context) {
                          _get(
                            Inline.prototype.__proto__ ||
                              Object.getPrototypeOf(Inline.prototype),
                            'optimize',
                            this
                          ).call(this, context);
                          if (
                            this.parent instanceof Inline &&
                            Inline.compare(
                              this.statics.blotName,
                              this.parent.statics.blotName
                            ) > 0
                          ) {
                            var parent = this.parent.isolate(
                              this.offset(),
                              this.length()
                            );
                            this.moveChildren(parent);
                            parent.wrap(this);
                          }
                        }
                      }
                    ],
                    [
                      {
                        key: 'compare',
                        value: function compare(self, other) {
                          var selfIndex = Inline.order.indexOf(self);
                          var otherIndex = Inline.order.indexOf(other);
                          if (selfIndex >= 0 || otherIndex >= 0) {
                            return selfIndex - otherIndex;
                          } else if (self === other) {
                            return 0;
                          } else if (self < other) {
                            return -1;
                          } else {
                            return 1;
                          }
                        }
                      }
                    ]
                  );

                  return Inline;
                })(_parchment2.default.Inline);

                Inline.allowedChildren = [
                  Inline,
                  _parchment2.default.Embed,
                  _text2.default
                ];
                // Lower index means deeper in the DOM tree, since not found (-1) is for embeds
                Inline.order = [
                  'cursor',
                  'inline', // Must be lower
                  'underline',
                  'strike',
                  'italic',
                  'bold',
                  'script',
                  'link',
                  'code' // Must be higher
                ];

                exports.default = Inline;

                /***/
              },
              /* 7 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var TextBlot = (function(_Parchment$Text) {
                  _inherits(TextBlot, _Parchment$Text);

                  function TextBlot() {
                    _classCallCheck(this, TextBlot);

                    return _possibleConstructorReturn(
                      this,
                      (
                        TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)
                      ).apply(this, arguments)
                    );
                  }

                  return TextBlot;
                })(_parchment2.default.Text);

                exports.default = TextBlot;

                /***/
              },
              /* 8 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _eventemitter = __webpack_require__(54);

                var _eventemitter2 = _interopRequireDefault(_eventemitter);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var debug = (0, _logger2.default)('quill:events');

                var EVENTS = [
                  'selectionchange',
                  'mousedown',
                  'mouseup',
                  'click'
                ];

                EVENTS.forEach(function(eventName) {
                  document.addEventListener(eventName, function() {
                    for (
                      var _len = arguments.length, args = Array(_len), _key = 0;
                      _key < _len;
                      _key++
                    ) {
                      args[_key] = arguments[_key];
                    }

                    [].slice
                      .call(document.querySelectorAll('.ql-container'))
                      .forEach(function(node) {
                        // TODO use WeakMap
                        if (node.__quill && node.__quill.emitter) {
                          var _node$__quill$emitter;

                          (_node$__quill$emitter =
                            node.__quill.emitter).handleDOM.apply(
                            _node$__quill$emitter,
                            args
                          );
                        }
                      });
                  });
                });

                var Emitter = (function(_EventEmitter) {
                  _inherits(Emitter, _EventEmitter);

                  function Emitter() {
                    _classCallCheck(this, Emitter);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        Emitter.__proto__ || Object.getPrototypeOf(Emitter)
                      ).call(this)
                    );

                    _this.listeners = {};
                    _this.on('error', debug.error);
                    return _this;
                  }

                  _createClass(Emitter, [
                    {
                      key: 'emit',
                      value: function emit() {
                        debug.log.apply(debug, arguments);
                        _get(
                          Emitter.prototype.__proto__ ||
                            Object.getPrototypeOf(Emitter.prototype),
                          'emit',
                          this
                        ).apply(this, arguments);
                      }
                    },
                    {
                      key: 'handleDOM',
                      value: function handleDOM(event) {
                        for (
                          var _len2 = arguments.length,
                            args = Array(_len2 > 1 ? _len2 - 1 : 0),
                            _key2 = 1;
                          _key2 < _len2;
                          _key2++
                        ) {
                          args[_key2 - 1] = arguments[_key2];
                        }

                        (this.listeners[event.type] || []).forEach(function(
                          _ref
                        ) {
                          var node = _ref.node,
                            handler = _ref.handler;

                          if (
                            event.target === node ||
                            node.contains(event.target)
                          ) {
                            handler.apply(undefined, [event].concat(args));
                          }
                        });
                      }
                    },
                    {
                      key: 'listenDOM',
                      value: function listenDOM(eventName, node, handler) {
                        if (!this.listeners[eventName]) {
                          this.listeners[eventName] = [];
                        }
                        this.listeners[eventName].push({
                          node: node,
                          handler: handler
                        });
                      }
                    }
                  ]);

                  return Emitter;
                })(_eventemitter2.default);

                Emitter.events = {
                  EDITOR_CHANGE: 'editor-change',
                  SCROLL_BEFORE_UPDATE: 'scroll-before-update',
                  SCROLL_OPTIMIZE: 'scroll-optimize',
                  SCROLL_UPDATE: 'scroll-update',
                  SELECTION_CHANGE: 'selection-change',
                  TEXT_CHANGE: 'text-change'
                };
                Emitter.sources = {
                  API: 'api',
                  SILENT: 'silent',
                  USER: 'user'
                };

                exports.default = Emitter;

                /***/
              },
              /* 9 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var Module = function Module(quill) {
                  var options =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : {};

                  _classCallCheck(this, Module);

                  this.quill = quill;
                  this.options = options;
                };

                Module.DEFAULTS = {};

                exports.default = Module;

                /***/
              },
              /* 10 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                var levels = ['error', 'warn', 'log', 'info'];
                var level = 'warn';

                function debug(method) {
                  if (levels.indexOf(method) <= levels.indexOf(level)) {
                    var _console;

                    for (
                      var _len = arguments.length,
                        args = Array(_len > 1 ? _len - 1 : 0),
                        _key = 1;
                      _key < _len;
                      _key++
                    ) {
                      args[_key - 1] = arguments[_key];
                    }

                    (_console = console)[method].apply(_console, args); // eslint-disable-line no-console
                  }
                }

                function namespace(ns) {
                  return levels.reduce(function(logger, method) {
                    logger[method] = debug.bind(console, method, ns);
                    return logger;
                  }, {});
                }

                debug.level = namespace.level = function(newLevel) {
                  level = newLevel;
                };

                exports.default = namespace;

                /***/
              },
              /* 11 */
              /***/ function(module, exports, __webpack_require__) {
                var pSlice = Array.prototype.slice;
                var objectKeys = __webpack_require__(52);
                var isArguments = __webpack_require__(53);

                var deepEqual = (module.exports = function(
                  actual,
                  expected,
                  opts
                ) {
                  if (!opts) opts = {};
                  // 7.1. All identical values are equivalent, as determined by ===.
                  if (actual === expected) {
                    return true;
                  } else if (
                    actual instanceof Date &&
                    expected instanceof Date
                  ) {
                    return actual.getTime() === expected.getTime();

                    // 7.3. Other pairs that do not both pass typeof value == 'object',
                    // equivalence is determined by ==.
                  } else if (
                    !actual ||
                    !expected ||
                    (typeof actual != 'object' && typeof expected != 'object')
                  ) {
                    return opts.strict
                      ? actual === expected
                      : actual == expected;

                    // 7.4. For all other Object pairs, including Array objects, equivalence is
                    // determined by having the same number of owned properties (as verified
                    // with Object.prototype.hasOwnProperty.call), the same set of keys
                    // (although not necessarily the same order), equivalent values for every
                    // corresponding key, and an identical 'prototype' property. Note: this
                    // accounts for both named and indexed properties on Arrays.
                  } else {
                    return objEquiv(actual, expected, opts);
                  }
                });

                function isUndefinedOrNull(value) {
                  return value === null || value === undefined;
                }

                function isBuffer(x) {
                  if (
                    !x ||
                    typeof x !== 'object' ||
                    typeof x.length !== 'number'
                  )
                    return false;
                  if (
                    typeof x.copy !== 'function' ||
                    typeof x.slice !== 'function'
                  ) {
                    return false;
                  }
                  if (x.length > 0 && typeof x[0] !== 'number') return false;
                  return true;
                }

                function objEquiv(a, b, opts) {
                  var i, key;
                  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
                    return false;
                  // an identical 'prototype' property.
                  if (a.prototype !== b.prototype) return false;
                  //~~~I've managed to break Object.keys through screwy arguments passing.
                  //   Converting to array solves the problem.
                  if (isArguments(a)) {
                    if (!isArguments(b)) {
                      return false;
                    }
                    a = pSlice.call(a);
                    b = pSlice.call(b);
                    return deepEqual(a, b, opts);
                  }
                  if (isBuffer(a)) {
                    if (!isBuffer(b)) {
                      return false;
                    }
                    if (a.length !== b.length) return false;
                    for (i = 0; i < a.length; i++) {
                      if (a[i] !== b[i]) return false;
                    }
                    return true;
                  }
                  try {
                    var ka = objectKeys(a),
                      kb = objectKeys(b);
                  } catch (e) {
                    //happens when one is a string literal and the other isn't
                    return false;
                  }
                  // having the same number of owned properties (keys incorporates
                  // hasOwnProperty)
                  if (ka.length != kb.length) return false;
                  //the same set of keys (although not necessarily the same order),
                  ka.sort();
                  kb.sort();
                  //~~~cheap key test
                  for (i = ka.length - 1; i >= 0; i--) {
                    if (ka[i] != kb[i]) return false;
                  }
                  //equivalent values for every corresponding key, and
                  //~~~possibly expensive deep test
                  for (i = ka.length - 1; i >= 0; i--) {
                    key = ka[i];
                    if (!deepEqual(a[key], b[key], opts)) return false;
                  }
                  return typeof a === typeof b;
                }

                /***/
              },
              /* 12 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', { value: true });
                var Registry = __webpack_require__(1);
                var Attributor = /** @class */ (function() {
                  function Attributor(attrName, keyName, options) {
                    if (options === void 0) {
                      options = {};
                    }
                    this.attrName = attrName;
                    this.keyName = keyName;
                    var attributeBit =
                      Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
                    if (options.scope != null) {
                      // Ignore type bits, force attribute bit
                      this.scope =
                        (options.scope & Registry.Scope.LEVEL) | attributeBit;
                    } else {
                      this.scope = Registry.Scope.ATTRIBUTE;
                    }
                    if (options.whitelist != null)
                      this.whitelist = options.whitelist;
                  }
                  Attributor.keys = function(node) {
                    return [].map.call(node.attributes, function(item) {
                      return item.name;
                    });
                  };
                  Attributor.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value)) return false;
                    node.setAttribute(this.keyName, value);
                    return true;
                  };
                  Attributor.prototype.canAdd = function(node, value) {
                    var match = Registry.query(
                      node,
                      Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE)
                    );
                    if (match == null) return false;
                    if (this.whitelist == null) return true;
                    if (typeof value === 'string') {
                      return (
                        this.whitelist.indexOf(value.replace(/["']/g, '')) > -1
                      );
                    } else {
                      return this.whitelist.indexOf(value) > -1;
                    }
                  };
                  Attributor.prototype.remove = function(node) {
                    node.removeAttribute(this.keyName);
                  };
                  Attributor.prototype.value = function(node) {
                    var value = node.getAttribute(this.keyName);
                    if (this.canAdd(node, value) && value) {
                      return value;
                    }
                    return '';
                  };
                  return Attributor;
                })();
                exports.default = Attributor;

                /***/
              },
              /* 13 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.Code = undefined;

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Code = (function(_Inline) {
                  _inherits(Code, _Inline);

                  function Code() {
                    _classCallCheck(this, Code);

                    return _possibleConstructorReturn(
                      this,
                      (Code.__proto__ || Object.getPrototypeOf(Code)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  return Code;
                })(_inline2.default);

                Code.blotName = 'code';
                Code.tagName = 'CODE';

                var CodeBlock = (function(_Block) {
                  _inherits(CodeBlock, _Block);

                  function CodeBlock() {
                    _classCallCheck(this, CodeBlock);

                    return _possibleConstructorReturn(
                      this,
                      (
                        CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(
                    CodeBlock,
                    [
                      {
                        key: 'delta',
                        value: function delta() {
                          var _this3 = this;

                          var text = this.domNode.textContent;
                          if (text.endsWith('\n')) {
                            // Should always be true
                            text = text.slice(0, -1);
                          }
                          return text.split('\n').reduce(function(delta, frag) {
                            return delta
                              .insert(frag)
                              .insert('\n', _this3.formats());
                          }, new _quillDelta2.default());
                        }
                      },
                      {
                        key: 'format',
                        value: function format(name, value) {
                          if (name === this.statics.blotName && value) return;

                          var _descendant = this.descendant(
                              _text2.default,
                              this.length() - 1
                            ),
                            _descendant2 = _slicedToArray(_descendant, 1),
                            text = _descendant2[0];

                          if (text != null) {
                            text.deleteAt(text.length() - 1, 1);
                          }
                          _get(
                            CodeBlock.prototype.__proto__ ||
                              Object.getPrototypeOf(CodeBlock.prototype),
                            'format',
                            this
                          ).call(this, name, value);
                        }
                      },
                      {
                        key: 'formatAt',
                        value: function formatAt(index, length, name, value) {
                          if (length === 0) return;
                          if (
                            _parchment2.default.query(
                              name,
                              _parchment2.default.Scope.BLOCK
                            ) == null ||
                            (name === this.statics.blotName &&
                              value === this.statics.formats(this.domNode))
                          ) {
                            return;
                          }
                          var nextNewline = this.newlineIndex(index);
                          if (nextNewline < 0 || nextNewline >= index + length)
                            return;
                          var prevNewline = this.newlineIndex(index, true) + 1;
                          var isolateLength = nextNewline - prevNewline + 1;
                          var blot = this.isolate(prevNewline, isolateLength);
                          var next = blot.next;
                          blot.format(name, value);
                          if (next instanceof CodeBlock) {
                            next.formatAt(
                              0,
                              index - prevNewline + length - isolateLength,
                              name,
                              value
                            );
                          }
                        }
                      },
                      {
                        key: 'insertAt',
                        value: function insertAt(index, value, def) {
                          if (def != null) return;

                          var _descendant3 = this.descendant(
                              _text2.default,
                              index
                            ),
                            _descendant4 = _slicedToArray(_descendant3, 2),
                            text = _descendant4[0],
                            offset = _descendant4[1];

                          text.insertAt(offset, value);
                        }
                      },
                      {
                        key: 'length',
                        value: function length() {
                          var length = this.domNode.textContent.length;
                          if (!this.domNode.textContent.endsWith('\n')) {
                            return length + 1;
                          }
                          return length;
                        }
                      },
                      {
                        key: 'newlineIndex',
                        value: function newlineIndex(searchIndex) {
                          var reverse =
                            arguments.length > 1 && arguments[1] !== undefined
                              ? arguments[1]
                              : false;

                          if (!reverse) {
                            var offset = this.domNode.textContent
                              .slice(searchIndex)
                              .indexOf('\n');
                            return offset > -1 ? searchIndex + offset : -1;
                          } else {
                            return this.domNode.textContent
                              .slice(0, searchIndex)
                              .lastIndexOf('\n');
                          }
                        }
                      },
                      {
                        key: 'optimize',
                        value: function optimize(context) {
                          if (!this.domNode.textContent.endsWith('\n')) {
                            this.appendChild(
                              _parchment2.default.create('text', '\n')
                            );
                          }
                          _get(
                            CodeBlock.prototype.__proto__ ||
                              Object.getPrototypeOf(CodeBlock.prototype),
                            'optimize',
                            this
                          ).call(this, context);
                          var next = this.next;
                          if (
                            next != null &&
                            next.prev === this &&
                            next.statics.blotName === this.statics.blotName &&
                            this.statics.formats(this.domNode) ===
                              next.statics.formats(next.domNode)
                          ) {
                            next.optimize(context);
                            next.moveChildren(this);
                            next.remove();
                          }
                        }
                      },
                      {
                        key: 'replace',
                        value: function replace(target) {
                          _get(
                            CodeBlock.prototype.__proto__ ||
                              Object.getPrototypeOf(CodeBlock.prototype),
                            'replace',
                            this
                          ).call(this, target);
                          [].slice
                            .call(this.domNode.querySelectorAll('*'))
                            .forEach(function(node) {
                              var blot = _parchment2.default.find(node);
                              if (blot == null) {
                                node.parentNode.removeChild(node);
                              } else if (
                                blot instanceof _parchment2.default.Embed
                              ) {
                                blot.remove();
                              } else {
                                blot.unwrap();
                              }
                            });
                        }
                      }
                    ],
                    [
                      {
                        key: 'create',
                        value: function create(value) {
                          var domNode = _get(
                            CodeBlock.__proto__ ||
                              Object.getPrototypeOf(CodeBlock),
                            'create',
                            this
                          ).call(this, value);
                          domNode.setAttribute('spellcheck', false);
                          return domNode;
                        }
                      },
                      {
                        key: 'formats',
                        value: function formats() {
                          return true;
                        }
                      }
                    ]
                  );

                  return CodeBlock;
                })(_block2.default);

                CodeBlock.blotName = 'code-block';
                CodeBlock.tagName = 'PRE';
                CodeBlock.TAB = '  ';

                exports.Code = Code;
                exports.default = CodeBlock;

                /***/
              },
              /* 14 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _typeof =
                  typeof Symbol === 'function' &&
                  typeof Symbol.iterator === 'symbol'
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === 'function' &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? 'symbol'
                          : typeof obj;
                      };

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _op = __webpack_require__(20);

                var _op2 = _interopRequireDefault(_op);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _code = __webpack_require__(13);

                var _code2 = _interopRequireDefault(_code);

                var _cursor = __webpack_require__(24);

                var _cursor2 = _interopRequireDefault(_cursor);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                var _break = __webpack_require__(16);

                var _break2 = _interopRequireDefault(_break);

                var _clone = __webpack_require__(21);

                var _clone2 = _interopRequireDefault(_clone);

                var _deepEqual = __webpack_require__(11);

                var _deepEqual2 = _interopRequireDefault(_deepEqual);

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var ASCII = /^[ -~]*$/;

                var Editor = (function() {
                  function Editor(scroll) {
                    _classCallCheck(this, Editor);

                    this.scroll = scroll;
                    this.delta = this.getDelta();
                  }

                  _createClass(Editor, [
                    {
                      key: 'applyDelta',
                      value: function applyDelta(delta) {
                        var _this = this;

                        var consumeNextNewline = false;
                        this.scroll.update();
                        var scrollLength = this.scroll.length();
                        this.scroll.batchStart();
                        delta = normalizeDelta(delta);
                        delta.reduce(function(index, op) {
                          var length =
                            op.retain || op.delete || op.insert.length || 1;
                          var attributes = op.attributes || {};
                          if (op.insert != null) {
                            if (typeof op.insert === 'string') {
                              var text = op.insert;
                              if (text.endsWith('\n') && consumeNextNewline) {
                                consumeNextNewline = false;
                                text = text.slice(0, -1);
                              }
                              if (
                                index >= scrollLength &&
                                !text.endsWith('\n')
                              ) {
                                consumeNextNewline = true;
                              }
                              _this.scroll.insertAt(index, text);

                              var _scroll$line = _this.scroll.line(index),
                                _scroll$line2 = _slicedToArray(_scroll$line, 2),
                                line = _scroll$line2[0],
                                offset = _scroll$line2[1];

                              var formats = (0, _extend2.default)(
                                {},
                                (0, _block.bubbleFormats)(line)
                              );
                              if (line instanceof _block2.default) {
                                var _line$descendant = line.descendant(
                                    _parchment2.default.Leaf,
                                    offset
                                  ),
                                  _line$descendant2 = _slicedToArray(
                                    _line$descendant,
                                    1
                                  ),
                                  leaf = _line$descendant2[0];

                                formats = (0, _extend2.default)(
                                  formats,
                                  (0, _block.bubbleFormats)(leaf)
                                );
                              }
                              attributes =
                                _op2.default.attributes.diff(
                                  formats,
                                  attributes
                                ) || {};
                            } else if (_typeof(op.insert) === 'object') {
                              var key = Object.keys(op.insert)[0]; // There should only be one key
                              if (key == null) return index;
                              _this.scroll.insertAt(index, key, op.insert[key]);
                            }
                            scrollLength += length;
                          }
                          Object.keys(attributes).forEach(function(name) {
                            _this.scroll.formatAt(
                              index,
                              length,
                              name,
                              attributes[name]
                            );
                          });
                          return index + length;
                        }, 0);
                        delta.reduce(function(index, op) {
                          if (typeof op.delete === 'number') {
                            _this.scroll.deleteAt(index, op.delete);
                            return index;
                          }
                          return index + (op.retain || op.insert.length || 1);
                        }, 0);
                        this.scroll.batchEnd();
                        return this.update(delta);
                      }
                    },
                    {
                      key: 'deleteText',
                      value: function deleteText(index, length) {
                        this.scroll.deleteAt(index, length);
                        return this.update(
                          new _quillDelta2.default()
                            .retain(index)
                            .delete(length)
                        );
                      }
                    },
                    {
                      key: 'formatLine',
                      value: function formatLine(index, length) {
                        var _this2 = this;

                        var formats =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : {};

                        this.scroll.update();
                        Object.keys(formats).forEach(function(format) {
                          if (
                            _this2.scroll.whitelist != null &&
                            !_this2.scroll.whitelist[format]
                          )
                            return;
                          var lines = _this2.scroll.lines(
                            index,
                            Math.max(length, 1)
                          );
                          var lengthRemaining = length;
                          lines.forEach(function(line) {
                            var lineLength = line.length();
                            if (!(line instanceof _code2.default)) {
                              line.format(format, formats[format]);
                            } else {
                              var codeIndex =
                                index - line.offset(_this2.scroll);
                              var codeLength =
                                line.newlineIndex(codeIndex + lengthRemaining) -
                                codeIndex +
                                1;
                              line.formatAt(
                                codeIndex,
                                codeLength,
                                format,
                                formats[format]
                              );
                            }
                            lengthRemaining -= lineLength;
                          });
                        });
                        this.scroll.optimize();
                        return this.update(
                          new _quillDelta2.default()
                            .retain(index)
                            .retain(length, (0, _clone2.default)(formats))
                        );
                      }
                    },
                    {
                      key: 'formatText',
                      value: function formatText(index, length) {
                        var _this3 = this;

                        var formats =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : {};

                        Object.keys(formats).forEach(function(format) {
                          _this3.scroll.formatAt(
                            index,
                            length,
                            format,
                            formats[format]
                          );
                        });
                        return this.update(
                          new _quillDelta2.default()
                            .retain(index)
                            .retain(length, (0, _clone2.default)(formats))
                        );
                      }
                    },
                    {
                      key: 'getContents',
                      value: function getContents(index, length) {
                        return this.delta.slice(index, index + length);
                      }
                    },
                    {
                      key: 'getDelta',
                      value: function getDelta() {
                        return this.scroll
                          .lines()
                          .reduce(function(delta, line) {
                            return delta.concat(line.delta());
                          }, new _quillDelta2.default());
                      }
                    },
                    {
                      key: 'getFormat',
                      value: function getFormat(index) {
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : 0;

                        var lines = [],
                          leaves = [];
                        if (length === 0) {
                          this.scroll.path(index).forEach(function(path) {
                            var _path = _slicedToArray(path, 1),
                              blot = _path[0];

                            if (blot instanceof _block2.default) {
                              lines.push(blot);
                            } else if (
                              blot instanceof _parchment2.default.Leaf
                            ) {
                              leaves.push(blot);
                            }
                          });
                        } else {
                          lines = this.scroll.lines(index, length);
                          leaves = this.scroll.descendants(
                            _parchment2.default.Leaf,
                            index,
                            length
                          );
                        }
                        var formatsArr = [lines, leaves].map(function(blots) {
                          if (blots.length === 0) return {};
                          var formats = (0, _block.bubbleFormats)(
                            blots.shift()
                          );
                          while (Object.keys(formats).length > 0) {
                            var blot = blots.shift();
                            if (blot == null) return formats;
                            formats = combineFormats(
                              (0, _block.bubbleFormats)(blot),
                              formats
                            );
                          }
                          return formats;
                        });
                        return _extend2.default.apply(
                          _extend2.default,
                          formatsArr
                        );
                      }
                    },
                    {
                      key: 'getText',
                      value: function getText(index, length) {
                        return this.getContents(index, length)
                          .filter(function(op) {
                            return typeof op.insert === 'string';
                          })
                          .map(function(op) {
                            return op.insert;
                          })
                          .join('');
                      }
                    },
                    {
                      key: 'insertEmbed',
                      value: function insertEmbed(index, embed, value) {
                        this.scroll.insertAt(index, embed, value);
                        return this.update(
                          new _quillDelta2.default()
                            .retain(index)
                            .insert(_defineProperty({}, embed, value))
                        );
                      }
                    },
                    {
                      key: 'insertText',
                      value: function insertText(index, text) {
                        var _this4 = this;

                        var formats =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : {};

                        text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
                        this.scroll.insertAt(index, text);
                        Object.keys(formats).forEach(function(format) {
                          _this4.scroll.formatAt(
                            index,
                            text.length,
                            format,
                            formats[format]
                          );
                        });
                        return this.update(
                          new _quillDelta2.default()
                            .retain(index)
                            .insert(text, (0, _clone2.default)(formats))
                        );
                      }
                    },
                    {
                      key: 'isBlank',
                      value: function isBlank() {
                        if (this.scroll.children.length == 0) return true;
                        if (this.scroll.children.length > 1) return false;
                        var block = this.scroll.children.head;
                        if (block.statics.blotName !== _block2.default.blotName)
                          return false;
                        if (block.children.length > 1) return false;
                        return block.children.head instanceof _break2.default;
                      }
                    },
                    {
                      key: 'removeFormat',
                      value: function removeFormat(index, length) {
                        var text = this.getText(index, length);

                        var _scroll$line3 = this.scroll.line(index + length),
                          _scroll$line4 = _slicedToArray(_scroll$line3, 2),
                          line = _scroll$line4[0],
                          offset = _scroll$line4[1];

                        var suffixLength = 0,
                          suffix = new _quillDelta2.default();
                        if (line != null) {
                          if (!(line instanceof _code2.default)) {
                            suffixLength = line.length() - offset;
                          } else {
                            suffixLength =
                              line.newlineIndex(offset) - offset + 1;
                          }
                          suffix = line
                            .delta()
                            .slice(offset, offset + suffixLength - 1)
                            .insert('\n');
                        }
                        var contents = this.getContents(
                          index,
                          length + suffixLength
                        );
                        var diff = contents.diff(
                          new _quillDelta2.default().insert(text).concat(suffix)
                        );
                        var delta = new _quillDelta2.default()
                          .retain(index)
                          .concat(diff);
                        return this.applyDelta(delta);
                      }
                    },
                    {
                      key: 'update',
                      value: function update(change) {
                        var mutations =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : [];
                        var cursorIndex =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : undefined;

                        var oldDelta = this.delta;
                        if (
                          mutations.length === 1 &&
                          mutations[0].type === 'characterData' &&
                          mutations[0].target.data.match(ASCII) &&
                          _parchment2.default.find(mutations[0].target)
                        ) {
                          // Optimization for character changes
                          var textBlot = _parchment2.default.find(
                            mutations[0].target
                          );
                          var formats = (0, _block.bubbleFormats)(textBlot);
                          var index = textBlot.offset(this.scroll);
                          var oldValue = mutations[0].oldValue.replace(
                            _cursor2.default.CONTENTS,
                            ''
                          );
                          var oldText = new _quillDelta2.default().insert(
                            oldValue
                          );
                          var newText = new _quillDelta2.default().insert(
                            textBlot.value()
                          );
                          var diffDelta = new _quillDelta2.default()
                            .retain(index)
                            .concat(oldText.diff(newText, cursorIndex));
                          change = diffDelta.reduce(function(delta, op) {
                            if (op.insert) {
                              return delta.insert(op.insert, formats);
                            } else {
                              return delta.push(op);
                            }
                          }, new _quillDelta2.default());
                          this.delta = oldDelta.compose(change);
                        } else {
                          this.delta = this.getDelta();
                          if (
                            !change ||
                            !(0, _deepEqual2.default)(
                              oldDelta.compose(change),
                              this.delta
                            )
                          ) {
                            change = oldDelta.diff(this.delta, cursorIndex);
                          }
                        }
                        return change;
                      }
                    }
                  ]);

                  return Editor;
                })();

                function combineFormats(formats, combined) {
                  return Object.keys(combined).reduce(function(merged, name) {
                    if (formats[name] == null) return merged;
                    if (combined[name] === formats[name]) {
                      merged[name] = combined[name];
                    } else if (Array.isArray(combined[name])) {
                      if (combined[name].indexOf(formats[name]) < 0) {
                        merged[name] = combined[name].concat([formats[name]]);
                      }
                    } else {
                      merged[name] = [combined[name], formats[name]];
                    }
                    return merged;
                  }, {});
                }

                function normalizeDelta(delta) {
                  return delta.reduce(function(delta, op) {
                    if (op.insert === 1) {
                      var attributes = (0, _clone2.default)(op.attributes);
                      delete attributes['image'];
                      return delta.insert(
                        { image: op.attributes.image },
                        attributes
                      );
                    }
                    if (
                      op.attributes != null &&
                      (op.attributes.list === true ||
                        op.attributes.bullet === true)
                    ) {
                      op = (0, _clone2.default)(op);
                      if (op.attributes.list) {
                        op.attributes.list = 'ordered';
                      } else {
                        op.attributes.list = 'bullet';
                        delete op.attributes.bullet;
                      }
                    }
                    if (typeof op.insert === 'string') {
                      var text = op.insert
                        .replace(/\r\n/g, '\n')
                        .replace(/\r/g, '\n');
                      return delta.insert(text, op.attributes);
                    }
                    return delta.push(op);
                  }, new _quillDelta2.default());
                }

                exports.default = Editor;

                /***/
              },
              /* 15 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.Range = undefined;

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _clone = __webpack_require__(21);

                var _clone2 = _interopRequireDefault(_clone);

                var _deepEqual = __webpack_require__(11);

                var _deepEqual2 = _interopRequireDefault(_deepEqual);

                var _emitter3 = __webpack_require__(8);

                var _emitter4 = _interopRequireDefault(_emitter3);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _toConsumableArray(arr) {
                  if (Array.isArray(arr)) {
                    for (
                      var i = 0, arr2 = Array(arr.length);
                      i < arr.length;
                      i++
                    ) {
                      arr2[i] = arr[i];
                    }
                    return arr2;
                  } else {
                    return Array.from(arr);
                  }
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var debug = (0, _logger2.default)('quill:selection');

                var Range = function Range(index) {
                  var length =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : 0;

                  _classCallCheck(this, Range);

                  this.index = index;
                  this.length = length;
                };

                var Selection = (function() {
                  function Selection(scroll, emitter) {
                    var _this = this;

                    _classCallCheck(this, Selection);

                    this.emitter = emitter;
                    this.scroll = scroll;
                    this.composing = false;
                    this.mouseDown = false;
                    this.root = this.scroll.domNode;
                    this.cursor = _parchment2.default.create('cursor', this);
                    // savedRange is last non-null range
                    this.lastRange = this.savedRange = new Range(0, 0);
                    this.handleComposition();
                    this.handleDragging();
                    this.emitter.listenDOM(
                      'selectionchange',
                      document,
                      function() {
                        if (!_this.mouseDown) {
                          setTimeout(
                            _this.update.bind(
                              _this,
                              _emitter4.default.sources.USER
                            ),
                            1
                          );
                        }
                      }
                    );
                    this.emitter.on(
                      _emitter4.default.events.EDITOR_CHANGE,
                      function(type, delta) {
                        if (
                          type === _emitter4.default.events.TEXT_CHANGE &&
                          delta.length() > 0
                        ) {
                          _this.update(_emitter4.default.sources.SILENT);
                        }
                      }
                    );
                    this.emitter.on(
                      _emitter4.default.events.SCROLL_BEFORE_UPDATE,
                      function() {
                        if (!_this.hasFocus()) return;
                        var native = _this.getNativeRange();
                        if (native == null) return;
                        if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle
                        // TODO unclear if this has negative side effects
                        _this.emitter.once(
                          _emitter4.default.events.SCROLL_UPDATE,
                          function() {
                            try {
                              _this.setNativeRange(
                                native.start.node,
                                native.start.offset,
                                native.end.node,
                                native.end.offset
                              );
                            } catch (ignored) {}
                          }
                        );
                      }
                    );
                    this.emitter.on(
                      _emitter4.default.events.SCROLL_OPTIMIZE,
                      function(mutations, context) {
                        if (context.range) {
                          var _context$range = context.range,
                            startNode = _context$range.startNode,
                            startOffset = _context$range.startOffset,
                            endNode = _context$range.endNode,
                            endOffset = _context$range.endOffset;

                          _this.setNativeRange(
                            startNode,
                            startOffset,
                            endNode,
                            endOffset
                          );
                        }
                      }
                    );
                    this.update(_emitter4.default.sources.SILENT);
                  }

                  _createClass(Selection, [
                    {
                      key: 'handleComposition',
                      value: function handleComposition() {
                        var _this2 = this;

                        this.root.addEventListener(
                          'compositionstart',
                          function() {
                            _this2.composing = true;
                          }
                        );
                        this.root.addEventListener(
                          'compositionend',
                          function() {
                            _this2.composing = false;
                            if (_this2.cursor.parent) {
                              var range = _this2.cursor.restore();
                              if (!range) return;
                              setTimeout(function() {
                                _this2.setNativeRange(
                                  range.startNode,
                                  range.startOffset,
                                  range.endNode,
                                  range.endOffset
                                );
                              }, 1);
                            }
                          }
                        );
                      }
                    },
                    {
                      key: 'handleDragging',
                      value: function handleDragging() {
                        var _this3 = this;

                        this.emitter.listenDOM(
                          'mousedown',
                          document.body,
                          function() {
                            _this3.mouseDown = true;
                          }
                        );
                        this.emitter.listenDOM(
                          'mouseup',
                          document.body,
                          function() {
                            _this3.mouseDown = false;
                            _this3.update(_emitter4.default.sources.USER);
                          }
                        );
                      }
                    },
                    {
                      key: 'focus',
                      value: function focus() {
                        if (this.hasFocus()) return;
                        this.root.focus();
                        this.setRange(this.savedRange);
                      }
                    },
                    {
                      key: 'format',
                      value: function format(_format, value) {
                        if (
                          this.scroll.whitelist != null &&
                          !this.scroll.whitelist[_format]
                        )
                          return;
                        this.scroll.update();
                        var nativeRange = this.getNativeRange();
                        if (
                          nativeRange == null ||
                          !nativeRange.native.collapsed ||
                          _parchment2.default.query(
                            _format,
                            _parchment2.default.Scope.BLOCK
                          )
                        )
                          return;
                        if (nativeRange.start.node !== this.cursor.textNode) {
                          var blot = _parchment2.default.find(
                            nativeRange.start.node,
                            false
                          );
                          if (blot == null) return;
                          // TODO Give blot ability to not split
                          if (blot instanceof _parchment2.default.Leaf) {
                            var after = blot.split(nativeRange.start.offset);
                            blot.parent.insertBefore(this.cursor, after);
                          } else {
                            blot.insertBefore(
                              this.cursor,
                              nativeRange.start.node
                            ); // Should never happen
                          }
                          this.cursor.attach();
                        }
                        this.cursor.format(_format, value);
                        this.scroll.optimize();
                        this.setNativeRange(
                          this.cursor.textNode,
                          this.cursor.textNode.data.length
                        );
                        this.update();
                      }
                    },
                    {
                      key: 'getBounds',
                      value: function getBounds(index) {
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : 0;

                        var scrollLength = this.scroll.length();
                        index = Math.min(index, scrollLength - 1);
                        length =
                          Math.min(index + length, scrollLength - 1) - index;
                        var node = void 0,
                          _scroll$leaf = this.scroll.leaf(index),
                          _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
                          leaf = _scroll$leaf2[0],
                          offset = _scroll$leaf2[1];
                        if (leaf == null) return null;

                        var _leaf$position = leaf.position(offset, true);

                        var _leaf$position2 = _slicedToArray(_leaf$position, 2);

                        node = _leaf$position2[0];
                        offset = _leaf$position2[1];

                        var range = document.createRange();
                        if (length > 0) {
                          range.setStart(node, offset);

                          var _scroll$leaf3 = this.scroll.leaf(index + length);

                          var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);

                          leaf = _scroll$leaf4[0];
                          offset = _scroll$leaf4[1];

                          if (leaf == null) return null;

                          var _leaf$position3 = leaf.position(offset, true);

                          var _leaf$position4 = _slicedToArray(
                            _leaf$position3,
                            2
                          );

                          node = _leaf$position4[0];
                          offset = _leaf$position4[1];

                          range.setEnd(node, offset);
                          return range.getBoundingClientRect();
                        } else {
                          var side = 'left';
                          var rect = void 0;
                          if (node instanceof Text) {
                            if (offset < node.data.length) {
                              range.setStart(node, offset);
                              range.setEnd(node, offset + 1);
                            } else {
                              range.setStart(node, offset - 1);
                              range.setEnd(node, offset);
                              side = 'right';
                            }
                            rect = range.getBoundingClientRect();
                          } else {
                            rect = leaf.domNode.getBoundingClientRect();
                            if (offset > 0) side = 'right';
                          }
                          return {
                            bottom: rect.top + rect.height,
                            height: rect.height,
                            left: rect[side],
                            right: rect[side],
                            top: rect.top,
                            width: 0
                          };
                        }
                      }
                    },
                    {
                      key: 'getNativeRange',
                      value: function getNativeRange() {
                        var selection = document.getSelection();
                        if (selection == null || selection.rangeCount <= 0)
                          return null;
                        var nativeRange = selection.getRangeAt(0);
                        if (nativeRange == null) return null;
                        var range = this.normalizeNative(nativeRange);
                        debug.info('getNativeRange', range);
                        return range;
                      }
                    },
                    {
                      key: 'getRange',
                      value: function getRange() {
                        var normalized = this.getNativeRange();
                        if (normalized == null) return [null, null];
                        var range = this.normalizedToRange(normalized);
                        return [range, normalized];
                      }
                    },
                    {
                      key: 'hasFocus',
                      value: function hasFocus() {
                        return document.activeElement === this.root;
                      }
                    },
                    {
                      key: 'normalizedToRange',
                      value: function normalizedToRange(range) {
                        var _this4 = this;

                        var positions = [
                          [range.start.node, range.start.offset]
                        ];
                        if (!range.native.collapsed) {
                          positions.push([range.end.node, range.end.offset]);
                        }
                        var indexes = positions.map(function(position) {
                          var _position = _slicedToArray(position, 2),
                            node = _position[0],
                            offset = _position[1];

                          var blot = _parchment2.default.find(node, true);
                          var index = blot.offset(_this4.scroll);
                          if (offset === 0) {
                            return index;
                          } else if (
                            blot instanceof _parchment2.default.Container
                          ) {
                            return index + blot.length();
                          } else {
                            return index + blot.index(node, offset);
                          }
                        });
                        var end = Math.min(
                          Math.max.apply(Math, _toConsumableArray(indexes)),
                          this.scroll.length() - 1
                        );
                        var start = Math.min.apply(
                          Math,
                          [end].concat(_toConsumableArray(indexes))
                        );
                        return new Range(start, end - start);
                      }
                    },
                    {
                      key: 'normalizeNative',
                      value: function normalizeNative(nativeRange) {
                        if (
                          !contains(this.root, nativeRange.startContainer) ||
                          (!nativeRange.collapsed &&
                            !contains(this.root, nativeRange.endContainer))
                        ) {
                          return null;
                        }
                        var range = {
                          start: {
                            node: nativeRange.startContainer,
                            offset: nativeRange.startOffset
                          },
                          end: {
                            node: nativeRange.endContainer,
                            offset: nativeRange.endOffset
                          },
                          native: nativeRange
                        };
                        [range.start, range.end].forEach(function(position) {
                          var node = position.node,
                            offset = position.offset;
                          while (
                            !(node instanceof Text) &&
                            node.childNodes.length > 0
                          ) {
                            if (node.childNodes.length > offset) {
                              node = node.childNodes[offset];
                              offset = 0;
                            } else if (node.childNodes.length === offset) {
                              node = node.lastChild;
                              offset =
                                node instanceof Text
                                  ? node.data.length
                                  : node.childNodes.length + 1;
                            } else {
                              break;
                            }
                          }
                          (position.node = node), (position.offset = offset);
                        });
                        return range;
                      }
                    },
                    {
                      key: 'rangeToNative',
                      value: function rangeToNative(range) {
                        var _this5 = this;

                        var indexes = range.collapsed
                          ? [range.index]
                          : [range.index, range.index + range.length];
                        var args = [];
                        var scrollLength = this.scroll.length();
                        indexes.forEach(function(index, i) {
                          index = Math.min(scrollLength - 1, index);
                          var node = void 0,
                            _scroll$leaf5 = _this5.scroll.leaf(index),
                            _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
                            leaf = _scroll$leaf6[0],
                            offset = _scroll$leaf6[1];
                          var _leaf$position5 = leaf.position(offset, i !== 0);

                          var _leaf$position6 = _slicedToArray(
                            _leaf$position5,
                            2
                          );

                          node = _leaf$position6[0];
                          offset = _leaf$position6[1];

                          args.push(node, offset);
                        });
                        if (args.length < 2) {
                          args = args.concat(args);
                        }
                        return args;
                      }
                    },
                    {
                      key: 'scrollIntoView',
                      value: function scrollIntoView(scrollingContainer) {
                        var range = this.lastRange;
                        if (range == null) return;
                        var bounds = this.getBounds(range.index, range.length);
                        if (bounds == null) return;
                        var limit = this.scroll.length() - 1;

                        var _scroll$line = this.scroll.line(
                            Math.min(range.index, limit)
                          ),
                          _scroll$line2 = _slicedToArray(_scroll$line, 1),
                          first = _scroll$line2[0];

                        var last = first;
                        if (range.length > 0) {
                          var _scroll$line3 = this.scroll.line(
                            Math.min(range.index + range.length, limit)
                          );

                          var _scroll$line4 = _slicedToArray(_scroll$line3, 1);

                          last = _scroll$line4[0];
                        }
                        if (first == null || last == null) return;
                        var scrollBounds = scrollingContainer.getBoundingClientRect();
                        if (bounds.top < scrollBounds.top) {
                          scrollingContainer.scrollTop -=
                            scrollBounds.top - bounds.top;
                        } else if (bounds.bottom > scrollBounds.bottom) {
                          scrollingContainer.scrollTop +=
                            bounds.bottom - scrollBounds.bottom;
                        }
                      }
                    },
                    {
                      key: 'setNativeRange',
                      value: function setNativeRange(startNode, startOffset) {
                        var endNode =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : startNode;
                        var endOffset =
                          arguments.length > 3 && arguments[3] !== undefined
                            ? arguments[3]
                            : startOffset;
                        var force =
                          arguments.length > 4 && arguments[4] !== undefined
                            ? arguments[4]
                            : false;

                        debug.info(
                          'setNativeRange',
                          startNode,
                          startOffset,
                          endNode,
                          endOffset
                        );
                        if (
                          startNode != null &&
                          (this.root.parentNode == null ||
                            startNode.parentNode == null ||
                            endNode.parentNode == null)
                        ) {
                          return;
                        }
                        var selection = document.getSelection();
                        if (selection == null) return;
                        if (startNode != null) {
                          if (!this.hasFocus()) this.root.focus();
                          var native = (this.getNativeRange() || {}).native;
                          if (
                            native == null ||
                            force ||
                            startNode !== native.startContainer ||
                            startOffset !== native.startOffset ||
                            endNode !== native.endContainer ||
                            endOffset !== native.endOffset
                          ) {
                            if (startNode.tagName == 'BR') {
                              startOffset = [].indexOf.call(
                                startNode.parentNode.childNodes,
                                startNode
                              );
                              startNode = startNode.parentNode;
                            }
                            if (endNode.tagName == 'BR') {
                              endOffset = [].indexOf.call(
                                endNode.parentNode.childNodes,
                                endNode
                              );
                              endNode = endNode.parentNode;
                            }
                            var range = document.createRange();
                            range.setStart(startNode, startOffset);
                            range.setEnd(endNode, endOffset);
                            selection.removeAllRanges();
                            selection.addRange(range);
                          }
                        } else {
                          selection.removeAllRanges();
                          this.root.blur();
                          document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
                        }
                      }
                    },
                    {
                      key: 'setRange',
                      value: function setRange(range) {
                        var force =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : false;
                        var source =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : _emitter4.default.sources.API;

                        if (typeof force === 'string') {
                          source = force;
                          force = false;
                        }
                        debug.info('setRange', range);
                        if (range != null) {
                          var args = this.rangeToNative(range);
                          this.setNativeRange.apply(
                            this,
                            _toConsumableArray(args).concat([force])
                          );
                        } else {
                          this.setNativeRange(null);
                        }
                        this.update(source);
                      }
                    },
                    {
                      key: 'update',
                      value: function update() {
                        var source =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : _emitter4.default.sources.USER;

                        var oldRange = this.lastRange;

                        var _getRange = this.getRange(),
                          _getRange2 = _slicedToArray(_getRange, 2),
                          lastRange = _getRange2[0],
                          nativeRange = _getRange2[1];

                        this.lastRange = lastRange;
                        if (this.lastRange != null) {
                          this.savedRange = this.lastRange;
                        }
                        if (
                          !(0, _deepEqual2.default)(oldRange, this.lastRange)
                        ) {
                          var _emitter;

                          if (
                            !this.composing &&
                            nativeRange != null &&
                            nativeRange.native.collapsed &&
                            nativeRange.start.node !== this.cursor.textNode
                          ) {
                            this.cursor.restore();
                          }
                          var args = [
                            _emitter4.default.events.SELECTION_CHANGE,
                            (0, _clone2.default)(this.lastRange),
                            (0, _clone2.default)(oldRange),
                            source
                          ];
                          (_emitter = this.emitter).emit.apply(
                            _emitter,
                            [_emitter4.default.events.EDITOR_CHANGE].concat(
                              args
                            )
                          );
                          if (source !== _emitter4.default.sources.SILENT) {
                            var _emitter2;

                            (_emitter2 = this.emitter).emit.apply(
                              _emitter2,
                              args
                            );
                          }
                        }
                      }
                    }
                  ]);

                  return Selection;
                })();

                function contains(parent, descendant) {
                  try {
                    // Firefox inserts inaccessible nodes around video elements
                    descendant.parentNode;
                  } catch (e) {
                    return false;
                  }
                  // IE11 has bug with Text nodes
                  // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
                  if (descendant instanceof Text) {
                    descendant = descendant.parentNode;
                  }
                  return parent.contains(descendant);
                }

                exports.Range = Range;
                exports.default = Selection;

                /***/
              },
              /* 16 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Break = (function(_Parchment$Embed) {
                  _inherits(Break, _Parchment$Embed);

                  function Break() {
                    _classCallCheck(this, Break);

                    return _possibleConstructorReturn(
                      this,
                      (Break.__proto__ || Object.getPrototypeOf(Break)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Break,
                    [
                      {
                        key: 'insertInto',
                        value: function insertInto(parent, ref) {
                          if (parent.children.length === 0) {
                            _get(
                              Break.prototype.__proto__ ||
                                Object.getPrototypeOf(Break.prototype),
                              'insertInto',
                              this
                            ).call(this, parent, ref);
                          } else {
                            this.remove();
                          }
                        }
                      },
                      {
                        key: 'length',
                        value: function length() {
                          return 0;
                        }
                      },
                      {
                        key: 'value',
                        value: function value() {
                          return '';
                        }
                      }
                    ],
                    [
                      {
                        key: 'value',
                        value: function value() {
                          return undefined;
                        }
                      }
                    ]
                  );

                  return Break;
                })(_parchment2.default.Embed);

                Break.blotName = 'break';
                Break.tagName = 'BR';

                exports.default = Break;

                /***/
              },
              /* 17 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var linked_list_1 = __webpack_require__(44);
                var shadow_1 = __webpack_require__(30);
                var Registry = __webpack_require__(1);
                var ContainerBlot = /** @class */ (function(_super) {
                  __extends(ContainerBlot, _super);
                  function ContainerBlot(domNode) {
                    var _this = _super.call(this, domNode) || this;
                    _this.build();
                    return _this;
                  }
                  ContainerBlot.prototype.appendChild = function(other) {
                    this.insertBefore(other);
                  };
                  ContainerBlot.prototype.attach = function() {
                    _super.prototype.attach.call(this);
                    this.children.forEach(function(child) {
                      child.attach();
                    });
                  };
                  ContainerBlot.prototype.build = function() {
                    var _this = this;
                    this.children = new linked_list_1.default();
                    // Need to be reversed for if DOM nodes already in order
                    [].slice
                      .call(this.domNode.childNodes)
                      .reverse()
                      .forEach(function(node) {
                        try {
                          var child = makeBlot(node);
                          _this.insertBefore(
                            child,
                            _this.children.head || undefined
                          );
                        } catch (err) {
                          if (err instanceof Registry.ParchmentError) return;
                          else throw err;
                        }
                      });
                  };
                  ContainerBlot.prototype.deleteAt = function(index, length) {
                    if (index === 0 && length === this.length()) {
                      return this.remove();
                    }
                    this.children.forEachAt(index, length, function(
                      child,
                      offset,
                      length
                    ) {
                      child.deleteAt(offset, length);
                    });
                  };
                  ContainerBlot.prototype.descendant = function(
                    criteria,
                    index
                  ) {
                    var _a = this.children.find(index),
                      child = _a[0],
                      offset = _a[1];
                    if (
                      (criteria.blotName == null && criteria(child)) ||
                      (criteria.blotName != null && child instanceof criteria)
                    ) {
                      return [child, offset];
                    } else if (child instanceof ContainerBlot) {
                      return child.descendant(criteria, offset);
                    } else {
                      return [null, -1];
                    }
                  };
                  ContainerBlot.prototype.descendants = function(
                    criteria,
                    index,
                    length
                  ) {
                    if (index === void 0) {
                      index = 0;
                    }
                    if (length === void 0) {
                      length = Number.MAX_VALUE;
                    }
                    var descendants = [];
                    var lengthLeft = length;
                    this.children.forEachAt(index, length, function(
                      child,
                      index,
                      length
                    ) {
                      if (
                        (criteria.blotName == null && criteria(child)) ||
                        (criteria.blotName != null && child instanceof criteria)
                      ) {
                        descendants.push(child);
                      }
                      if (child instanceof ContainerBlot) {
                        descendants = descendants.concat(
                          child.descendants(criteria, index, lengthLeft)
                        );
                      }
                      lengthLeft -= length;
                    });
                    return descendants;
                  };
                  ContainerBlot.prototype.detach = function() {
                    this.children.forEach(function(child) {
                      child.detach();
                    });
                    _super.prototype.detach.call(this);
                  };
                  ContainerBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    this.children.forEachAt(index, length, function(
                      child,
                      offset,
                      length
                    ) {
                      child.formatAt(offset, length, name, value);
                    });
                  };
                  ContainerBlot.prototype.insertAt = function(
                    index,
                    value,
                    def
                  ) {
                    var _a = this.children.find(index),
                      child = _a[0],
                      offset = _a[1];
                    if (child) {
                      child.insertAt(offset, value, def);
                    } else {
                      var blot =
                        def == null
                          ? Registry.create('text', value)
                          : Registry.create(value, def);
                      this.appendChild(blot);
                    }
                  };
                  ContainerBlot.prototype.insertBefore = function(
                    childBlot,
                    refBlot
                  ) {
                    if (
                      this.statics.allowedChildren != null &&
                      !this.statics.allowedChildren.some(function(child) {
                        return childBlot instanceof child;
                      })
                    ) {
                      throw new Registry.ParchmentError(
                        'Cannot insert ' +
                          childBlot.statics.blotName +
                          ' into ' +
                          this.statics.blotName
                      );
                    }
                    childBlot.insertInto(this, refBlot);
                  };
                  ContainerBlot.prototype.length = function() {
                    return this.children.reduce(function(memo, child) {
                      return memo + child.length();
                    }, 0);
                  };
                  ContainerBlot.prototype.moveChildren = function(
                    targetParent,
                    refNode
                  ) {
                    this.children.forEach(function(child) {
                      targetParent.insertBefore(child, refNode);
                    });
                  };
                  ContainerBlot.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    if (this.children.length === 0) {
                      if (this.statics.defaultChild != null) {
                        var child = Registry.create(this.statics.defaultChild);
                        this.appendChild(child);
                        child.optimize(context);
                      } else {
                        this.remove();
                      }
                    }
                  };
                  ContainerBlot.prototype.path = function(index, inclusive) {
                    if (inclusive === void 0) {
                      inclusive = false;
                    }
                    var _a = this.children.find(index, inclusive),
                      child = _a[0],
                      offset = _a[1];
                    var position = [[this, index]];
                    if (child instanceof ContainerBlot) {
                      return position.concat(child.path(offset, inclusive));
                    } else if (child != null) {
                      position.push([child, offset]);
                    }
                    return position;
                  };
                  ContainerBlot.prototype.removeChild = function(child) {
                    this.children.remove(child);
                  };
                  ContainerBlot.prototype.replace = function(target) {
                    if (target instanceof ContainerBlot) {
                      target.moveChildren(this);
                    }
                    _super.prototype.replace.call(this, target);
                  };
                  ContainerBlot.prototype.split = function(index, force) {
                    if (force === void 0) {
                      force = false;
                    }
                    if (!force) {
                      if (index === 0) return this;
                      if (index === this.length()) return this.next;
                    }
                    var after = this.clone();
                    this.parent.insertBefore(after, this.next);
                    this.children.forEachAt(index, this.length(), function(
                      child,
                      offset,
                      length
                    ) {
                      child = child.split(offset, force);
                      after.appendChild(child);
                    });
                    return after;
                  };
                  ContainerBlot.prototype.unwrap = function() {
                    this.moveChildren(this.parent, this.next);
                    this.remove();
                  };
                  ContainerBlot.prototype.update = function(
                    mutations,
                    context
                  ) {
                    var _this = this;
                    var addedNodes = [];
                    var removedNodes = [];
                    mutations.forEach(function(mutation) {
                      if (
                        mutation.target === _this.domNode &&
                        mutation.type === 'childList'
                      ) {
                        addedNodes.push.apply(addedNodes, mutation.addedNodes);
                        removedNodes.push.apply(
                          removedNodes,
                          mutation.removedNodes
                        );
                      }
                    });
                    removedNodes.forEach(function(node) {
                      // Check node has actually been removed
                      // One exception is Chrome does not immediately remove IFRAMEs
                      // from DOM but MutationRecord is correct in its reported removal
                      if (
                        node.parentNode != null &&
                        // @ts-ignore
                        node.tagName !== 'IFRAME' &&
                        document.body.compareDocumentPosition(node) &
                          Node.DOCUMENT_POSITION_CONTAINED_BY
                      ) {
                        return;
                      }
                      var blot = Registry.find(node);
                      if (blot == null) return;
                      if (
                        blot.domNode.parentNode == null ||
                        blot.domNode.parentNode === _this.domNode
                      ) {
                        blot.detach();
                      }
                    });
                    addedNodes
                      .filter(function(node) {
                        return node.parentNode == _this.domNode;
                      })
                      .sort(function(a, b) {
                        if (a === b) return 0;
                        if (
                          a.compareDocumentPosition(b) &
                          Node.DOCUMENT_POSITION_FOLLOWING
                        ) {
                          return 1;
                        }
                        return -1;
                      })
                      .forEach(function(node) {
                        var refBlot = null;
                        if (node.nextSibling != null) {
                          refBlot = Registry.find(node.nextSibling);
                        }
                        var blot = makeBlot(node);
                        if (blot.next != refBlot || blot.next == null) {
                          if (blot.parent != null) {
                            blot.parent.removeChild(_this);
                          }
                          _this.insertBefore(blot, refBlot || undefined);
                        }
                      });
                  };
                  return ContainerBlot;
                })(shadow_1.default);
                function makeBlot(node) {
                  var blot = Registry.find(node);
                  if (blot == null) {
                    try {
                      blot = Registry.create(node);
                    } catch (e) {
                      blot = Registry.create(Registry.Scope.INLINE);
                      [].slice.call(node.childNodes).forEach(function(child) {
                        // @ts-ignore
                        blot.domNode.appendChild(child);
                      });
                      if (node.parentNode) {
                        node.parentNode.replaceChild(blot.domNode, node);
                      }
                      blot.attach();
                    }
                  }
                  return blot;
                }
                exports.default = ContainerBlot;

                /***/
              },
              /* 18 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var attributor_1 = __webpack_require__(12);
                var store_1 = __webpack_require__(31);
                var container_1 = __webpack_require__(17);
                var Registry = __webpack_require__(1);
                var FormatBlot = /** @class */ (function(_super) {
                  __extends(FormatBlot, _super);
                  function FormatBlot(domNode) {
                    var _this = _super.call(this, domNode) || this;
                    _this.attributes = new store_1.default(_this.domNode);
                    return _this;
                  }
                  FormatBlot.formats = function(domNode) {
                    if (typeof this.tagName === 'string') {
                      return true;
                    } else if (Array.isArray(this.tagName)) {
                      return domNode.tagName.toLowerCase();
                    }
                    return undefined;
                  };
                  FormatBlot.prototype.format = function(name, value) {
                    var format = Registry.query(name);
                    if (format instanceof attributor_1.default) {
                      this.attributes.attribute(format, value);
                    } else if (value) {
                      if (
                        format != null &&
                        (name !== this.statics.blotName ||
                          this.formats()[name] !== value)
                      ) {
                        this.replaceWith(name, value);
                      }
                    }
                  };
                  FormatBlot.prototype.formats = function() {
                    var formats = this.attributes.values();
                    var format = this.statics.formats(this.domNode);
                    if (format != null) {
                      formats[this.statics.blotName] = format;
                    }
                    return formats;
                  };
                  FormatBlot.prototype.replaceWith = function(name, value) {
                    var replacement = _super.prototype.replaceWith.call(
                      this,
                      name,
                      value
                    );
                    this.attributes.copy(replacement);
                    return replacement;
                  };
                  FormatBlot.prototype.update = function(mutations, context) {
                    var _this = this;
                    _super.prototype.update.call(this, mutations, context);
                    if (
                      mutations.some(function(mutation) {
                        return (
                          mutation.target === _this.domNode &&
                          mutation.type === 'attributes'
                        );
                      })
                    ) {
                      this.attributes.build();
                    }
                  };
                  FormatBlot.prototype.wrap = function(name, value) {
                    var wrapper = _super.prototype.wrap.call(this, name, value);
                    if (
                      wrapper instanceof FormatBlot &&
                      wrapper.statics.scope === this.statics.scope
                    ) {
                      this.attributes.move(wrapper);
                    }
                    return wrapper;
                  };
                  return FormatBlot;
                })(container_1.default);
                exports.default = FormatBlot;

                /***/
              },
              /* 19 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var shadow_1 = __webpack_require__(30);
                var Registry = __webpack_require__(1);
                var LeafBlot = /** @class */ (function(_super) {
                  __extends(LeafBlot, _super);
                  function LeafBlot() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  LeafBlot.value = function(domNode) {
                    return true;
                  };
                  LeafBlot.prototype.index = function(node, offset) {
                    if (
                      this.domNode === node ||
                      this.domNode.compareDocumentPosition(node) &
                        Node.DOCUMENT_POSITION_CONTAINED_BY
                    ) {
                      return Math.min(offset, 1);
                    }
                    return -1;
                  };
                  LeafBlot.prototype.position = function(index, inclusive) {
                    var offset = [].indexOf.call(
                      this.parent.domNode.childNodes,
                      this.domNode
                    );
                    if (index > 0) offset += 1;
                    return [this.parent.domNode, offset];
                  };
                  LeafBlot.prototype.value = function() {
                    var _a;
                    return (
                      (_a = {}),
                      (_a[this.statics.blotName] =
                        this.statics.value(this.domNode) || true),
                      _a
                    );
                  };
                  LeafBlot.scope = Registry.Scope.INLINE_BLOT;
                  return LeafBlot;
                })(shadow_1.default);
                exports.default = LeafBlot;

                /***/
              },
              /* 20 */
              /***/ function(module, exports, __webpack_require__) {
                var equal = __webpack_require__(11);
                var extend = __webpack_require__(3);

                var lib = {
                  attributes: {
                    compose: function(a, b, keepNull) {
                      if (typeof a !== 'object') a = {};
                      if (typeof b !== 'object') b = {};
                      var attributes = extend(true, {}, b);
                      if (!keepNull) {
                        attributes = Object.keys(attributes).reduce(function(
                          copy,
                          key
                        ) {
                          if (attributes[key] != null) {
                            copy[key] = attributes[key];
                          }
                          return copy;
                        },
                        {});
                      }
                      for (var key in a) {
                        if (a[key] !== undefined && b[key] === undefined) {
                          attributes[key] = a[key];
                        }
                      }
                      return Object.keys(attributes).length > 0
                        ? attributes
                        : undefined;
                    },

                    diff: function(a, b) {
                      if (typeof a !== 'object') a = {};
                      if (typeof b !== 'object') b = {};
                      var attributes = Object.keys(a)
                        .concat(Object.keys(b))
                        .reduce(function(attributes, key) {
                          if (!equal(a[key], b[key])) {
                            attributes[key] =
                              b[key] === undefined ? null : b[key];
                          }
                          return attributes;
                        }, {});
                      return Object.keys(attributes).length > 0
                        ? attributes
                        : undefined;
                    },

                    transform: function(a, b, priority) {
                      if (typeof a !== 'object') return b;
                      if (typeof b !== 'object') return undefined;
                      if (!priority) return b; // b simply overwrites us without priority
                      var attributes = Object.keys(b).reduce(function(
                        attributes,
                        key
                      ) {
                        if (a[key] === undefined) attributes[key] = b[key]; // null is a valid value
                        return attributes;
                      },
                      {});
                      return Object.keys(attributes).length > 0
                        ? attributes
                        : undefined;
                    }
                  },

                  iterator: function(ops) {
                    return new Iterator(ops);
                  },

                  length: function(op) {
                    if (typeof op['delete'] === 'number') {
                      return op['delete'];
                    } else if (typeof op.retain === 'number') {
                      return op.retain;
                    } else {
                      return typeof op.insert === 'string'
                        ? op.insert.length
                        : 1;
                    }
                  }
                };

                function Iterator(ops) {
                  this.ops = ops;
                  this.index = 0;
                  this.offset = 0;
                }

                Iterator.prototype.hasNext = function() {
                  return this.peekLength() < Infinity;
                };

                Iterator.prototype.next = function(length) {
                  if (!length) length = Infinity;
                  var nextOp = this.ops[this.index];
                  if (nextOp) {
                    var offset = this.offset;
                    var opLength = lib.length(nextOp);
                    if (length >= opLength - offset) {
                      length = opLength - offset;
                      this.index += 1;
                      this.offset = 0;
                    } else {
                      this.offset += length;
                    }
                    if (typeof nextOp['delete'] === 'number') {
                      return { delete: length };
                    } else {
                      var retOp = {};
                      if (nextOp.attributes) {
                        retOp.attributes = nextOp.attributes;
                      }
                      if (typeof nextOp.retain === 'number') {
                        retOp.retain = length;
                      } else if (typeof nextOp.insert === 'string') {
                        retOp.insert = nextOp.insert.substr(offset, length);
                      } else {
                        // offset should === 0, length should === 1
                        retOp.insert = nextOp.insert;
                      }
                      return retOp;
                    }
                  } else {
                    return { retain: Infinity };
                  }
                };

                Iterator.prototype.peek = function() {
                  return this.ops[this.index];
                };

                Iterator.prototype.peekLength = function() {
                  if (this.ops[this.index]) {
                    // Should never return 0 if our index is being managed correctly
                    return lib.length(this.ops[this.index]) - this.offset;
                  } else {
                    return Infinity;
                  }
                };

                Iterator.prototype.peekType = function() {
                  if (this.ops[this.index]) {
                    if (typeof this.ops[this.index]['delete'] === 'number') {
                      return 'delete';
                    } else if (
                      typeof this.ops[this.index].retain === 'number'
                    ) {
                      return 'retain';
                    } else {
                      return 'insert';
                    }
                  }
                  return 'retain';
                };

                Iterator.prototype.rest = function() {
                  if (!this.hasNext()) {
                    return [];
                  } else if (this.offset === 0) {
                    return this.ops.slice(this.index);
                  } else {
                    var offset = this.offset;
                    var index = this.index;
                    var next = this.next();
                    var rest = this.ops.slice(this.index);
                    this.offset = offset;
                    this.index = index;
                    return [next].concat(rest);
                  }
                };

                module.exports = lib;

                /***/
              },
              /* 21 */
              /***/ function(module, exports) {
                var clone = (function() {
                  'use strict';

                  function _instanceof(obj, type) {
                    return type != null && obj instanceof type;
                  }

                  var nativeMap;
                  try {
                    nativeMap = Map;
                  } catch (_) {
                    // maybe a reference error because no `Map`. Give it a dummy value that no
                    // value will ever be an instanceof.
                    nativeMap = function() {};
                  }

                  var nativeSet;
                  try {
                    nativeSet = Set;
                  } catch (_) {
                    nativeSet = function() {};
                  }

                  var nativePromise;
                  try {
                    nativePromise = Promise;
                  } catch (_) {
                    nativePromise = function() {};
                  }

                  /**
                   * Clones (copies) an Object using deep copying.
                   *
                   * This function supports circular references by default, but if you are certain
                   * there are no circular references in your object, you can save some CPU time
                   * by calling clone(obj, false).
                   *
                   * Caution: if `circular` is false and `parent` contains circular references,
                   * your program may enter an infinite loop and crash.
                   *
                   * @param `parent` - the object to be cloned
                   * @param `circular` - set to true if the object to be cloned may contain
                   *    circular references. (optional - true by default)
                   * @param `depth` - set to a number if the object is only to be cloned to
                   *    a particular depth. (optional - defaults to Infinity)
                   * @param `prototype` - sets the prototype to be used when cloning an object.
                   *    (optional - defaults to parent prototype).
                   * @param `includeNonEnumerable` - set to true if the non-enumerable properties
                   *    should be cloned as well. Non-enumerable properties on the prototype
                   *    chain will be ignored. (optional - false by default)
                   */
                  function clone(
                    parent,
                    circular,
                    depth,
                    prototype,
                    includeNonEnumerable
                  ) {
                    if (typeof circular === 'object') {
                      depth = circular.depth;
                      prototype = circular.prototype;
                      includeNonEnumerable = circular.includeNonEnumerable;
                      circular = circular.circular;
                    }
                    // maintain two arrays for circular references, where corresponding parents
                    // and children have the same index
                    var allParents = [];
                    var allChildren = [];

                    var useBuffer = typeof Buffer != 'undefined';

                    if (typeof circular == 'undefined') circular = true;

                    if (typeof depth == 'undefined') depth = Infinity;

                    // recurse this function so we don't reset allParents and allChildren
                    function _clone(parent, depth) {
                      // cloning null always returns null
                      if (parent === null) return null;

                      if (depth === 0) return parent;

                      var child;
                      var proto;
                      if (typeof parent != 'object') {
                        return parent;
                      }

                      if (_instanceof(parent, nativeMap)) {
                        child = new nativeMap();
                      } else if (_instanceof(parent, nativeSet)) {
                        child = new nativeSet();
                      } else if (_instanceof(parent, nativePromise)) {
                        child = new nativePromise(function(resolve, reject) {
                          parent.then(
                            function(value) {
                              resolve(_clone(value, depth - 1));
                            },
                            function(err) {
                              reject(_clone(err, depth - 1));
                            }
                          );
                        });
                      } else if (clone.__isArray(parent)) {
                        child = [];
                      } else if (clone.__isRegExp(parent)) {
                        child = new RegExp(
                          parent.source,
                          __getRegExpFlags(parent)
                        );
                        if (parent.lastIndex)
                          child.lastIndex = parent.lastIndex;
                      } else if (clone.__isDate(parent)) {
                        child = new Date(parent.getTime());
                      } else if (useBuffer && Buffer.isBuffer(parent)) {
                        if (Buffer.allocUnsafe) {
                          // Node.js >= 4.5.0
                          child = Buffer.allocUnsafe(parent.length);
                        } else {
                          // Older Node.js versions
                          child = new Buffer(parent.length);
                        }
                        parent.copy(child);
                        return child;
                      } else if (_instanceof(parent, Error)) {
                        child = Object.create(parent);
                      } else {
                        if (typeof prototype == 'undefined') {
                          proto = Object.getPrototypeOf(parent);
                          child = Object.create(proto);
                        } else {
                          child = Object.create(prototype);
                          proto = prototype;
                        }
                      }

                      if (circular) {
                        var index = allParents.indexOf(parent);

                        if (index != -1) {
                          return allChildren[index];
                        }
                        allParents.push(parent);
                        allChildren.push(child);
                      }

                      if (_instanceof(parent, nativeMap)) {
                        parent.forEach(function(value, key) {
                          var keyChild = _clone(key, depth - 1);
                          var valueChild = _clone(value, depth - 1);
                          child.set(keyChild, valueChild);
                        });
                      }
                      if (_instanceof(parent, nativeSet)) {
                        parent.forEach(function(value) {
                          var entryChild = _clone(value, depth - 1);
                          child.add(entryChild);
                        });
                      }

                      for (var i in parent) {
                        var attrs;
                        if (proto) {
                          attrs = Object.getOwnPropertyDescriptor(proto, i);
                        }

                        if (attrs && attrs.set == null) {
                          continue;
                        }
                        child[i] = _clone(parent[i], depth - 1);
                      }

                      if (Object.getOwnPropertySymbols) {
                        var symbols = Object.getOwnPropertySymbols(parent);
                        for (var i = 0; i < symbols.length; i++) {
                          // Don't need to worry about cloning a symbol because it is a primitive,
                          // like a number or string.
                          var symbol = symbols[i];
                          var descriptor = Object.getOwnPropertyDescriptor(
                            parent,
                            symbol
                          );
                          if (
                            descriptor &&
                            !descriptor.enumerable &&
                            !includeNonEnumerable
                          ) {
                            continue;
                          }
                          child[symbol] = _clone(parent[symbol], depth - 1);
                          if (!descriptor.enumerable) {
                            Object.defineProperty(child, symbol, {
                              enumerable: false
                            });
                          }
                        }
                      }

                      if (includeNonEnumerable) {
                        var allPropertyNames = Object.getOwnPropertyNames(
                          parent
                        );
                        for (var i = 0; i < allPropertyNames.length; i++) {
                          var propertyName = allPropertyNames[i];
                          var descriptor = Object.getOwnPropertyDescriptor(
                            parent,
                            propertyName
                          );
                          if (descriptor && descriptor.enumerable) {
                            continue;
                          }
                          child[propertyName] = _clone(
                            parent[propertyName],
                            depth - 1
                          );
                          Object.defineProperty(child, propertyName, {
                            enumerable: false
                          });
                        }
                      }

                      return child;
                    }

                    return _clone(parent, depth);
                  }

                  /**
                   * Simple flat clone using prototype, accepts only objects, usefull for property
                   * override on FLAT configuration object (no nested props).
                   *
                   * USE WITH CAUTION! This may not behave as you wish if you do not know how this
                   * works.
                   */
                  clone.clonePrototype = function clonePrototype(parent) {
                    if (parent === null) return null;

                    var c = function() {};
                    c.prototype = parent;
                    return new c();
                  };

                  // private utility functions

                  function __objToStr(o) {
                    return Object.prototype.toString.call(o);
                  }
                  clone.__objToStr = __objToStr;

                  function __isDate(o) {
                    return (
                      typeof o === 'object' && __objToStr(o) === '[object Date]'
                    );
                  }
                  clone.__isDate = __isDate;

                  function __isArray(o) {
                    return (
                      typeof o === 'object' &&
                      __objToStr(o) === '[object Array]'
                    );
                  }
                  clone.__isArray = __isArray;

                  function __isRegExp(o) {
                    return (
                      typeof o === 'object' &&
                      __objToStr(o) === '[object RegExp]'
                    );
                  }
                  clone.__isRegExp = __isRegExp;

                  function __getRegExpFlags(re) {
                    var flags = '';
                    if (re.global) flags += 'g';
                    if (re.ignoreCase) flags += 'i';
                    if (re.multiline) flags += 'm';
                    return flags;
                  }
                  clone.__getRegExpFlags = __getRegExpFlags;

                  return clone;
                })();

                if (typeof module === 'object' && module.exports) {
                  module.exports = clone;
                }

                /***/
              },
              /* 22 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _emitter = __webpack_require__(8);

                var _emitter2 = _interopRequireDefault(_emitter);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                var _break = __webpack_require__(16);

                var _break2 = _interopRequireDefault(_break);

                var _code = __webpack_require__(13);

                var _code2 = _interopRequireDefault(_code);

                var _container = __webpack_require__(25);

                var _container2 = _interopRequireDefault(_container);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                function isLine(blot) {
                  return (
                    blot instanceof _block2.default ||
                    blot instanceof _block.BlockEmbed
                  );
                }

                var Scroll = (function(_Parchment$Scroll) {
                  _inherits(Scroll, _Parchment$Scroll);

                  function Scroll(domNode, config) {
                    _classCallCheck(this, Scroll);

                    var _this = _possibleConstructorReturn(
                      this,
                      (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(
                        this,
                        domNode
                      )
                    );

                    _this.emitter = config.emitter;
                    if (Array.isArray(config.whitelist)) {
                      _this.whitelist = config.whitelist.reduce(function(
                        whitelist,
                        format
                      ) {
                        whitelist[format] = true;
                        return whitelist;
                      },
                      {});
                    }
                    // Some reason fixes composition issues with character languages in Windows/Chrome, Safari
                    _this.domNode.addEventListener(
                      'DOMNodeInserted',
                      function() {}
                    );
                    _this.optimize();
                    _this.enable();
                    return _this;
                  }

                  _createClass(Scroll, [
                    {
                      key: 'batchStart',
                      value: function batchStart() {
                        this.batch = true;
                      }
                    },
                    {
                      key: 'batchEnd',
                      value: function batchEnd() {
                        this.batch = false;
                        this.optimize();
                      }
                    },
                    {
                      key: 'deleteAt',
                      value: function deleteAt(index, length) {
                        var _line = this.line(index),
                          _line2 = _slicedToArray(_line, 2),
                          first = _line2[0],
                          offset = _line2[1];

                        var _line3 = this.line(index + length),
                          _line4 = _slicedToArray(_line3, 1),
                          last = _line4[0];

                        _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'deleteAt',
                          this
                        ).call(this, index, length);
                        if (last != null && first !== last && offset > 0) {
                          if (
                            first instanceof _block.BlockEmbed ||
                            last instanceof _block.BlockEmbed
                          ) {
                            this.optimize();
                            return;
                          }
                          if (first instanceof _code2.default) {
                            var newlineIndex = first.newlineIndex(
                              first.length(),
                              true
                            );
                            if (newlineIndex > -1) {
                              first = first.split(newlineIndex + 1);
                              if (first === last) {
                                this.optimize();
                                return;
                              }
                            }
                          } else if (last instanceof _code2.default) {
                            var _newlineIndex = last.newlineIndex(0);
                            if (_newlineIndex > -1) {
                              last.split(_newlineIndex + 1);
                            }
                          }
                          var ref =
                            last.children.head instanceof _break2.default
                              ? null
                              : last.children.head;
                          first.moveChildren(last, ref);
                          first.remove();
                        }
                        this.optimize();
                      }
                    },
                    {
                      key: 'enable',
                      value: function enable() {
                        var enabled =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : true;

                        this.domNode.setAttribute('contenteditable', enabled);
                      }
                    },
                    {
                      key: 'formatAt',
                      value: function formatAt(index, length, format, value) {
                        if (this.whitelist != null && !this.whitelist[format])
                          return;
                        _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'formatAt',
                          this
                        ).call(this, index, length, format, value);
                        this.optimize();
                      }
                    },
                    {
                      key: 'insertAt',
                      value: function insertAt(index, value, def) {
                        if (
                          def != null &&
                          this.whitelist != null &&
                          !this.whitelist[value]
                        )
                          return;
                        if (index >= this.length()) {
                          if (
                            def == null ||
                            _parchment2.default.query(
                              value,
                              _parchment2.default.Scope.BLOCK
                            ) == null
                          ) {
                            var blot = _parchment2.default.create(
                              this.statics.defaultChild
                            );
                            this.appendChild(blot);
                            if (def == null && value.endsWith('\n')) {
                              value = value.slice(0, -1);
                            }
                            blot.insertAt(0, value, def);
                          } else {
                            var embed = _parchment2.default.create(value, def);
                            this.appendChild(embed);
                          }
                        } else {
                          _get(
                            Scroll.prototype.__proto__ ||
                              Object.getPrototypeOf(Scroll.prototype),
                            'insertAt',
                            this
                          ).call(this, index, value, def);
                        }
                        this.optimize();
                      }
                    },
                    {
                      key: 'insertBefore',
                      value: function insertBefore(blot, ref) {
                        if (
                          blot.statics.scope ===
                          _parchment2.default.Scope.INLINE_BLOT
                        ) {
                          var wrapper = _parchment2.default.create(
                            this.statics.defaultChild
                          );
                          wrapper.appendChild(blot);
                          blot = wrapper;
                        }
                        _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'insertBefore',
                          this
                        ).call(this, blot, ref);
                      }
                    },
                    {
                      key: 'leaf',
                      value: function leaf(index) {
                        return this.path(index).pop() || [null, -1];
                      }
                    },
                    {
                      key: 'line',
                      value: function line(index) {
                        if (index === this.length()) {
                          return this.line(index - 1);
                        }
                        return this.descendant(isLine, index);
                      }
                    },
                    {
                      key: 'lines',
                      value: function lines() {
                        var index =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : 0;
                        var length =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : Number.MAX_VALUE;

                        var getLines = function getLines(blot, index, length) {
                          var lines = [],
                            lengthLeft = length;
                          blot.children.forEachAt(index, length, function(
                            child,
                            index,
                            length
                          ) {
                            if (isLine(child)) {
                              lines.push(child);
                            } else if (
                              child instanceof _parchment2.default.Container
                            ) {
                              lines = lines.concat(
                                getLines(child, index, lengthLeft)
                              );
                            }
                            lengthLeft -= length;
                          });
                          return lines;
                        };
                        return getLines(this, index, length);
                      }
                    },
                    {
                      key: 'optimize',
                      value: function optimize() {
                        var mutations =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : [];
                        var context =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : {};

                        if (this.batch === true) return;
                        _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'optimize',
                          this
                        ).call(this, mutations, context);
                        if (mutations.length > 0) {
                          this.emitter.emit(
                            _emitter2.default.events.SCROLL_OPTIMIZE,
                            mutations,
                            context
                          );
                        }
                      }
                    },
                    {
                      key: 'path',
                      value: function path(index) {
                        return _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'path',
                          this
                        )
                          .call(this, index)
                          .slice(1); // Exclude self
                      }
                    },
                    {
                      key: 'update',
                      value: function update(mutations) {
                        if (this.batch === true) return;
                        var source = _emitter2.default.sources.USER;
                        if (typeof mutations === 'string') {
                          source = mutations;
                        }
                        if (!Array.isArray(mutations)) {
                          mutations = this.observer.takeRecords();
                        }
                        if (mutations.length > 0) {
                          this.emitter.emit(
                            _emitter2.default.events.SCROLL_BEFORE_UPDATE,
                            source,
                            mutations
                          );
                        }
                        _get(
                          Scroll.prototype.__proto__ ||
                            Object.getPrototypeOf(Scroll.prototype),
                          'update',
                          this
                        ).call(this, mutations.concat([])); // pass copy
                        if (mutations.length > 0) {
                          this.emitter.emit(
                            _emitter2.default.events.SCROLL_UPDATE,
                            source,
                            mutations
                          );
                        }
                      }
                    }
                  ]);

                  return Scroll;
                })(_parchment2.default.Scroll);

                Scroll.blotName = 'scroll';
                Scroll.className = 'ql-editor';
                Scroll.tagName = 'DIV';
                Scroll.defaultChild = 'block';
                Scroll.allowedChildren = [
                  _block2.default,
                  _block.BlockEmbed,
                  _container2.default
                ];

                exports.default = Scroll;

                /***/
              },
              /* 23 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.SHORTKEY = exports.default = undefined;

                var _typeof =
                  typeof Symbol === 'function' &&
                  typeof Symbol.iterator === 'symbol'
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === 'function' &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? 'symbol'
                          : typeof obj;
                      };

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _clone = __webpack_require__(21);

                var _clone2 = _interopRequireDefault(_clone);

                var _deepEqual = __webpack_require__(11);

                var _deepEqual2 = _interopRequireDefault(_deepEqual);

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _op = __webpack_require__(20);

                var _op2 = _interopRequireDefault(_op);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var debug = (0, _logger2.default)('quill:keyboard');

                var SHORTKEY = /Mac/i.test(navigator.platform)
                  ? 'metaKey'
                  : 'ctrlKey';

                var Keyboard = (function(_Module) {
                  _inherits(Keyboard, _Module);

                  _createClass(Keyboard, null, [
                    {
                      key: 'match',
                      value: function match(evt, binding) {
                        binding = normalize(binding);
                        if (
                          ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(
                            function(key) {
                              return (
                                !!binding[key] !== evt[key] &&
                                binding[key] !== null
                              );
                            }
                          )
                        ) {
                          return false;
                        }
                        return binding.key === (evt.which || evt.keyCode);
                      }
                    }
                  ]);

                  function Keyboard(quill, options) {
                    _classCallCheck(this, Keyboard);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)
                      ).call(this, quill, options)
                    );

                    _this.bindings = {};
                    Object.keys(_this.options.bindings).forEach(function(name) {
                      if (
                        name === 'list autofill' &&
                        quill.scroll.whitelist != null &&
                        !quill.scroll.whitelist['list']
                      ) {
                        return;
                      }
                      if (_this.options.bindings[name]) {
                        _this.addBinding(_this.options.bindings[name]);
                      }
                    });
                    _this.addBinding(
                      { key: Keyboard.keys.ENTER, shiftKey: null },
                      handleEnter
                    );
                    _this.addBinding(
                      {
                        key: Keyboard.keys.ENTER,
                        metaKey: null,
                        ctrlKey: null,
                        altKey: null
                      },
                      function() {}
                    );
                    if (/Firefox/i.test(navigator.userAgent)) {
                      // Need to handle delete and backspace for Firefox in the general case #1171
                      _this.addBinding(
                        { key: Keyboard.keys.BACKSPACE },
                        { collapsed: true },
                        handleBackspace
                      );
                      _this.addBinding(
                        { key: Keyboard.keys.DELETE },
                        { collapsed: true },
                        handleDelete
                      );
                    } else {
                      _this.addBinding(
                        { key: Keyboard.keys.BACKSPACE },
                        { collapsed: true, prefix: /^.?$/ },
                        handleBackspace
                      );
                      _this.addBinding(
                        { key: Keyboard.keys.DELETE },
                        { collapsed: true, suffix: /^.?$/ },
                        handleDelete
                      );
                    }
                    _this.addBinding(
                      { key: Keyboard.keys.BACKSPACE },
                      { collapsed: false },
                      handleDeleteRange
                    );
                    _this.addBinding(
                      { key: Keyboard.keys.DELETE },
                      { collapsed: false },
                      handleDeleteRange
                    );
                    _this.addBinding(
                      {
                        key: Keyboard.keys.BACKSPACE,
                        altKey: null,
                        ctrlKey: null,
                        metaKey: null,
                        shiftKey: null
                      },
                      { collapsed: true, offset: 0 },
                      handleBackspace
                    );
                    _this.listen();
                    return _this;
                  }

                  _createClass(Keyboard, [
                    {
                      key: 'addBinding',
                      value: function addBinding(key) {
                        var context =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : {};
                        var handler =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : {};

                        var binding = normalize(key);
                        if (binding == null || binding.key == null) {
                          return debug.warn(
                            'Attempted to add invalid keyboard binding',
                            binding
                          );
                        }
                        if (typeof context === 'function') {
                          context = { handler: context };
                        }
                        if (typeof handler === 'function') {
                          handler = { handler: handler };
                        }
                        binding = (0, _extend2.default)(
                          binding,
                          context,
                          handler
                        );
                        this.bindings[binding.key] =
                          this.bindings[binding.key] || [];
                        this.bindings[binding.key].push(binding);
                      }
                    },
                    {
                      key: 'listen',
                      value: function listen() {
                        var _this2 = this;

                        this.quill.root.addEventListener('keydown', function(
                          evt
                        ) {
                          if (evt.defaultPrevented) return;
                          var which = evt.which || evt.keyCode;
                          var bindings = (_this2.bindings[which] || []).filter(
                            function(binding) {
                              return Keyboard.match(evt, binding);
                            }
                          );
                          if (bindings.length === 0) return;
                          var range = _this2.quill.getSelection();
                          if (range == null || !_this2.quill.hasFocus()) return;

                          var _quill$getLine = _this2.quill.getLine(
                              range.index
                            ),
                            _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
                            line = _quill$getLine2[0],
                            offset = _quill$getLine2[1];

                          var _quill$getLeaf = _this2.quill.getLeaf(
                              range.index
                            ),
                            _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
                            leafStart = _quill$getLeaf2[0],
                            offsetStart = _quill$getLeaf2[1];

                          var _ref =
                              range.length === 0
                                ? [leafStart, offsetStart]
                                : _this2.quill.getLeaf(
                                    range.index + range.length
                                  ),
                            _ref2 = _slicedToArray(_ref, 2),
                            leafEnd = _ref2[0],
                            offsetEnd = _ref2[1];

                          var prefixText =
                            leafStart instanceof _parchment2.default.Text
                              ? leafStart.value().slice(0, offsetStart)
                              : '';
                          var suffixText =
                            leafEnd instanceof _parchment2.default.Text
                              ? leafEnd.value().slice(offsetEnd)
                              : '';
                          var curContext = {
                            collapsed: range.length === 0,
                            empty: range.length === 0 && line.length() <= 1,
                            format: _this2.quill.getFormat(range),
                            offset: offset,
                            prefix: prefixText,
                            suffix: suffixText
                          };
                          var prevented = bindings.some(function(binding) {
                            if (
                              binding.collapsed != null &&
                              binding.collapsed !== curContext.collapsed
                            )
                              return false;
                            if (
                              binding.empty != null &&
                              binding.empty !== curContext.empty
                            )
                              return false;
                            if (
                              binding.offset != null &&
                              binding.offset !== curContext.offset
                            )
                              return false;
                            if (Array.isArray(binding.format)) {
                              // any format is present
                              if (
                                binding.format.every(function(name) {
                                  return curContext.format[name] == null;
                                })
                              ) {
                                return false;
                              }
                            } else if (_typeof(binding.format) === 'object') {
                              // all formats must match
                              if (
                                !Object.keys(binding.format).every(function(
                                  name
                                ) {
                                  if (binding.format[name] === true)
                                    return curContext.format[name] != null;
                                  if (binding.format[name] === false)
                                    return curContext.format[name] == null;
                                  return (0, _deepEqual2.default)(
                                    binding.format[name],
                                    curContext.format[name]
                                  );
                                })
                              ) {
                                return false;
                              }
                            }
                            if (
                              binding.prefix != null &&
                              !binding.prefix.test(curContext.prefix)
                            )
                              return false;
                            if (
                              binding.suffix != null &&
                              !binding.suffix.test(curContext.suffix)
                            )
                              return false;
                            return (
                              binding.handler.call(
                                _this2,
                                range,
                                curContext
                              ) !== true
                            );
                          });
                          if (prevented) {
                            evt.preventDefault();
                          }
                        });
                      }
                    }
                  ]);

                  return Keyboard;
                })(_module2.default);

                Keyboard.keys = {
                  BACKSPACE: 8,
                  TAB: 9,
                  ENTER: 13,
                  ESCAPE: 27,
                  LEFT: 37,
                  UP: 38,
                  RIGHT: 39,
                  DOWN: 40,
                  DELETE: 46
                };

                Keyboard.DEFAULTS = {
                  bindings: {
                    bold: makeFormatHandler('bold'),
                    italic: makeFormatHandler('italic'),
                    underline: makeFormatHandler('underline'),
                    indent: {
                      // highlight tab or tab at beginning of list, indent or blockquote
                      key: Keyboard.keys.TAB,
                      format: ['blockquote', 'indent', 'list'],
                      handler: function handler(range, context) {
                        if (context.collapsed && context.offset !== 0)
                          return true;
                        this.quill.format(
                          'indent',
                          '+1',
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    outdent: {
                      key: Keyboard.keys.TAB,
                      shiftKey: true,
                      format: ['blockquote', 'indent', 'list'],
                      // highlight tab or tab at beginning of list, indent or blockquote
                      handler: function handler(range, context) {
                        if (context.collapsed && context.offset !== 0)
                          return true;
                        this.quill.format(
                          'indent',
                          '-1',
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    'outdent backspace': {
                      key: Keyboard.keys.BACKSPACE,
                      collapsed: true,
                      shiftKey: null,
                      metaKey: null,
                      ctrlKey: null,
                      altKey: null,
                      format: ['indent', 'list'],
                      offset: 0,
                      handler: function handler(range, context) {
                        if (context.format.indent != null) {
                          this.quill.format(
                            'indent',
                            '-1',
                            _quill2.default.sources.USER
                          );
                        } else if (context.format.list != null) {
                          this.quill.format(
                            'list',
                            false,
                            _quill2.default.sources.USER
                          );
                        }
                      }
                    },
                    'indent code-block': makeCodeBlockHandler(true),
                    'outdent code-block': makeCodeBlockHandler(false),
                    'remove tab': {
                      key: Keyboard.keys.TAB,
                      shiftKey: true,
                      collapsed: true,
                      prefix: /\t$/,
                      handler: function handler(range) {
                        this.quill.deleteText(
                          range.index - 1,
                          1,
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    tab: {
                      key: Keyboard.keys.TAB,
                      handler: function handler(range) {
                        this.quill.history.cutoff();
                        var delta = new _quillDelta2.default()
                          .retain(range.index)
                          .delete(range.length)
                          .insert('\t');
                        this.quill.updateContents(
                          delta,
                          _quill2.default.sources.USER
                        );
                        this.quill.history.cutoff();
                        this.quill.setSelection(
                          range.index + 1,
                          _quill2.default.sources.SILENT
                        );
                      }
                    },
                    'list empty enter': {
                      key: Keyboard.keys.ENTER,
                      collapsed: true,
                      format: ['list'],
                      empty: true,
                      handler: function handler(range, context) {
                        this.quill.format(
                          'list',
                          false,
                          _quill2.default.sources.USER
                        );
                        if (context.format.indent) {
                          this.quill.format(
                            'indent',
                            false,
                            _quill2.default.sources.USER
                          );
                        }
                      }
                    },
                    'checklist enter': {
                      key: Keyboard.keys.ENTER,
                      collapsed: true,
                      format: { list: 'checked' },
                      handler: function handler(range) {
                        var _quill$getLine3 = this.quill.getLine(range.index),
                          _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
                          line = _quill$getLine4[0],
                          offset = _quill$getLine4[1];

                        var formats = (0, _extend2.default)(
                          {},
                          line.formats(),
                          { list: 'checked' }
                        );
                        var delta = new _quillDelta2.default()
                          .retain(range.index)
                          .insert('\n', formats)
                          .retain(line.length() - offset - 1)
                          .retain(1, { list: 'unchecked' });
                        this.quill.updateContents(
                          delta,
                          _quill2.default.sources.USER
                        );
                        this.quill.setSelection(
                          range.index + 1,
                          _quill2.default.sources.SILENT
                        );
                        this.quill.scrollIntoView();
                      }
                    },
                    'header enter': {
                      key: Keyboard.keys.ENTER,
                      collapsed: true,
                      format: ['header'],
                      suffix: /^$/,
                      handler: function handler(range, context) {
                        var _quill$getLine5 = this.quill.getLine(range.index),
                          _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
                          line = _quill$getLine6[0],
                          offset = _quill$getLine6[1];

                        var delta = new _quillDelta2.default()
                          .retain(range.index)
                          .insert('\n', context.format)
                          .retain(line.length() - offset - 1)
                          .retain(1, { header: null });
                        this.quill.updateContents(
                          delta,
                          _quill2.default.sources.USER
                        );
                        this.quill.setSelection(
                          range.index + 1,
                          _quill2.default.sources.SILENT
                        );
                        this.quill.scrollIntoView();
                      }
                    },
                    'list autofill': {
                      key: ' ',
                      collapsed: true,
                      format: { list: false },
                      prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
                      handler: function handler(range, context) {
                        var length = context.prefix.length;

                        var _quill$getLine7 = this.quill.getLine(range.index),
                          _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
                          line = _quill$getLine8[0],
                          offset = _quill$getLine8[1];

                        if (offset > length) return true;
                        var value = void 0;
                        switch (context.prefix.trim()) {
                          case '[]':
                          case '[ ]':
                            value = 'unchecked';
                            break;
                          case '[x]':
                            value = 'checked';
                            break;
                          case '-':
                          case '*':
                            value = 'bullet';
                            break;
                          default:
                            value = 'ordered';
                        }
                        this.quill.insertText(
                          range.index,
                          ' ',
                          _quill2.default.sources.USER
                        );
                        this.quill.history.cutoff();
                        var delta = new _quillDelta2.default()
                          .retain(range.index - offset)
                          .delete(length + 1)
                          .retain(line.length() - 2 - offset)
                          .retain(1, { list: value });
                        this.quill.updateContents(
                          delta,
                          _quill2.default.sources.USER
                        );
                        this.quill.history.cutoff();
                        this.quill.setSelection(
                          range.index - length,
                          _quill2.default.sources.SILENT
                        );
                      }
                    },
                    'code exit': {
                      key: Keyboard.keys.ENTER,
                      collapsed: true,
                      format: ['code-block'],
                      prefix: /\n\n$/,
                      suffix: /^\s+$/,
                      handler: function handler(range) {
                        var _quill$getLine9 = this.quill.getLine(range.index),
                          _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
                          line = _quill$getLine10[0],
                          offset = _quill$getLine10[1];

                        var delta = new _quillDelta2.default()
                          .retain(range.index + line.length() - offset - 2)
                          .retain(1, { 'code-block': null })
                          .delete(1);
                        this.quill.updateContents(
                          delta,
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    'embed left': makeEmbedArrowHandler(
                      Keyboard.keys.LEFT,
                      false
                    ),
                    'embed left shift': makeEmbedArrowHandler(
                      Keyboard.keys.LEFT,
                      true
                    ),
                    'embed right': makeEmbedArrowHandler(
                      Keyboard.keys.RIGHT,
                      false
                    ),
                    'embed right shift': makeEmbedArrowHandler(
                      Keyboard.keys.RIGHT,
                      true
                    )
                  }
                };

                function makeEmbedArrowHandler(key, shiftKey) {
                  var _ref3;

                  var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
                  return (
                    (_ref3 = {
                      key: key,
                      shiftKey: shiftKey,
                      altKey: null
                    }),
                    _defineProperty(_ref3, where, /^$/),
                    _defineProperty(_ref3, 'handler', function handler(range) {
                      var index = range.index;
                      if (key === Keyboard.keys.RIGHT) {
                        index += range.length + 1;
                      }

                      var _quill$getLeaf3 = this.quill.getLeaf(index),
                        _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
                        leaf = _quill$getLeaf4[0];

                      if (!(leaf instanceof _parchment2.default.Embed))
                        return true;
                      if (key === Keyboard.keys.LEFT) {
                        if (shiftKey) {
                          this.quill.setSelection(
                            range.index - 1,
                            range.length + 1,
                            _quill2.default.sources.USER
                          );
                        } else {
                          this.quill.setSelection(
                            range.index - 1,
                            _quill2.default.sources.USER
                          );
                        }
                      } else {
                        if (shiftKey) {
                          this.quill.setSelection(
                            range.index,
                            range.length + 1,
                            _quill2.default.sources.USER
                          );
                        } else {
                          this.quill.setSelection(
                            range.index + range.length + 1,
                            _quill2.default.sources.USER
                          );
                        }
                      }
                      return false;
                    }),
                    _ref3
                  );
                }

                function handleBackspace(range, context) {
                  if (range.index === 0 || this.quill.getLength() <= 1) return;

                  var _quill$getLine11 = this.quill.getLine(range.index),
                    _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
                    line = _quill$getLine12[0];

                  var formats = {};
                  if (context.offset === 0) {
                    var _quill$getLine13 = this.quill.getLine(range.index - 1),
                      _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
                      prev = _quill$getLine14[0];

                    if (prev != null && prev.length() > 1) {
                      var curFormats = line.formats();
                      var prevFormats = this.quill.getFormat(
                        range.index - 1,
                        1
                      );
                      formats =
                        _op2.default.attributes.diff(curFormats, prevFormats) ||
                        {};
                    }
                  }
                  // Check for astral symbols
                  var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(
                    context.prefix
                  )
                    ? 2
                    : 1;
                  this.quill.deleteText(
                    range.index - length,
                    length,
                    _quill2.default.sources.USER
                  );
                  if (Object.keys(formats).length > 0) {
                    this.quill.formatLine(
                      range.index - length,
                      length,
                      formats,
                      _quill2.default.sources.USER
                    );
                  }
                  this.quill.focus();
                }

                function handleDelete(range, context) {
                  // Check for astral symbols
                  var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(
                    context.suffix
                  )
                    ? 2
                    : 1;
                  if (range.index >= this.quill.getLength() - length) return;
                  var formats = {},
                    nextLength = 0;

                  var _quill$getLine15 = this.quill.getLine(range.index),
                    _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
                    line = _quill$getLine16[0];

                  if (context.offset >= line.length() - 1) {
                    var _quill$getLine17 = this.quill.getLine(range.index + 1),
                      _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
                      next = _quill$getLine18[0];

                    if (next) {
                      var curFormats = line.formats();
                      var nextFormats = this.quill.getFormat(range.index, 1);
                      formats =
                        _op2.default.attributes.diff(curFormats, nextFormats) ||
                        {};
                      nextLength = next.length();
                    }
                  }
                  this.quill.deleteText(
                    range.index,
                    length,
                    _quill2.default.sources.USER
                  );
                  if (Object.keys(formats).length > 0) {
                    this.quill.formatLine(
                      range.index + nextLength - 1,
                      length,
                      formats,
                      _quill2.default.sources.USER
                    );
                  }
                }

                function handleDeleteRange(range) {
                  var lines = this.quill.getLines(range);
                  var formats = {};
                  if (lines.length > 1) {
                    var firstFormats = lines[0].formats();
                    var lastFormats = lines[lines.length - 1].formats();
                    formats =
                      _op2.default.attributes.diff(lastFormats, firstFormats) ||
                      {};
                  }
                  this.quill.deleteText(range, _quill2.default.sources.USER);
                  if (Object.keys(formats).length > 0) {
                    this.quill.formatLine(
                      range.index,
                      1,
                      formats,
                      _quill2.default.sources.USER
                    );
                  }
                  this.quill.setSelection(
                    range.index,
                    _quill2.default.sources.SILENT
                  );
                  this.quill.focus();
                }

                function handleEnter(range, context) {
                  var _this3 = this;

                  if (range.length > 0) {
                    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change
                  }
                  var lineFormats = Object.keys(context.format).reduce(function(
                    lineFormats,
                    format
                  ) {
                    if (
                      _parchment2.default.query(
                        format,
                        _parchment2.default.Scope.BLOCK
                      ) &&
                      !Array.isArray(context.format[format])
                    ) {
                      lineFormats[format] = context.format[format];
                    }
                    return lineFormats;
                  },
                  {});
                  this.quill.insertText(
                    range.index,
                    '\n',
                    lineFormats,
                    _quill2.default.sources.USER
                  );
                  // Earlier scroll.deleteAt might have messed up our selection,
                  // so insertText's built in selection preservation is not reliable
                  this.quill.setSelection(
                    range.index + 1,
                    _quill2.default.sources.SILENT
                  );
                  this.quill.focus();
                  Object.keys(context.format).forEach(function(name) {
                    if (lineFormats[name] != null) return;
                    if (Array.isArray(context.format[name])) return;
                    if (name === 'link') return;
                    _this3.quill.format(
                      name,
                      context.format[name],
                      _quill2.default.sources.USER
                    );
                  });
                }

                function makeCodeBlockHandler(indent) {
                  return {
                    key: Keyboard.keys.TAB,
                    shiftKey: !indent,
                    format: { 'code-block': true },
                    handler: function handler(range) {
                      var CodeBlock = _parchment2.default.query('code-block');
                      var index = range.index,
                        length = range.length;

                      var _quill$scroll$descend = this.quill.scroll.descendant(
                          CodeBlock,
                          index
                        ),
                        _quill$scroll$descend2 = _slicedToArray(
                          _quill$scroll$descend,
                          2
                        ),
                        block = _quill$scroll$descend2[0],
                        offset = _quill$scroll$descend2[1];

                      if (block == null) return;
                      var scrollIndex = this.quill.getIndex(block);
                      var start = block.newlineIndex(offset, true) + 1;
                      var end = block.newlineIndex(
                        scrollIndex + offset + length
                      );
                      var lines = block.domNode.textContent
                        .slice(start, end)
                        .split('\n');
                      offset = 0;
                      lines.forEach(function(line, i) {
                        if (indent) {
                          block.insertAt(start + offset, CodeBlock.TAB);
                          offset += CodeBlock.TAB.length;
                          if (i === 0) {
                            index += CodeBlock.TAB.length;
                          } else {
                            length += CodeBlock.TAB.length;
                          }
                        } else if (line.startsWith(CodeBlock.TAB)) {
                          block.deleteAt(start + offset, CodeBlock.TAB.length);
                          offset -= CodeBlock.TAB.length;
                          if (i === 0) {
                            index -= CodeBlock.TAB.length;
                          } else {
                            length -= CodeBlock.TAB.length;
                          }
                        }
                        offset += line.length + 1;
                      });
                      this.quill.update(_quill2.default.sources.USER);
                      this.quill.setSelection(
                        index,
                        length,
                        _quill2.default.sources.SILENT
                      );
                    }
                  };
                }

                function makeFormatHandler(format) {
                  return {
                    key: format[0].toUpperCase(),
                    shortKey: true,
                    handler: function handler(range, context) {
                      this.quill.format(
                        format,
                        !context.format[format],
                        _quill2.default.sources.USER
                      );
                    }
                  };
                }

                function normalize(binding) {
                  if (
                    typeof binding === 'string' ||
                    typeof binding === 'number'
                  ) {
                    return normalize({ key: binding });
                  }
                  if (
                    (typeof binding === 'undefined'
                      ? 'undefined'
                      : _typeof(binding)) === 'object'
                  ) {
                    binding = (0, _clone2.default)(binding, false);
                  }
                  if (typeof binding.key === 'string') {
                    if (Keyboard.keys[binding.key.toUpperCase()] != null) {
                      binding.key = Keyboard.keys[binding.key.toUpperCase()];
                    } else if (binding.key.length === 1) {
                      binding.key = binding.key.toUpperCase().charCodeAt(0);
                    } else {
                      return null;
                    }
                  }
                  if (binding.shortKey) {
                    binding[SHORTKEY] = binding.shortKey;
                    delete binding.shortKey;
                  }
                  return binding;
                }

                exports.default = Keyboard;
                exports.SHORTKEY = SHORTKEY;

                /***/
              },
              /* 24 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Cursor = (function(_Parchment$Embed) {
                  _inherits(Cursor, _Parchment$Embed);

                  _createClass(Cursor, null, [
                    {
                      key: 'value',
                      value: function value() {
                        return undefined;
                      }
                    }
                  ]);

                  function Cursor(domNode, selection) {
                    _classCallCheck(this, Cursor);

                    var _this = _possibleConstructorReturn(
                      this,
                      (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(
                        this,
                        domNode
                      )
                    );

                    _this.selection = selection;
                    _this.textNode = document.createTextNode(Cursor.CONTENTS);
                    _this.domNode.appendChild(_this.textNode);
                    _this._length = 0;
                    return _this;
                  }

                  _createClass(Cursor, [
                    {
                      key: 'detach',
                      value: function detach() {
                        // super.detach() will also clear domNode.__blot
                        if (this.parent != null) this.parent.removeChild(this);
                      }
                    },
                    {
                      key: 'format',
                      value: function format(name, value) {
                        if (this._length !== 0) {
                          return _get(
                            Cursor.prototype.__proto__ ||
                              Object.getPrototypeOf(Cursor.prototype),
                            'format',
                            this
                          ).call(this, name, value);
                        }
                        var target = this,
                          index = 0;
                        while (
                          target != null &&
                          target.statics.scope !==
                            _parchment2.default.Scope.BLOCK_BLOT
                        ) {
                          index += target.offset(target.parent);
                          target = target.parent;
                        }
                        if (target != null) {
                          this._length = Cursor.CONTENTS.length;
                          target.optimize();
                          target.formatAt(
                            index,
                            Cursor.CONTENTS.length,
                            name,
                            value
                          );
                          this._length = 0;
                        }
                      }
                    },
                    {
                      key: 'index',
                      value: function index(node, offset) {
                        if (node === this.textNode) return 0;
                        return _get(
                          Cursor.prototype.__proto__ ||
                            Object.getPrototypeOf(Cursor.prototype),
                          'index',
                          this
                        ).call(this, node, offset);
                      }
                    },
                    {
                      key: 'length',
                      value: function length() {
                        return this._length;
                      }
                    },
                    {
                      key: 'position',
                      value: function position() {
                        return [this.textNode, this.textNode.data.length];
                      }
                    },
                    {
                      key: 'remove',
                      value: function remove() {
                        _get(
                          Cursor.prototype.__proto__ ||
                            Object.getPrototypeOf(Cursor.prototype),
                          'remove',
                          this
                        ).call(this);
                        this.parent = null;
                      }
                    },
                    {
                      key: 'restore',
                      value: function restore() {
                        if (this.selection.composing || this.parent == null)
                          return;
                        var textNode = this.textNode;
                        var range = this.selection.getNativeRange();
                        var restoreText = void 0,
                          start = void 0,
                          end = void 0;
                        if (
                          range != null &&
                          range.start.node === textNode &&
                          range.end.node === textNode
                        ) {
                          var _ref = [
                            textNode,
                            range.start.offset,
                            range.end.offset
                          ];
                          restoreText = _ref[0];
                          start = _ref[1];
                          end = _ref[2];
                        }
                        // Link format will insert text outside of anchor tag
                        while (
                          this.domNode.lastChild != null &&
                          this.domNode.lastChild !== this.textNode
                        ) {
                          this.domNode.parentNode.insertBefore(
                            this.domNode.lastChild,
                            this.domNode
                          );
                        }
                        if (this.textNode.data !== Cursor.CONTENTS) {
                          var text = this.textNode.data
                            .split(Cursor.CONTENTS)
                            .join('');
                          if (this.next instanceof _text2.default) {
                            restoreText = this.next.domNode;
                            this.next.insertAt(0, text);
                            this.textNode.data = Cursor.CONTENTS;
                          } else {
                            this.textNode.data = text;
                            this.parent.insertBefore(
                              _parchment2.default.create(this.textNode),
                              this
                            );
                            this.textNode = document.createTextNode(
                              Cursor.CONTENTS
                            );
                            this.domNode.appendChild(this.textNode);
                          }
                        }
                        this.remove();
                        if (start != null) {
                          var _map = [start, end].map(function(offset) {
                            return Math.max(
                              0,
                              Math.min(restoreText.data.length, offset - 1)
                            );
                          });

                          var _map2 = _slicedToArray(_map, 2);

                          start = _map2[0];
                          end = _map2[1];

                          return {
                            startNode: restoreText,
                            startOffset: start,
                            endNode: restoreText,
                            endOffset: end
                          };
                        }
                      }
                    },
                    {
                      key: 'update',
                      value: function update(mutations, context) {
                        var _this2 = this;

                        if (
                          mutations.some(function(mutation) {
                            return (
                              mutation.type === 'characterData' &&
                              mutation.target === _this2.textNode
                            );
                          })
                        ) {
                          var range = this.restore();
                          if (range) context.range = range;
                        }
                      }
                    },
                    {
                      key: 'value',
                      value: function value() {
                        return '';
                      }
                    }
                  ]);

                  return Cursor;
                })(_parchment2.default.Embed);

                Cursor.blotName = 'cursor';
                Cursor.className = 'ql-cursor';
                Cursor.tagName = 'span';
                Cursor.CONTENTS = '\uFEFF'; // Zero width no break space

                exports.default = Cursor;

                /***/
              },
              /* 25 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Container = (function(_Parchment$Container) {
                  _inherits(Container, _Parchment$Container);

                  function Container() {
                    _classCallCheck(this, Container);

                    return _possibleConstructorReturn(
                      this,
                      (
                        Container.__proto__ || Object.getPrototypeOf(Container)
                      ).apply(this, arguments)
                    );
                  }

                  return Container;
                })(_parchment2.default.Container);

                Container.allowedChildren = [
                  _block2.default,
                  _block.BlockEmbed,
                  Container
                ];

                exports.default = Container;

                /***/
              },
              /* 26 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ColorAttributor = (function(_Parchment$Attributor) {
                  _inherits(ColorAttributor, _Parchment$Attributor);

                  function ColorAttributor() {
                    _classCallCheck(this, ColorAttributor);

                    return _possibleConstructorReturn(
                      this,
                      (
                        ColorAttributor.__proto__ ||
                        Object.getPrototypeOf(ColorAttributor)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(ColorAttributor, [
                    {
                      key: 'value',
                      value: function value(domNode) {
                        var value = _get(
                          ColorAttributor.prototype.__proto__ ||
                            Object.getPrototypeOf(ColorAttributor.prototype),
                          'value',
                          this
                        ).call(this, domNode);
                        if (!value.startsWith('rgb(')) return value;
                        value = value
                          .replace(/^[^\d]+/, '')
                          .replace(/[^\d]+$/, '');
                        return (
                          '#' +
                          value
                            .split(',')
                            .map(function(component) {
                              return (
                                '00' + parseInt(component).toString(16)
                              ).slice(-2);
                            })
                            .join('')
                        );
                      }
                    }
                  ]);

                  return ColorAttributor;
                })(_parchment2.default.Attributor.Style);

                var ColorClass = new _parchment2.default.Attributor.Class(
                  'color',
                  'ql-color',
                  {
                    scope: _parchment2.default.Scope.INLINE
                  }
                );
                var ColorStyle = new ColorAttributor('color', 'color', {
                  scope: _parchment2.default.Scope.INLINE
                });

                exports.ColorAttributor = ColorAttributor;
                exports.ColorClass = ColorClass;
                exports.ColorStyle = ColorStyle;

                /***/
              },
              /* 27 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.sanitize = exports.default = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Link = (function(_Inline) {
                  _inherits(Link, _Inline);

                  function Link() {
                    _classCallCheck(this, Link);

                    return _possibleConstructorReturn(
                      this,
                      (Link.__proto__ || Object.getPrototypeOf(Link)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Link,
                    [
                      {
                        key: 'format',
                        value: function format(name, value) {
                          if (name !== this.statics.blotName || !value)
                            return _get(
                              Link.prototype.__proto__ ||
                                Object.getPrototypeOf(Link.prototype),
                              'format',
                              this
                            ).call(this, name, value);
                          value = this.constructor.sanitize(value);
                          this.domNode.setAttribute('href', value);
                        }
                      }
                    ],
                    [
                      {
                        key: 'create',
                        value: function create(value) {
                          var node = _get(
                            Link.__proto__ || Object.getPrototypeOf(Link),
                            'create',
                            this
                          ).call(this, value);
                          value = this.sanitize(value);
                          node.setAttribute('href', value);
                          node.setAttribute('rel', 'noopener noreferrer');
                          node.setAttribute('target', '_blank');
                          return node;
                        }
                      },
                      {
                        key: 'formats',
                        value: function formats(domNode) {
                          return domNode.getAttribute('href');
                        }
                      },
                      {
                        key: 'sanitize',
                        value: function sanitize(url) {
                          return _sanitize(url, this.PROTOCOL_WHITELIST)
                            ? url
                            : this.SANITIZED_URL;
                        }
                      }
                    ]
                  );

                  return Link;
                })(_inline2.default);

                Link.blotName = 'link';
                Link.tagName = 'A';
                Link.SANITIZED_URL = 'about:blank';
                Link.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];

                function _sanitize(url, protocols) {
                  var anchor = document.createElement('a');
                  anchor.href = url;
                  var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
                  return protocols.indexOf(protocol) > -1;
                }

                exports.default = Link;
                exports.sanitize = _sanitize;

                /***/
              },
              /* 28 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _typeof =
                  typeof Symbol === 'function' &&
                  typeof Symbol.iterator === 'symbol'
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === 'function' &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? 'symbol'
                          : typeof obj;
                      };

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _keyboard = __webpack_require__(23);

                var _keyboard2 = _interopRequireDefault(_keyboard);

                var _dropdown = __webpack_require__(107);

                var _dropdown2 = _interopRequireDefault(_dropdown);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var optionsCounter = 0;

                function toggleAriaAttribute(element, attribute) {
                  element.setAttribute(
                    attribute,
                    !(element.getAttribute(attribute) === 'true')
                  );
                }

                var Picker = (function() {
                  function Picker(select) {
                    var _this = this;

                    _classCallCheck(this, Picker);

                    this.select = select;
                    this.container = document.createElement('span');
                    this.buildPicker();
                    this.select.style.display = 'none';
                    this.select.parentNode.insertBefore(
                      this.container,
                      this.select
                    );

                    this.label.addEventListener('mousedown', function() {
                      _this.togglePicker();
                    });
                    this.label.addEventListener('keydown', function(event) {
                      switch (event.keyCode) {
                        // Allows the "Enter" key to open the picker
                        case _keyboard2.default.keys.ENTER:
                          _this.togglePicker();
                          break;

                        // Allows the "Escape" key to close the picker
                        case _keyboard2.default.keys.ESCAPE:
                          _this.escape();
                          event.preventDefault();
                          break;
                        default:
                      }
                    });
                    this.select.addEventListener(
                      'change',
                      this.update.bind(this)
                    );
                  }

                  _createClass(Picker, [
                    {
                      key: 'togglePicker',
                      value: function togglePicker() {
                        this.container.classList.toggle('ql-expanded');
                        // Toggle aria-expanded and aria-hidden to make the picker accessible
                        toggleAriaAttribute(this.label, 'aria-expanded');
                        toggleAriaAttribute(this.options, 'aria-hidden');
                      }
                    },
                    {
                      key: 'buildItem',
                      value: function buildItem(option) {
                        var _this2 = this;

                        var item = document.createElement('span');
                        item.tabIndex = '0';
                        item.setAttribute('role', 'button');

                        item.classList.add('ql-picker-item');
                        if (option.hasAttribute('value')) {
                          item.setAttribute(
                            'data-value',
                            option.getAttribute('value')
                          );
                        }
                        if (option.textContent) {
                          item.setAttribute('data-label', option.textContent);
                        }
                        item.addEventListener('click', function() {
                          _this2.selectItem(item, true);
                        });
                        item.addEventListener('keydown', function(event) {
                          switch (event.keyCode) {
                            // Allows the "Enter" key to select an item
                            case _keyboard2.default.keys.ENTER:
                              _this2.selectItem(item, true);
                              event.preventDefault();
                              break;

                            // Allows the "Escape" key to close the picker
                            case _keyboard2.default.keys.ESCAPE:
                              _this2.escape();
                              event.preventDefault();
                              break;
                            default:
                          }
                        });

                        return item;
                      }
                    },
                    {
                      key: 'buildLabel',
                      value: function buildLabel() {
                        var label = document.createElement('span');
                        label.classList.add('ql-picker-label');
                        label.innerHTML = _dropdown2.default;
                        label.tabIndex = '0';
                        label.setAttribute('role', 'button');
                        label.setAttribute('aria-expanded', 'false');
                        this.container.appendChild(label);
                        return label;
                      }
                    },
                    {
                      key: 'buildOptions',
                      value: function buildOptions() {
                        var _this3 = this;

                        var options = document.createElement('span');
                        options.classList.add('ql-picker-options');

                        // Don't want screen readers to read this until options are visible
                        options.setAttribute('aria-hidden', 'true');
                        options.tabIndex = '-1';

                        // Need a unique id for aria-controls
                        options.id = 'ql-picker-options-' + optionsCounter;
                        optionsCounter += 1;
                        this.label.setAttribute('aria-controls', options.id);

                        this.options = options;

                        [].slice
                          .call(this.select.options)
                          .forEach(function(option) {
                            var item = _this3.buildItem(option);
                            options.appendChild(item);
                            if (option.selected === true) {
                              _this3.selectItem(item);
                            }
                          });
                        this.container.appendChild(options);
                      }
                    },
                    {
                      key: 'buildPicker',
                      value: function buildPicker() {
                        var _this4 = this;

                        [].slice
                          .call(this.select.attributes)
                          .forEach(function(item) {
                            _this4.container.setAttribute(
                              item.name,
                              item.value
                            );
                          });
                        this.container.classList.add('ql-picker');
                        this.label = this.buildLabel();
                        this.buildOptions();
                      }
                    },
                    {
                      key: 'escape',
                      value: function escape() {
                        var _this5 = this;

                        // Close menu and return focus to trigger label
                        this.close();
                        // Need setTimeout for accessibility to ensure that the browser executes
                        // focus on the next process thread and after any DOM content changes
                        setTimeout(function() {
                          return _this5.label.focus();
                        }, 1);
                      }
                    },
                    {
                      key: 'close',
                      value: function close() {
                        this.container.classList.remove('ql-expanded');
                        this.label.setAttribute('aria-expanded', 'false');
                        this.options.setAttribute('aria-hidden', 'true');
                      }
                    },
                    {
                      key: 'selectItem',
                      value: function selectItem(item) {
                        var trigger =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : false;

                        var selected = this.container.querySelector(
                          '.ql-selected'
                        );
                        if (item === selected) return;
                        if (selected != null) {
                          selected.classList.remove('ql-selected');
                        }
                        if (item == null) return;
                        item.classList.add('ql-selected');
                        this.select.selectedIndex = [].indexOf.call(
                          item.parentNode.children,
                          item
                        );
                        if (item.hasAttribute('data-value')) {
                          this.label.setAttribute(
                            'data-value',
                            item.getAttribute('data-value')
                          );
                        } else {
                          this.label.removeAttribute('data-value');
                        }
                        if (item.hasAttribute('data-label')) {
                          this.label.setAttribute(
                            'data-label',
                            item.getAttribute('data-label')
                          );
                        } else {
                          this.label.removeAttribute('data-label');
                        }
                        if (trigger) {
                          if (typeof Event === 'function') {
                            this.select.dispatchEvent(new Event('change'));
                          } else if (
                            (typeof Event === 'undefined'
                              ? 'undefined'
                              : _typeof(Event)) === 'object'
                          ) {
                            // IE11
                            var event = document.createEvent('Event');
                            event.initEvent('change', true, true);
                            this.select.dispatchEvent(event);
                          }
                          this.close();
                        }
                      }
                    },
                    {
                      key: 'update',
                      value: function update() {
                        var option = void 0;
                        if (this.select.selectedIndex > -1) {
                          var item = this.container.querySelector(
                            '.ql-picker-options'
                          ).children[this.select.selectedIndex];
                          option = this.select.options[
                            this.select.selectedIndex
                          ];
                          this.selectItem(item);
                        } else {
                          this.selectItem(null);
                        }
                        var isActive =
                          option != null &&
                          option !==
                            this.select.querySelector('option[selected]');
                        this.label.classList.toggle('ql-active', isActive);
                      }
                    }
                  ]);

                  return Picker;
                })();

                exports.default = Picker;

                /***/
              },
              /* 29 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                var _break = __webpack_require__(16);

                var _break2 = _interopRequireDefault(_break);

                var _container = __webpack_require__(25);

                var _container2 = _interopRequireDefault(_container);

                var _cursor = __webpack_require__(24);

                var _cursor2 = _interopRequireDefault(_cursor);

                var _embed = __webpack_require__(35);

                var _embed2 = _interopRequireDefault(_embed);

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                var _scroll = __webpack_require__(22);

                var _scroll2 = _interopRequireDefault(_scroll);

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                var _clipboard = __webpack_require__(55);

                var _clipboard2 = _interopRequireDefault(_clipboard);

                var _history = __webpack_require__(42);

                var _history2 = _interopRequireDefault(_history);

                var _keyboard = __webpack_require__(23);

                var _keyboard2 = _interopRequireDefault(_keyboard);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                _quill2.default.register({
                  'blots/block': _block2.default,
                  'blots/block/embed': _block.BlockEmbed,
                  'blots/break': _break2.default,
                  'blots/container': _container2.default,
                  'blots/cursor': _cursor2.default,
                  'blots/embed': _embed2.default,
                  'blots/inline': _inline2.default,
                  'blots/scroll': _scroll2.default,
                  'blots/text': _text2.default,

                  'modules/clipboard': _clipboard2.default,
                  'modules/history': _history2.default,
                  'modules/keyboard': _keyboard2.default
                });

                _parchment2.default.register(
                  _block2.default,
                  _break2.default,
                  _cursor2.default,
                  _inline2.default,
                  _scroll2.default,
                  _text2.default
                );

                exports.default = _quill2.default;

                /***/
              },
              /* 30 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', { value: true });
                var Registry = __webpack_require__(1);
                var ShadowBlot = /** @class */ (function() {
                  function ShadowBlot(domNode) {
                    this.domNode = domNode;
                    // @ts-ignore
                    this.domNode[Registry.DATA_KEY] = { blot: this };
                  }
                  Object.defineProperty(ShadowBlot.prototype, 'statics', {
                    // Hack for accessing inherited static methods
                    get: function() {
                      return this.constructor;
                    },
                    enumerable: true,
                    configurable: true
                  });
                  ShadowBlot.create = function(value) {
                    if (this.tagName == null) {
                      throw new Registry.ParchmentError(
                        'Blot definition missing tagName'
                      );
                    }
                    var node;
                    if (Array.isArray(this.tagName)) {
                      if (typeof value === 'string') {
                        value = value.toUpperCase();
                        if (parseInt(value).toString() === value) {
                          value = parseInt(value);
                        }
                      }
                      if (typeof value === 'number') {
                        node = document.createElement(this.tagName[value - 1]);
                      } else if (this.tagName.indexOf(value) > -1) {
                        node = document.createElement(value);
                      } else {
                        node = document.createElement(this.tagName[0]);
                      }
                    } else {
                      node = document.createElement(this.tagName);
                    }
                    if (this.className) {
                      node.classList.add(this.className);
                    }
                    return node;
                  };
                  ShadowBlot.prototype.attach = function() {
                    if (this.parent != null) {
                      this.scroll = this.parent.scroll;
                    }
                  };
                  ShadowBlot.prototype.clone = function() {
                    var domNode = this.domNode.cloneNode(false);
                    return Registry.create(domNode);
                  };
                  ShadowBlot.prototype.detach = function() {
                    if (this.parent != null) this.parent.removeChild(this);
                    // @ts-ignore
                    delete this.domNode[Registry.DATA_KEY];
                  };
                  ShadowBlot.prototype.deleteAt = function(index, length) {
                    var blot = this.isolate(index, length);
                    blot.remove();
                  };
                  ShadowBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    var blot = this.isolate(index, length);
                    if (
                      Registry.query(name, Registry.Scope.BLOT) != null &&
                      value
                    ) {
                      blot.wrap(name, value);
                    } else if (
                      Registry.query(name, Registry.Scope.ATTRIBUTE) != null
                    ) {
                      var parent = Registry.create(this.statics.scope);
                      blot.wrap(parent);
                      parent.format(name, value);
                    }
                  };
                  ShadowBlot.prototype.insertAt = function(index, value, def) {
                    var blot =
                      def == null
                        ? Registry.create('text', value)
                        : Registry.create(value, def);
                    var ref = this.split(index);
                    this.parent.insertBefore(blot, ref);
                  };
                  ShadowBlot.prototype.insertInto = function(
                    parentBlot,
                    refBlot
                  ) {
                    if (refBlot === void 0) {
                      refBlot = null;
                    }
                    if (this.parent != null) {
                      this.parent.children.remove(this);
                    }
                    var refDomNode = null;
                    parentBlot.children.insertBefore(this, refBlot);
                    if (refBlot != null) {
                      refDomNode = refBlot.domNode;
                    }
                    if (
                      this.domNode.parentNode != parentBlot.domNode ||
                      this.domNode.nextSibling != refDomNode
                    ) {
                      parentBlot.domNode.insertBefore(this.domNode, refDomNode);
                    }
                    this.parent = parentBlot;
                    this.attach();
                  };
                  ShadowBlot.prototype.isolate = function(index, length) {
                    var target = this.split(index);
                    target.split(length);
                    return target;
                  };
                  ShadowBlot.prototype.length = function() {
                    return 1;
                  };
                  ShadowBlot.prototype.offset = function(root) {
                    if (root === void 0) {
                      root = this.parent;
                    }
                    if (this.parent == null || this == root) return 0;
                    return (
                      this.parent.children.offset(this) +
                      this.parent.offset(root)
                    );
                  };
                  ShadowBlot.prototype.optimize = function(context) {
                    // TODO clean up once we use WeakMap
                    // @ts-ignore
                    if (this.domNode[Registry.DATA_KEY] != null) {
                      // @ts-ignore
                      delete this.domNode[Registry.DATA_KEY].mutations;
                    }
                  };
                  ShadowBlot.prototype.remove = function() {
                    if (this.domNode.parentNode != null) {
                      this.domNode.parentNode.removeChild(this.domNode);
                    }
                    this.detach();
                  };
                  ShadowBlot.prototype.replace = function(target) {
                    if (target.parent == null) return;
                    target.parent.insertBefore(this, target.next);
                    target.remove();
                  };
                  ShadowBlot.prototype.replaceWith = function(name, value) {
                    var replacement =
                      typeof name === 'string'
                        ? Registry.create(name, value)
                        : name;
                    replacement.replace(this);
                    return replacement;
                  };
                  ShadowBlot.prototype.split = function(index, force) {
                    return index === 0 ? this : this.next;
                  };
                  ShadowBlot.prototype.update = function(mutations, context) {
                    // Nothing to do by default
                  };
                  ShadowBlot.prototype.wrap = function(name, value) {
                    var wrapper =
                      typeof name === 'string'
                        ? Registry.create(name, value)
                        : name;
                    if (this.parent != null) {
                      this.parent.insertBefore(wrapper, this.next);
                    }
                    wrapper.appendChild(this);
                    return wrapper;
                  };
                  ShadowBlot.blotName = 'abstract';
                  return ShadowBlot;
                })();
                exports.default = ShadowBlot;

                /***/
              },
              /* 31 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', { value: true });
                var attributor_1 = __webpack_require__(12);
                var class_1 = __webpack_require__(32);
                var style_1 = __webpack_require__(33);
                var Registry = __webpack_require__(1);
                var AttributorStore = /** @class */ (function() {
                  function AttributorStore(domNode) {
                    this.attributes = {};
                    this.domNode = domNode;
                    this.build();
                  }
                  AttributorStore.prototype.attribute = function(
                    attribute,
                    value
                  ) {
                    // verb
                    if (value) {
                      if (attribute.add(this.domNode, value)) {
                        if (attribute.value(this.domNode) != null) {
                          this.attributes[attribute.attrName] = attribute;
                        } else {
                          delete this.attributes[attribute.attrName];
                        }
                      }
                    } else {
                      attribute.remove(this.domNode);
                      delete this.attributes[attribute.attrName];
                    }
                  };
                  AttributorStore.prototype.build = function() {
                    var _this = this;
                    this.attributes = {};
                    var attributes = attributor_1.default.keys(this.domNode);
                    var classes = class_1.default.keys(this.domNode);
                    var styles = style_1.default.keys(this.domNode);
                    attributes
                      .concat(classes)
                      .concat(styles)
                      .forEach(function(name) {
                        var attr = Registry.query(
                          name,
                          Registry.Scope.ATTRIBUTE
                        );
                        if (attr instanceof attributor_1.default) {
                          _this.attributes[attr.attrName] = attr;
                        }
                      });
                  };
                  AttributorStore.prototype.copy = function(target) {
                    var _this = this;
                    Object.keys(this.attributes).forEach(function(key) {
                      var value = _this.attributes[key].value(_this.domNode);
                      target.format(key, value);
                    });
                  };
                  AttributorStore.prototype.move = function(target) {
                    var _this = this;
                    this.copy(target);
                    Object.keys(this.attributes).forEach(function(key) {
                      _this.attributes[key].remove(_this.domNode);
                    });
                    this.attributes = {};
                  };
                  AttributorStore.prototype.values = function() {
                    var _this = this;
                    return Object.keys(this.attributes).reduce(function(
                      attributes,
                      name
                    ) {
                      attributes[name] = _this.attributes[name].value(
                        _this.domNode
                      );
                      return attributes;
                    },
                    {});
                  };
                  return AttributorStore;
                })();
                exports.default = AttributorStore;

                /***/
              },
              /* 32 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var attributor_1 = __webpack_require__(12);
                function match(node, prefix) {
                  var className = node.getAttribute('class') || '';
                  return className.split(/\s+/).filter(function(name) {
                    return name.indexOf(prefix + '-') === 0;
                  });
                }
                var ClassAttributor = /** @class */ (function(_super) {
                  __extends(ClassAttributor, _super);
                  function ClassAttributor() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  ClassAttributor.keys = function(node) {
                    return (node.getAttribute('class') || '')
                      .split(/\s+/)
                      .map(function(name) {
                        return name
                          .split('-')
                          .slice(0, -1)
                          .join('-');
                      });
                  };
                  ClassAttributor.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value)) return false;
                    this.remove(node);
                    node.classList.add(this.keyName + '-' + value);
                    return true;
                  };
                  ClassAttributor.prototype.remove = function(node) {
                    var matches = match(node, this.keyName);
                    matches.forEach(function(name) {
                      node.classList.remove(name);
                    });
                    if (node.classList.length === 0) {
                      node.removeAttribute('class');
                    }
                  };
                  ClassAttributor.prototype.value = function(node) {
                    var result = match(node, this.keyName)[0] || '';
                    var value = result.slice(this.keyName.length + 1); // +1 for hyphen
                    return this.canAdd(node, value) ? value : '';
                  };
                  return ClassAttributor;
                })(attributor_1.default);
                exports.default = ClassAttributor;

                /***/
              },
              /* 33 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var attributor_1 = __webpack_require__(12);
                function camelize(name) {
                  var parts = name.split('-');
                  var rest = parts
                    .slice(1)
                    .map(function(part) {
                      return part[0].toUpperCase() + part.slice(1);
                    })
                    .join('');
                  return parts[0] + rest;
                }
                var StyleAttributor = /** @class */ (function(_super) {
                  __extends(StyleAttributor, _super);
                  function StyleAttributor() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  StyleAttributor.keys = function(node) {
                    return (node.getAttribute('style') || '')
                      .split(';')
                      .map(function(value) {
                        var arr = value.split(':');
                        return arr[0].trim();
                      });
                  };
                  StyleAttributor.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value)) return false;
                    // @ts-ignore
                    node.style[camelize(this.keyName)] = value;
                    return true;
                  };
                  StyleAttributor.prototype.remove = function(node) {
                    // @ts-ignore
                    node.style[camelize(this.keyName)] = '';
                    if (!node.getAttribute('style')) {
                      node.removeAttribute('style');
                    }
                  };
                  StyleAttributor.prototype.value = function(node) {
                    // @ts-ignore
                    var value = node.style[camelize(this.keyName)];
                    return this.canAdd(node, value) ? value : '';
                  };
                  return StyleAttributor;
                })(attributor_1.default);
                exports.default = StyleAttributor;

                /***/
              },
              /* 34 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var Theme = (function() {
                  function Theme(quill, options) {
                    _classCallCheck(this, Theme);

                    this.quill = quill;
                    this.options = options;
                    this.modules = {};
                  }

                  _createClass(Theme, [
                    {
                      key: 'init',
                      value: function init() {
                        var _this = this;

                        Object.keys(this.options.modules).forEach(function(
                          name
                        ) {
                          if (_this.modules[name] == null) {
                            _this.addModule(name);
                          }
                        });
                      }
                    },
                    {
                      key: 'addModule',
                      value: function addModule(name) {
                        var moduleClass = this.quill.constructor.import(
                          'modules/' + name
                        );
                        this.modules[name] = new moduleClass(
                          this.quill,
                          this.options.modules[name] || {}
                        );
                        return this.modules[name];
                      }
                    }
                  ]);

                  return Theme;
                })();

                Theme.DEFAULTS = {
                  modules: {}
                };
                Theme.themes = {
                  default: Theme
                };

                exports.default = Theme;

                /***/
              },
              /* 35 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _text = __webpack_require__(7);

                var _text2 = _interopRequireDefault(_text);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var GUARD_TEXT = '\uFEFF';

                var Embed = (function(_Parchment$Embed) {
                  _inherits(Embed, _Parchment$Embed);

                  function Embed(node) {
                    _classCallCheck(this, Embed);

                    var _this = _possibleConstructorReturn(
                      this,
                      (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(
                        this,
                        node
                      )
                    );

                    _this.contentNode = document.createElement('span');
                    _this.contentNode.setAttribute('contenteditable', false);
                    [].slice
                      .call(_this.domNode.childNodes)
                      .forEach(function(childNode) {
                        _this.contentNode.appendChild(childNode);
                      });
                    _this.leftGuard = document.createTextNode(GUARD_TEXT);
                    _this.rightGuard = document.createTextNode(GUARD_TEXT);
                    _this.domNode.appendChild(_this.leftGuard);
                    _this.domNode.appendChild(_this.contentNode);
                    _this.domNode.appendChild(_this.rightGuard);
                    return _this;
                  }

                  _createClass(Embed, [
                    {
                      key: 'index',
                      value: function index(node, offset) {
                        if (node === this.leftGuard) return 0;
                        if (node === this.rightGuard) return 1;
                        return _get(
                          Embed.prototype.__proto__ ||
                            Object.getPrototypeOf(Embed.prototype),
                          'index',
                          this
                        ).call(this, node, offset);
                      }
                    },
                    {
                      key: 'restore',
                      value: function restore(node) {
                        var range = void 0,
                          textNode = void 0;
                        var text = node.data.split(GUARD_TEXT).join('');
                        if (node === this.leftGuard) {
                          if (this.prev instanceof _text2.default) {
                            var prevLength = this.prev.length();
                            this.prev.insertAt(prevLength, text);
                            range = {
                              startNode: this.prev.domNode,
                              startOffset: prevLength + text.length
                            };
                          } else {
                            textNode = document.createTextNode(text);
                            this.parent.insertBefore(
                              _parchment2.default.create(textNode),
                              this
                            );
                            range = {
                              startNode: textNode,
                              startOffset: text.length
                            };
                          }
                        } else if (node === this.rightGuard) {
                          if (this.next instanceof _text2.default) {
                            this.next.insertAt(0, text);
                            range = {
                              startNode: this.next.domNode,
                              startOffset: text.length
                            };
                          } else {
                            textNode = document.createTextNode(text);
                            this.parent.insertBefore(
                              _parchment2.default.create(textNode),
                              this.next
                            );
                            range = {
                              startNode: textNode,
                              startOffset: text.length
                            };
                          }
                        }
                        node.data = GUARD_TEXT;
                        return range;
                      }
                    },
                    {
                      key: 'update',
                      value: function update(mutations, context) {
                        var _this2 = this;

                        mutations.forEach(function(mutation) {
                          if (
                            mutation.type === 'characterData' &&
                            (mutation.target === _this2.leftGuard ||
                              mutation.target === _this2.rightGuard)
                          ) {
                            var range = _this2.restore(mutation.target);
                            if (range) context.range = range;
                          }
                        });
                      }
                    }
                  ]);

                  return Embed;
                })(_parchment2.default.Embed);

                exports.default = Embed;

                /***/
              },
              /* 36 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                var config = {
                  scope: _parchment2.default.Scope.BLOCK,
                  whitelist: ['right', 'center', 'justify']
                };

                var AlignAttribute = new _parchment2.default.Attributor.Attribute(
                  'align',
                  'align',
                  config
                );
                var AlignClass = new _parchment2.default.Attributor.Class(
                  'align',
                  'ql-align',
                  config
                );
                var AlignStyle = new _parchment2.default.Attributor.Style(
                  'align',
                  'text-align',
                  config
                );

                exports.AlignAttribute = AlignAttribute;
                exports.AlignClass = AlignClass;
                exports.AlignStyle = AlignStyle;

                /***/
              },
              /* 37 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.BackgroundStyle = exports.BackgroundClass = undefined;

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _color = __webpack_require__(26);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                var BackgroundClass = new _parchment2.default.Attributor.Class(
                  'background',
                  'ql-bg',
                  {
                    scope: _parchment2.default.Scope.INLINE
                  }
                );
                var BackgroundStyle = new _color.ColorAttributor(
                  'background',
                  'background-color',
                  {
                    scope: _parchment2.default.Scope.INLINE
                  }
                );

                exports.BackgroundClass = BackgroundClass;
                exports.BackgroundStyle = BackgroundStyle;

                /***/
              },
              /* 38 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                var config = {
                  scope: _parchment2.default.Scope.BLOCK,
                  whitelist: ['rtl']
                };

                var DirectionAttribute = new _parchment2.default.Attributor.Attribute(
                  'direction',
                  'dir',
                  config
                );
                var DirectionClass = new _parchment2.default.Attributor.Class(
                  'direction',
                  'ql-direction',
                  config
                );
                var DirectionStyle = new _parchment2.default.Attributor.Style(
                  'direction',
                  'direction',
                  config
                );

                exports.DirectionAttribute = DirectionAttribute;
                exports.DirectionClass = DirectionClass;
                exports.DirectionStyle = DirectionStyle;

                /***/
              },
              /* 39 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.FontClass = exports.FontStyle = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var config = {
                  scope: _parchment2.default.Scope.INLINE,
                  whitelist: ['serif', 'monospace']
                };

                var FontClass = new _parchment2.default.Attributor.Class(
                  'font',
                  'ql-font',
                  config
                );

                var FontStyleAttributor = (function(_Parchment$Attributor) {
                  _inherits(FontStyleAttributor, _Parchment$Attributor);

                  function FontStyleAttributor() {
                    _classCallCheck(this, FontStyleAttributor);

                    return _possibleConstructorReturn(
                      this,
                      (
                        FontStyleAttributor.__proto__ ||
                        Object.getPrototypeOf(FontStyleAttributor)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(FontStyleAttributor, [
                    {
                      key: 'value',
                      value: function value(node) {
                        return _get(
                          FontStyleAttributor.prototype.__proto__ ||
                            Object.getPrototypeOf(
                              FontStyleAttributor.prototype
                            ),
                          'value',
                          this
                        )
                          .call(this, node)
                          .replace(/["']/g, '');
                      }
                    }
                  ]);

                  return FontStyleAttributor;
                })(_parchment2.default.Attributor.Style);

                var FontStyle = new FontStyleAttributor(
                  'font',
                  'font-family',
                  config
                );

                exports.FontStyle = FontStyle;
                exports.FontClass = FontClass;

                /***/
              },
              /* 40 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.SizeStyle = exports.SizeClass = undefined;

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                var SizeClass = new _parchment2.default.Attributor.Class(
                  'size',
                  'ql-size',
                  {
                    scope: _parchment2.default.Scope.INLINE,
                    whitelist: ['small', 'large', 'huge']
                  }
                );
                var SizeStyle = new _parchment2.default.Attributor.Style(
                  'size',
                  'font-size',
                  {
                    scope: _parchment2.default.Scope.INLINE,
                    whitelist: ['10px', '18px', '32px']
                  }
                );

                exports.SizeClass = SizeClass;
                exports.SizeStyle = SizeStyle;

                /***/
              },
              /* 41 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                module.exports = {
                  align: {
                    '': __webpack_require__(76),
                    center: __webpack_require__(77),
                    right: __webpack_require__(78),
                    justify: __webpack_require__(79)
                  },
                  background: __webpack_require__(80),
                  blockquote: __webpack_require__(81),
                  bold: __webpack_require__(82),
                  clean: __webpack_require__(83),
                  code: __webpack_require__(58),
                  'code-block': __webpack_require__(58),
                  color: __webpack_require__(84),
                  direction: {
                    '': __webpack_require__(85),
                    rtl: __webpack_require__(86)
                  },
                  float: {
                    center: __webpack_require__(87),
                    full: __webpack_require__(88),
                    left: __webpack_require__(89),
                    right: __webpack_require__(90)
                  },
                  formula: __webpack_require__(91),
                  header: {
                    '1': __webpack_require__(92),
                    '2': __webpack_require__(93)
                  },
                  italic: __webpack_require__(94),
                  image: __webpack_require__(95),
                  indent: {
                    '+1': __webpack_require__(96),
                    '-1': __webpack_require__(97)
                  },
                  link: __webpack_require__(98),
                  list: {
                    ordered: __webpack_require__(99),
                    bullet: __webpack_require__(100),
                    check: __webpack_require__(101)
                  },
                  script: {
                    sub: __webpack_require__(102),
                    super: __webpack_require__(103)
                  },
                  strike: __webpack_require__(104),
                  underline: __webpack_require__(105),
                  video: __webpack_require__(106)
                };

                /***/
              },
              /* 42 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.getLastChangeIndex = exports.default = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var History = (function(_Module) {
                  _inherits(History, _Module);

                  function History(quill, options) {
                    _classCallCheck(this, History);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        History.__proto__ || Object.getPrototypeOf(History)
                      ).call(this, quill, options)
                    );

                    _this.lastRecorded = 0;
                    _this.ignoreChange = false;
                    _this.clear();
                    _this.quill.on(
                      _quill2.default.events.EDITOR_CHANGE,
                      function(eventName, delta, oldDelta, source) {
                        if (
                          eventName !== _quill2.default.events.TEXT_CHANGE ||
                          _this.ignoreChange
                        )
                          return;
                        if (
                          !_this.options.userOnly ||
                          source === _quill2.default.sources.USER
                        ) {
                          _this.record(delta, oldDelta);
                        } else {
                          _this.transform(delta);
                        }
                      }
                    );
                    _this.quill.keyboard.addBinding(
                      { key: 'Z', shortKey: true },
                      _this.undo.bind(_this)
                    );
                    _this.quill.keyboard.addBinding(
                      { key: 'Z', shortKey: true, shiftKey: true },
                      _this.redo.bind(_this)
                    );
                    if (/Win/i.test(navigator.platform)) {
                      _this.quill.keyboard.addBinding(
                        { key: 'Y', shortKey: true },
                        _this.redo.bind(_this)
                      );
                    }
                    return _this;
                  }

                  _createClass(History, [
                    {
                      key: 'change',
                      value: function change(source, dest) {
                        if (this.stack[source].length === 0) return;
                        var delta = this.stack[source].pop();
                        this.stack[dest].push(delta);
                        this.lastRecorded = 0;
                        this.ignoreChange = true;
                        this.quill.updateContents(
                          delta[source],
                          _quill2.default.sources.USER
                        );
                        this.ignoreChange = false;
                        var index = getLastChangeIndex(delta[source]);
                        this.quill.setSelection(index);
                      }
                    },
                    {
                      key: 'clear',
                      value: function clear() {
                        this.stack = { undo: [], redo: [] };
                      }
                    },
                    {
                      key: 'cutoff',
                      value: function cutoff() {
                        this.lastRecorded = 0;
                      }
                    },
                    {
                      key: 'record',
                      value: function record(changeDelta, oldDelta) {
                        if (changeDelta.ops.length === 0) return;
                        this.stack.redo = [];
                        var undoDelta = this.quill.getContents().diff(oldDelta);
                        var timestamp = Date.now();
                        if (
                          this.lastRecorded + this.options.delay > timestamp &&
                          this.stack.undo.length > 0
                        ) {
                          var delta = this.stack.undo.pop();
                          undoDelta = undoDelta.compose(delta.undo);
                          changeDelta = delta.redo.compose(changeDelta);
                        } else {
                          this.lastRecorded = timestamp;
                        }
                        this.stack.undo.push({
                          redo: changeDelta,
                          undo: undoDelta
                        });
                        if (this.stack.undo.length > this.options.maxStack) {
                          this.stack.undo.shift();
                        }
                      }
                    },
                    {
                      key: 'redo',
                      value: function redo() {
                        this.change('redo', 'undo');
                      }
                    },
                    {
                      key: 'transform',
                      value: function transform(delta) {
                        this.stack.undo.forEach(function(change) {
                          change.undo = delta.transform(change.undo, true);
                          change.redo = delta.transform(change.redo, true);
                        });
                        this.stack.redo.forEach(function(change) {
                          change.undo = delta.transform(change.undo, true);
                          change.redo = delta.transform(change.redo, true);
                        });
                      }
                    },
                    {
                      key: 'undo',
                      value: function undo() {
                        this.change('undo', 'redo');
                      }
                    }
                  ]);

                  return History;
                })(_module2.default);

                History.DEFAULTS = {
                  delay: 1000,
                  maxStack: 100,
                  userOnly: false
                };

                function endsWithNewlineChange(delta) {
                  var lastOp = delta.ops[delta.ops.length - 1];
                  if (lastOp == null) return false;
                  if (lastOp.insert != null) {
                    return (
                      typeof lastOp.insert === 'string' &&
                      lastOp.insert.endsWith('\n')
                    );
                  }
                  if (lastOp.attributes != null) {
                    return Object.keys(lastOp.attributes).some(function(attr) {
                      return (
                        _parchment2.default.query(
                          attr,
                          _parchment2.default.Scope.BLOCK
                        ) != null
                      );
                    });
                  }
                  return false;
                }

                function getLastChangeIndex(delta) {
                  var deleteLength = delta.reduce(function(length, op) {
                    length += op.delete || 0;
                    return length;
                  }, 0);
                  var changeIndex = delta.length() - deleteLength;
                  if (endsWithNewlineChange(delta)) {
                    changeIndex -= 1;
                  }
                  return changeIndex;
                }

                exports.default = History;
                exports.getLastChangeIndex = getLastChangeIndex;

                /***/
              },
              /* 43 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.BaseTooltip = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _emitter = __webpack_require__(8);

                var _emitter2 = _interopRequireDefault(_emitter);

                var _keyboard = __webpack_require__(23);

                var _keyboard2 = _interopRequireDefault(_keyboard);

                var _theme = __webpack_require__(34);

                var _theme2 = _interopRequireDefault(_theme);

                var _colorPicker = __webpack_require__(59);

                var _colorPicker2 = _interopRequireDefault(_colorPicker);

                var _iconPicker = __webpack_require__(60);

                var _iconPicker2 = _interopRequireDefault(_iconPicker);

                var _picker = __webpack_require__(28);

                var _picker2 = _interopRequireDefault(_picker);

                var _tooltip = __webpack_require__(61);

                var _tooltip2 = _interopRequireDefault(_tooltip);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ALIGNS = [false, 'center', 'right', 'justify'];

                var COLORS = [
                  '#000000',
                  '#e60000',
                  '#ff9900',
                  '#ffff00',
                  '#008a00',
                  '#0066cc',
                  '#9933ff',
                  '#ffffff',
                  '#facccc',
                  '#ffebcc',
                  '#ffffcc',
                  '#cce8cc',
                  '#cce0f5',
                  '#ebd6ff',
                  '#bbbbbb',
                  '#f06666',
                  '#ffc266',
                  '#ffff66',
                  '#66b966',
                  '#66a3e0',
                  '#c285ff',
                  '#888888',
                  '#a10000',
                  '#b26b00',
                  '#b2b200',
                  '#006100',
                  '#0047b2',
                  '#6b24b2',
                  '#444444',
                  '#5c0000',
                  '#663d00',
                  '#666600',
                  '#003700',
                  '#002966',
                  '#3d1466'
                ];

                var FONTS = [false, 'serif', 'monospace'];

                var HEADERS = ['1', '2', '3', false];

                var SIZES = ['small', false, 'large', 'huge'];

                var BaseTheme = (function(_Theme) {
                  _inherits(BaseTheme, _Theme);

                  function BaseTheme(quill, options) {
                    _classCallCheck(this, BaseTheme);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)
                      ).call(this, quill, options)
                    );

                    var listener = function listener(e) {
                      if (!document.body.contains(quill.root)) {
                        return document.body.removeEventListener(
                          'click',
                          listener
                        );
                      }
                      if (
                        _this.tooltip != null &&
                        !_this.tooltip.root.contains(e.target) &&
                        document.activeElement !== _this.tooltip.textbox &&
                        !_this.quill.hasFocus()
                      ) {
                        _this.tooltip.hide();
                      }
                      if (_this.pickers != null) {
                        _this.pickers.forEach(function(picker) {
                          if (!picker.container.contains(e.target)) {
                            picker.close();
                          }
                        });
                      }
                    };
                    quill.emitter.listenDOM('click', document.body, listener);
                    return _this;
                  }

                  _createClass(BaseTheme, [
                    {
                      key: 'addModule',
                      value: function addModule(name) {
                        var module = _get(
                          BaseTheme.prototype.__proto__ ||
                            Object.getPrototypeOf(BaseTheme.prototype),
                          'addModule',
                          this
                        ).call(this, name);
                        if (name === 'toolbar') {
                          this.extendToolbar(module);
                        }
                        return module;
                      }
                    },
                    {
                      key: 'buildButtons',
                      value: function buildButtons(buttons, icons) {
                        buttons.forEach(function(button) {
                          var className = button.getAttribute('class') || '';
                          className.split(/\s+/).forEach(function(name) {
                            if (!name.startsWith('ql-')) return;
                            name = name.slice('ql-'.length);
                            if (icons[name] == null) return;
                            if (name === 'direction') {
                              button.innerHTML =
                                icons[name][''] + icons[name]['rtl'];
                            } else if (typeof icons[name] === 'string') {
                              button.innerHTML = icons[name];
                            } else {
                              var value = button.value || '';
                              if (value != null && icons[name][value]) {
                                button.innerHTML = icons[name][value];
                              }
                            }
                          });
                        });
                      }
                    },
                    {
                      key: 'buildPickers',
                      value: function buildPickers(selects, icons) {
                        var _this2 = this;

                        this.pickers = selects.map(function(select) {
                          if (select.classList.contains('ql-align')) {
                            if (select.querySelector('option') == null) {
                              fillSelect(select, ALIGNS);
                            }
                            return new _iconPicker2.default(
                              select,
                              icons.align
                            );
                          } else if (
                            select.classList.contains('ql-background') ||
                            select.classList.contains('ql-color')
                          ) {
                            var format = select.classList.contains(
                              'ql-background'
                            )
                              ? 'background'
                              : 'color';
                            if (select.querySelector('option') == null) {
                              fillSelect(
                                select,
                                COLORS,
                                format === 'background' ? '#ffffff' : '#000000'
                              );
                            }
                            return new _colorPicker2.default(
                              select,
                              icons[format]
                            );
                          } else {
                            if (select.querySelector('option') == null) {
                              if (select.classList.contains('ql-font')) {
                                fillSelect(select, FONTS);
                              } else if (
                                select.classList.contains('ql-header')
                              ) {
                                fillSelect(select, HEADERS);
                              } else if (select.classList.contains('ql-size')) {
                                fillSelect(select, SIZES);
                              }
                            }
                            return new _picker2.default(select);
                          }
                        });
                        var update = function update() {
                          _this2.pickers.forEach(function(picker) {
                            picker.update();
                          });
                        };
                        this.quill.on(
                          _emitter2.default.events.EDITOR_CHANGE,
                          update
                        );
                      }
                    }
                  ]);

                  return BaseTheme;
                })(_theme2.default);

                BaseTheme.DEFAULTS = (0, _extend2.default)(
                  true,
                  {},
                  _theme2.default.DEFAULTS,
                  {
                    modules: {
                      toolbar: {
                        handlers: {
                          formula: function formula() {
                            this.quill.theme.tooltip.edit('formula');
                          },
                          image: function image() {
                            var _this3 = this;

                            var fileInput = this.container.querySelector(
                              'input.ql-image[type=file]'
                            );
                            if (fileInput == null) {
                              fileInput = document.createElement('input');
                              fileInput.setAttribute('type', 'file');
                              fileInput.setAttribute(
                                'accept',
                                'image/png, image/gif, image/jpeg, image/bmp, image/x-icon'
                              );
                              fileInput.classList.add('ql-image');
                              fileInput.addEventListener('change', function() {
                                if (
                                  fileInput.files != null &&
                                  fileInput.files[0] != null
                                ) {
                                  var reader = new FileReader();
                                  reader.onload = function(e) {
                                    var range = _this3.quill.getSelection(true);
                                    _this3.quill.updateContents(
                                      new _quillDelta2.default()
                                        .retain(range.index)
                                        .delete(range.length)
                                        .insert({ image: e.target.result }),
                                      _emitter2.default.sources.USER
                                    );
                                    _this3.quill.setSelection(
                                      range.index + 1,
                                      _emitter2.default.sources.SILENT
                                    );
                                    fileInput.value = '';
                                  };
                                  reader.readAsDataURL(fileInput.files[0]);
                                }
                              });
                              this.container.appendChild(fileInput);
                            }
                            fileInput.click();
                          },
                          video: function video() {
                            this.quill.theme.tooltip.edit('video');
                          }
                        }
                      }
                    }
                  }
                );

                var BaseTooltip = (function(_Tooltip) {
                  _inherits(BaseTooltip, _Tooltip);

                  function BaseTooltip(quill, boundsContainer) {
                    _classCallCheck(this, BaseTooltip);

                    var _this4 = _possibleConstructorReturn(
                      this,
                      (
                        BaseTooltip.__proto__ ||
                        Object.getPrototypeOf(BaseTooltip)
                      ).call(this, quill, boundsContainer)
                    );

                    _this4.textbox = _this4.root.querySelector(
                      'input[type="text"]'
                    );
                    _this4.listen();
                    return _this4;
                  }

                  _createClass(BaseTooltip, [
                    {
                      key: 'listen',
                      value: function listen() {
                        var _this5 = this;

                        this.textbox.addEventListener('keydown', function(
                          event
                        ) {
                          if (_keyboard2.default.match(event, 'enter')) {
                            _this5.save();
                            event.preventDefault();
                          } else if (
                            _keyboard2.default.match(event, 'escape')
                          ) {
                            _this5.cancel();
                            event.preventDefault();
                          }
                        });
                      }
                    },
                    {
                      key: 'cancel',
                      value: function cancel() {
                        this.hide();
                      }
                    },
                    {
                      key: 'edit',
                      value: function edit() {
                        var mode =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : 'link';
                        var preview =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : null;

                        this.root.classList.remove('ql-hidden');
                        this.root.classList.add('ql-editing');
                        if (preview != null) {
                          this.textbox.value = preview;
                        } else if (
                          mode !== this.root.getAttribute('data-mode')
                        ) {
                          this.textbox.value = '';
                        }
                        this.position(
                          this.quill.getBounds(this.quill.selection.savedRange)
                        );
                        this.textbox.select();
                        this.textbox.setAttribute(
                          'placeholder',
                          this.textbox.getAttribute('data-' + mode) || ''
                        );
                        this.root.setAttribute('data-mode', mode);
                      }
                    },
                    {
                      key: 'restoreFocus',
                      value: function restoreFocus() {
                        var scrollTop = this.quill.scrollingContainer.scrollTop;
                        this.quill.focus();
                        this.quill.scrollingContainer.scrollTop = scrollTop;
                      }
                    },
                    {
                      key: 'save',
                      value: function save() {
                        var value = this.textbox.value;
                        switch (this.root.getAttribute('data-mode')) {
                          case 'link': {
                            var scrollTop = this.quill.root.scrollTop;
                            if (this.linkRange) {
                              this.quill.formatText(
                                this.linkRange,
                                'link',
                                value,
                                _emitter2.default.sources.USER
                              );
                              delete this.linkRange;
                            } else {
                              this.restoreFocus();
                              this.quill.format(
                                'link',
                                value,
                                _emitter2.default.sources.USER
                              );
                            }
                            this.quill.root.scrollTop = scrollTop;
                            break;
                          }
                          case 'video': {
                            value = extractVideoUrl(value);
                          } // eslint-disable-next-line no-fallthrough
                          case 'formula': {
                            if (!value) break;
                            var range = this.quill.getSelection(true);
                            if (range != null) {
                              var index = range.index + range.length;
                              this.quill.insertEmbed(
                                index,
                                this.root.getAttribute('data-mode'),
                                value,
                                _emitter2.default.sources.USER
                              );
                              if (
                                this.root.getAttribute('data-mode') ===
                                'formula'
                              ) {
                                this.quill.insertText(
                                  index + 1,
                                  ' ',
                                  _emitter2.default.sources.USER
                                );
                              }
                              this.quill.setSelection(
                                index + 2,
                                _emitter2.default.sources.USER
                              );
                            }
                            break;
                          }
                          default:
                        }
                        this.textbox.value = '';
                        this.hide();
                      }
                    }
                  ]);

                  return BaseTooltip;
                })(_tooltip2.default);

                function extractVideoUrl(url) {
                  var match =
                    url.match(
                      /^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/
                    ) ||
                    url.match(
                      /^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/
                    );
                  if (match) {
                    return (
                      (match[1] || 'https') +
                      '://www.youtube.com/embed/' +
                      match[2] +
                      '?showinfo=0'
                    );
                  }
                  if (
                    (match = url.match(
                      /^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/
                    ))
                  ) {
                    // eslint-disable-line no-cond-assign
                    return (
                      (match[1] || 'https') +
                      '://player.vimeo.com/video/' +
                      match[2] +
                      '/'
                    );
                  }
                  return url;
                }

                function fillSelect(select, values) {
                  var defaultValue =
                    arguments.length > 2 && arguments[2] !== undefined
                      ? arguments[2]
                      : false;

                  values.forEach(function(value) {
                    var option = document.createElement('option');
                    if (value === defaultValue) {
                      option.setAttribute('selected', 'selected');
                    } else {
                      option.setAttribute('value', value);
                    }
                    select.appendChild(option);
                  });
                }

                exports.BaseTooltip = BaseTooltip;
                exports.default = BaseTheme;

                /***/
              },
              /* 44 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', { value: true });
                var LinkedList = /** @class */ (function() {
                  function LinkedList() {
                    this.head = this.tail = null;
                    this.length = 0;
                  }
                  LinkedList.prototype.append = function() {
                    var nodes = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                      nodes[_i] = arguments[_i];
                    }
                    this.insertBefore(nodes[0], null);
                    if (nodes.length > 1) {
                      this.append.apply(this, nodes.slice(1));
                    }
                  };
                  LinkedList.prototype.contains = function(node) {
                    var cur,
                      next = this.iterator();
                    while ((cur = next())) {
                      if (cur === node) return true;
                    }
                    return false;
                  };
                  LinkedList.prototype.insertBefore = function(node, refNode) {
                    if (!node) return;
                    node.next = refNode;
                    if (refNode != null) {
                      node.prev = refNode.prev;
                      if (refNode.prev != null) {
                        refNode.prev.next = node;
                      }
                      refNode.prev = node;
                      if (refNode === this.head) {
                        this.head = node;
                      }
                    } else if (this.tail != null) {
                      this.tail.next = node;
                      node.prev = this.tail;
                      this.tail = node;
                    } else {
                      node.prev = null;
                      this.head = this.tail = node;
                    }
                    this.length += 1;
                  };
                  LinkedList.prototype.offset = function(target) {
                    var index = 0,
                      cur = this.head;
                    while (cur != null) {
                      if (cur === target) return index;
                      index += cur.length();
                      cur = cur.next;
                    }
                    return -1;
                  };
                  LinkedList.prototype.remove = function(node) {
                    if (!this.contains(node)) return;
                    if (node.prev != null) node.prev.next = node.next;
                    if (node.next != null) node.next.prev = node.prev;
                    if (node === this.head) this.head = node.next;
                    if (node === this.tail) this.tail = node.prev;
                    this.length -= 1;
                  };
                  LinkedList.prototype.iterator = function(curNode) {
                    if (curNode === void 0) {
                      curNode = this.head;
                    }
                    // TODO use yield when we can
                    return function() {
                      var ret = curNode;
                      if (curNode != null) curNode = curNode.next;
                      return ret;
                    };
                  };
                  LinkedList.prototype.find = function(index, inclusive) {
                    if (inclusive === void 0) {
                      inclusive = false;
                    }
                    var cur,
                      next = this.iterator();
                    while ((cur = next())) {
                      var length = cur.length();
                      if (
                        index < length ||
                        (inclusive &&
                          index === length &&
                          (cur.next == null || cur.next.length() !== 0))
                      ) {
                        return [cur, index];
                      }
                      index -= length;
                    }
                    return [null, 0];
                  };
                  LinkedList.prototype.forEach = function(callback) {
                    var cur,
                      next = this.iterator();
                    while ((cur = next())) {
                      callback(cur);
                    }
                  };
                  LinkedList.prototype.forEachAt = function(
                    index,
                    length,
                    callback
                  ) {
                    if (length <= 0) return;
                    var _a = this.find(index),
                      startNode = _a[0],
                      offset = _a[1];
                    var cur,
                      curIndex = index - offset,
                      next = this.iterator(startNode);
                    while ((cur = next()) && curIndex < index + length) {
                      var curLength = cur.length();
                      if (index > curIndex) {
                        callback(
                          cur,
                          index - curIndex,
                          Math.min(length, curIndex + curLength - index)
                        );
                      } else {
                        callback(
                          cur,
                          0,
                          Math.min(curLength, index + length - curIndex)
                        );
                      }
                      curIndex += curLength;
                    }
                  };
                  LinkedList.prototype.map = function(callback) {
                    return this.reduce(function(memo, cur) {
                      memo.push(callback(cur));
                      return memo;
                    }, []);
                  };
                  LinkedList.prototype.reduce = function(callback, memo) {
                    var cur,
                      next = this.iterator();
                    while ((cur = next())) {
                      memo = callback(memo, cur);
                    }
                    return memo;
                  };
                  return LinkedList;
                })();
                exports.default = LinkedList;

                /***/
              },
              /* 45 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var container_1 = __webpack_require__(17);
                var Registry = __webpack_require__(1);
                var OBSERVER_CONFIG = {
                  attributes: true,
                  characterData: true,
                  characterDataOldValue: true,
                  childList: true,
                  subtree: true
                };
                var MAX_OPTIMIZE_ITERATIONS = 100;
                var ScrollBlot = /** @class */ (function(_super) {
                  __extends(ScrollBlot, _super);
                  function ScrollBlot(node) {
                    var _this = _super.call(this, node) || this;
                    _this.scroll = _this;
                    _this.observer = new MutationObserver(function(mutations) {
                      _this.update(mutations);
                    });
                    _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
                    _this.attach();
                    return _this;
                  }
                  ScrollBlot.prototype.detach = function() {
                    _super.prototype.detach.call(this);
                    this.observer.disconnect();
                  };
                  ScrollBlot.prototype.deleteAt = function(index, length) {
                    this.update();
                    if (index === 0 && length === this.length()) {
                      this.children.forEach(function(child) {
                        child.remove();
                      });
                    } else {
                      _super.prototype.deleteAt.call(this, index, length);
                    }
                  };
                  ScrollBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    this.update();
                    _super.prototype.formatAt.call(
                      this,
                      index,
                      length,
                      name,
                      value
                    );
                  };
                  ScrollBlot.prototype.insertAt = function(index, value, def) {
                    this.update();
                    _super.prototype.insertAt.call(this, index, value, def);
                  };
                  ScrollBlot.prototype.optimize = function(mutations, context) {
                    var _this = this;
                    if (mutations === void 0) {
                      mutations = [];
                    }
                    if (context === void 0) {
                      context = {};
                    }
                    _super.prototype.optimize.call(this, context);
                    // We must modify mutations directly, cannot make copy and then modify
                    var records = [].slice.call(this.observer.takeRecords());
                    // Array.push currently seems to be implemented by a non-tail recursive function
                    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());
                    while (records.length > 0) mutations.push(records.pop());
                    // TODO use WeakMap
                    var mark = function(blot, markParent) {
                      if (markParent === void 0) {
                        markParent = true;
                      }
                      if (blot == null || blot === _this) return;
                      if (blot.domNode.parentNode == null) return;
                      // @ts-ignore
                      if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                        // @ts-ignore
                        blot.domNode[Registry.DATA_KEY].mutations = [];
                      }
                      if (markParent) mark(blot.parent);
                    };
                    var optimize = function(blot) {
                      // Post-order traversal
                      if (
                        // @ts-ignore
                        blot.domNode[Registry.DATA_KEY] == null ||
                        // @ts-ignore
                        blot.domNode[Registry.DATA_KEY].mutations == null
                      ) {
                        return;
                      }
                      if (blot instanceof container_1.default) {
                        blot.children.forEach(optimize);
                      }
                      blot.optimize(context);
                    };
                    var remaining = mutations;
                    for (var i = 0; remaining.length > 0; i += 1) {
                      if (i >= MAX_OPTIMIZE_ITERATIONS) {
                        throw new Error(
                          '[Parchment] Maximum optimize iterations reached'
                        );
                      }
                      remaining.forEach(function(mutation) {
                        var blot = Registry.find(mutation.target, true);
                        if (blot == null) return;
                        if (blot.domNode === mutation.target) {
                          if (mutation.type === 'childList') {
                            mark(
                              Registry.find(mutation.previousSibling, false)
                            );
                            [].forEach.call(mutation.addedNodes, function(
                              node
                            ) {
                              var child = Registry.find(node, false);
                              mark(child, false);
                              if (child instanceof container_1.default) {
                                child.children.forEach(function(grandChild) {
                                  mark(grandChild, false);
                                });
                              }
                            });
                          } else if (mutation.type === 'attributes') {
                            mark(blot.prev);
                          }
                        }
                        mark(blot);
                      });
                      this.children.forEach(optimize);
                      remaining = [].slice.call(this.observer.takeRecords());
                      records = remaining.slice();
                      while (records.length > 0) mutations.push(records.pop());
                    }
                  };
                  ScrollBlot.prototype.update = function(mutations, context) {
                    var _this = this;
                    if (context === void 0) {
                      context = {};
                    }
                    mutations = mutations || this.observer.takeRecords();
                    // TODO use WeakMap
                    mutations
                      .map(function(mutation) {
                        var blot = Registry.find(mutation.target, true);
                        if (blot == null) return null;
                        // @ts-ignore
                        if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                          // @ts-ignore
                          blot.domNode[Registry.DATA_KEY].mutations = [
                            mutation
                          ];
                          return blot;
                        } else {
                          // @ts-ignore
                          blot.domNode[Registry.DATA_KEY].mutations.push(
                            mutation
                          );
                          return null;
                        }
                      })
                      .forEach(function(blot) {
                        if (
                          blot == null ||
                          blot === _this ||
                          //@ts-ignore
                          blot.domNode[Registry.DATA_KEY] == null
                        )
                          return;
                        // @ts-ignore
                        blot.update(
                          blot.domNode[Registry.DATA_KEY].mutations || [],
                          context
                        );
                      });
                    // @ts-ignore
                    if (this.domNode[Registry.DATA_KEY].mutations != null) {
                      // @ts-ignore
                      _super.prototype.update.call(
                        this,
                        this.domNode[Registry.DATA_KEY].mutations,
                        context
                      );
                    }
                    this.optimize(mutations, context);
                  };
                  ScrollBlot.blotName = 'scroll';
                  ScrollBlot.defaultChild = 'block';
                  ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
                  ScrollBlot.tagName = 'DIV';
                  return ScrollBlot;
                })(container_1.default);
                exports.default = ScrollBlot;

                /***/
              },
              /* 46 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var format_1 = __webpack_require__(18);
                var Registry = __webpack_require__(1);
                // Shallow object comparison
                function isEqual(obj1, obj2) {
                  if (Object.keys(obj1).length !== Object.keys(obj2).length)
                    return false;
                  // @ts-ignore
                  for (var prop in obj1) {
                    // @ts-ignore
                    if (obj1[prop] !== obj2[prop]) return false;
                  }
                  return true;
                }
                var InlineBlot = /** @class */ (function(_super) {
                  __extends(InlineBlot, _super);
                  function InlineBlot() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  InlineBlot.formats = function(domNode) {
                    if (domNode.tagName === InlineBlot.tagName)
                      return undefined;
                    return _super.formats.call(this, domNode);
                  };
                  InlineBlot.prototype.format = function(name, value) {
                    var _this = this;
                    if (name === this.statics.blotName && !value) {
                      this.children.forEach(function(child) {
                        if (!(child instanceof format_1.default)) {
                          child = child.wrap(InlineBlot.blotName, true);
                        }
                        _this.attributes.copy(child);
                      });
                      this.unwrap();
                    } else {
                      _super.prototype.format.call(this, name, value);
                    }
                  };
                  InlineBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    if (
                      this.formats()[name] != null ||
                      Registry.query(name, Registry.Scope.ATTRIBUTE)
                    ) {
                      var blot = this.isolate(index, length);
                      blot.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(
                        this,
                        index,
                        length,
                        name,
                        value
                      );
                    }
                  };
                  InlineBlot.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    var formats = this.formats();
                    if (Object.keys(formats).length === 0) {
                      return this.unwrap(); // unformatted span
                    }
                    var next = this.next;
                    if (
                      next instanceof InlineBlot &&
                      next.prev === this &&
                      isEqual(formats, next.formats())
                    ) {
                      next.moveChildren(this);
                      next.remove();
                    }
                  };
                  InlineBlot.blotName = 'inline';
                  InlineBlot.scope = Registry.Scope.INLINE_BLOT;
                  InlineBlot.tagName = 'SPAN';
                  return InlineBlot;
                })(format_1.default);
                exports.default = InlineBlot;

                /***/
              },
              /* 47 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var format_1 = __webpack_require__(18);
                var Registry = __webpack_require__(1);
                var BlockBlot = /** @class */ (function(_super) {
                  __extends(BlockBlot, _super);
                  function BlockBlot() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  BlockBlot.formats = function(domNode) {
                    var tagName = Registry.query(BlockBlot.blotName).tagName;
                    if (domNode.tagName === tagName) return undefined;
                    return _super.formats.call(this, domNode);
                  };
                  BlockBlot.prototype.format = function(name, value) {
                    if (Registry.query(name, Registry.Scope.BLOCK) == null) {
                      return;
                    } else if (name === this.statics.blotName && !value) {
                      this.replaceWith(BlockBlot.blotName);
                    } else {
                      _super.prototype.format.call(this, name, value);
                    }
                  };
                  BlockBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    if (Registry.query(name, Registry.Scope.BLOCK) != null) {
                      this.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(
                        this,
                        index,
                        length,
                        name,
                        value
                      );
                    }
                  };
                  BlockBlot.prototype.insertAt = function(index, value, def) {
                    if (
                      def == null ||
                      Registry.query(value, Registry.Scope.INLINE) != null
                    ) {
                      // Insert text or inline
                      _super.prototype.insertAt.call(this, index, value, def);
                    } else {
                      var after = this.split(index);
                      var blot = Registry.create(value, def);
                      after.parent.insertBefore(blot, after);
                    }
                  };
                  BlockBlot.prototype.update = function(mutations, context) {
                    if (navigator.userAgent.match(/Trident/)) {
                      this.build();
                    } else {
                      _super.prototype.update.call(this, mutations, context);
                    }
                  };
                  BlockBlot.blotName = 'block';
                  BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
                  BlockBlot.tagName = 'P';
                  return BlockBlot;
                })(format_1.default);
                exports.default = BlockBlot;

                /***/
              },
              /* 48 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var leaf_1 = __webpack_require__(19);
                var EmbedBlot = /** @class */ (function(_super) {
                  __extends(EmbedBlot, _super);
                  function EmbedBlot() {
                    return (
                      (_super !== null && _super.apply(this, arguments)) || this
                    );
                  }
                  EmbedBlot.formats = function(domNode) {
                    return undefined;
                  };
                  EmbedBlot.prototype.format = function(name, value) {
                    // super.formatAt wraps, which is what we want in general,
                    // but this allows subclasses to overwrite for formats
                    // that just apply to particular embeds
                    _super.prototype.formatAt.call(
                      this,
                      0,
                      this.length(),
                      name,
                      value
                    );
                  };
                  EmbedBlot.prototype.formatAt = function(
                    index,
                    length,
                    name,
                    value
                  ) {
                    if (index === 0 && length === this.length()) {
                      this.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(
                        this,
                        index,
                        length,
                        name,
                        value
                      );
                    }
                  };
                  EmbedBlot.prototype.formats = function() {
                    return this.statics.formats(this.domNode);
                  };
                  return EmbedBlot;
                })(leaf_1.default);
                exports.default = EmbedBlot;

                /***/
              },
              /* 49 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var __extends =
                  (this && this.__extends) ||
                  (function() {
                    var extendStatics =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function(d, b) {
                          d.__proto__ = b;
                        }) ||
                      function(d, b) {
                        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                      };
                    return function(d, b) {
                      extendStatics(d, b);
                      function __() {
                        this.constructor = d;
                      }
                      d.prototype =
                        b === null
                          ? Object.create(b)
                          : ((__.prototype = b.prototype), new __());
                    };
                  })();
                Object.defineProperty(exports, '__esModule', { value: true });
                var leaf_1 = __webpack_require__(19);
                var Registry = __webpack_require__(1);
                var TextBlot = /** @class */ (function(_super) {
                  __extends(TextBlot, _super);
                  function TextBlot(node) {
                    var _this = _super.call(this, node) || this;
                    _this.text = _this.statics.value(_this.domNode);
                    return _this;
                  }
                  TextBlot.create = function(value) {
                    return document.createTextNode(value);
                  };
                  TextBlot.value = function(domNode) {
                    var text = domNode.data;
                    // @ts-ignore
                    if (text['normalize']) text = text['normalize']();
                    return text;
                  };
                  TextBlot.prototype.deleteAt = function(index, length) {
                    this.domNode.data = this.text =
                      this.text.slice(0, index) +
                      this.text.slice(index + length);
                  };
                  TextBlot.prototype.index = function(node, offset) {
                    if (this.domNode === node) {
                      return offset;
                    }
                    return -1;
                  };
                  TextBlot.prototype.insertAt = function(index, value, def) {
                    if (def == null) {
                      this.text =
                        this.text.slice(0, index) +
                        value +
                        this.text.slice(index);
                      this.domNode.data = this.text;
                    } else {
                      _super.prototype.insertAt.call(this, index, value, def);
                    }
                  };
                  TextBlot.prototype.length = function() {
                    return this.text.length;
                  };
                  TextBlot.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    this.text = this.statics.value(this.domNode);
                    if (this.text.length === 0) {
                      this.remove();
                    } else if (
                      this.next instanceof TextBlot &&
                      this.next.prev === this
                    ) {
                      this.insertAt(this.length(), this.next.value());
                      this.next.remove();
                    }
                  };
                  TextBlot.prototype.position = function(index, inclusive) {
                    if (inclusive === void 0) {
                      inclusive = false;
                    }
                    return [this.domNode, index];
                  };
                  TextBlot.prototype.split = function(index, force) {
                    if (force === void 0) {
                      force = false;
                    }
                    if (!force) {
                      if (index === 0) return this;
                      if (index === this.length()) return this.next;
                    }
                    var after = Registry.create(this.domNode.splitText(index));
                    this.parent.insertBefore(after, this.next);
                    this.text = this.statics.value(this.domNode);
                    return after;
                  };
                  TextBlot.prototype.update = function(mutations, context) {
                    var _this = this;
                    if (
                      mutations.some(function(mutation) {
                        return (
                          mutation.type === 'characterData' &&
                          mutation.target === _this.domNode
                        );
                      })
                    ) {
                      this.text = this.statics.value(this.domNode);
                    }
                  };
                  TextBlot.prototype.value = function() {
                    return this.text;
                  };
                  TextBlot.blotName = 'text';
                  TextBlot.scope = Registry.Scope.INLINE_BLOT;
                  return TextBlot;
                })(leaf_1.default);
                exports.default = TextBlot;

                /***/
              },
              /* 50 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                var elem = document.createElement('div');
                elem.classList.toggle('test-class', false);
                if (elem.classList.contains('test-class')) {
                  var _toggle = DOMTokenList.prototype.toggle;
                  DOMTokenList.prototype.toggle = function(token, force) {
                    if (
                      arguments.length > 1 &&
                      !this.contains(token) === !force
                    ) {
                      return force;
                    } else {
                      return _toggle.call(this, token);
                    }
                  };
                }

                if (!String.prototype.startsWith) {
                  String.prototype.startsWith = function(
                    searchString,
                    position
                  ) {
                    position = position || 0;
                    return (
                      this.substr(position, searchString.length) ===
                      searchString
                    );
                  };
                }

                if (!String.prototype.endsWith) {
                  String.prototype.endsWith = function(searchString, position) {
                    var subjectString = this.toString();
                    if (
                      typeof position !== 'number' ||
                      !isFinite(position) ||
                      Math.floor(position) !== position ||
                      position > subjectString.length
                    ) {
                      position = subjectString.length;
                    }
                    position -= searchString.length;
                    var lastIndex = subjectString.indexOf(
                      searchString,
                      position
                    );
                    return lastIndex !== -1 && lastIndex === position;
                  };
                }

                if (!Array.prototype.find) {
                  Object.defineProperty(Array.prototype, 'find', {
                    value: function value(predicate) {
                      if (this === null) {
                        throw new TypeError(
                          'Array.prototype.find called on null or undefined'
                        );
                      }
                      if (typeof predicate !== 'function') {
                        throw new TypeError('predicate must be a function');
                      }
                      var list = Object(this);
                      var length = list.length >>> 0;
                      var thisArg = arguments[1];
                      var value;

                      for (var i = 0; i < length; i++) {
                        value = list[i];
                        if (predicate.call(thisArg, value, i, list)) {
                          return value;
                        }
                      }
                      return undefined;
                    }
                  });
                }

                document.addEventListener('DOMContentLoaded', function() {
                  // Disable resizing in Firefox
                  document.execCommand('enableObjectResizing', false, false);
                  // Disable automatic linkifying in IE11
                  document.execCommand('autoUrlDetect', false, false);
                });

                /***/
              },
              /* 51 */
              /***/ function(module, exports) {
                /**
                 * This library modifies the diff-patch-match library by Neil Fraser
                 * by removing the patch and match functionality and certain advanced
                 * options in the diff function. The original license is as follows:
                 *
                 * ===
                 *
                 * Diff Match and Patch
                 *
                 * Copyright 2006 Google Inc.
                 * http://code.google.com/p/google-diff-match-patch/
                 *
                 * Licensed under the Apache License, Version 2.0 (the "License");
                 * you may not use this file except in compliance with the License.
                 * You may obtain a copy of the License at
                 *
                 *   http://www.apache.org/licenses/LICENSE-2.0
                 *
                 * Unless required by applicable law or agreed to in writing, software
                 * distributed under the License is distributed on an "AS IS" BASIS,
                 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                 * See the License for the specific language governing permissions and
                 * limitations under the License.
                 */

                /**
                 * The data structure representing a diff is an array of tuples:
                 * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
                 * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
                 */
                var DIFF_DELETE = -1;
                var DIFF_INSERT = 1;
                var DIFF_EQUAL = 0;

                /**
                 * Find the differences between two texts.  Simplifies the problem by stripping
                 * any common prefix or suffix off the texts before diffing.
                 * @param {string} text1 Old string to be diffed.
                 * @param {string} text2 New string to be diffed.
                 * @param {Int} cursor_pos Expected edit position in text1 (optional)
                 * @return {Array} Array of diff tuples.
                 */
                function diff_main(text1, text2, cursor_pos) {
                  // Check for equality (speedup).
                  if (text1 == text2) {
                    if (text1) {
                      return [[DIFF_EQUAL, text1]];
                    }
                    return [];
                  }

                  // Check cursor_pos within bounds
                  if (cursor_pos < 0 || text1.length < cursor_pos) {
                    cursor_pos = null;
                  }

                  // Trim off common prefix (speedup).
                  var commonlength = diff_commonPrefix(text1, text2);
                  var commonprefix = text1.substring(0, commonlength);
                  text1 = text1.substring(commonlength);
                  text2 = text2.substring(commonlength);

                  // Trim off common suffix (speedup).
                  commonlength = diff_commonSuffix(text1, text2);
                  var commonsuffix = text1.substring(
                    text1.length - commonlength
                  );
                  text1 = text1.substring(0, text1.length - commonlength);
                  text2 = text2.substring(0, text2.length - commonlength);

                  // Compute the diff on the middle block.
                  var diffs = diff_compute_(text1, text2);

                  // Restore the prefix and suffix.
                  if (commonprefix) {
                    diffs.unshift([DIFF_EQUAL, commonprefix]);
                  }
                  if (commonsuffix) {
                    diffs.push([DIFF_EQUAL, commonsuffix]);
                  }
                  diff_cleanupMerge(diffs);
                  if (cursor_pos != null) {
                    diffs = fix_cursor(diffs, cursor_pos);
                  }
                  diffs = fix_emoji(diffs);
                  return diffs;
                }

                /**
                 * Find the differences between two texts.  Assumes that the texts do not
                 * have any common prefix or suffix.
                 * @param {string} text1 Old string to be diffed.
                 * @param {string} text2 New string to be diffed.
                 * @return {Array} Array of diff tuples.
                 */
                function diff_compute_(text1, text2) {
                  var diffs;

                  if (!text1) {
                    // Just add some text (speedup).
                    return [[DIFF_INSERT, text2]];
                  }

                  if (!text2) {
                    // Just delete some text (speedup).
                    return [[DIFF_DELETE, text1]];
                  }

                  var longtext = text1.length > text2.length ? text1 : text2;
                  var shorttext = text1.length > text2.length ? text2 : text1;
                  var i = longtext.indexOf(shorttext);
                  if (i != -1) {
                    // Shorter text is inside the longer text (speedup).
                    diffs = [
                      [DIFF_INSERT, longtext.substring(0, i)],
                      [DIFF_EQUAL, shorttext],
                      [DIFF_INSERT, longtext.substring(i + shorttext.length)]
                    ];
                    // Swap insertions for deletions if diff is reversed.
                    if (text1.length > text2.length) {
                      diffs[0][0] = diffs[2][0] = DIFF_DELETE;
                    }
                    return diffs;
                  }

                  if (shorttext.length == 1) {
                    // Single character string.
                    // After the previous speedup, the character can't be an equality.
                    return [
                      [DIFF_DELETE, text1],
                      [DIFF_INSERT, text2]
                    ];
                  }

                  // Check to see if the problem can be split in two.
                  var hm = diff_halfMatch_(text1, text2);
                  if (hm) {
                    // A half-match was found, sort out the return data.
                    var text1_a = hm[0];
                    var text1_b = hm[1];
                    var text2_a = hm[2];
                    var text2_b = hm[3];
                    var mid_common = hm[4];
                    // Send both pairs off for separate processing.
                    var diffs_a = diff_main(text1_a, text2_a);
                    var diffs_b = diff_main(text1_b, text2_b);
                    // Merge the results.
                    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
                  }

                  return diff_bisect_(text1, text2);
                }

                /**
                 * Find the 'middle snake' of a diff, split the problem in two
                 * and return the recursively constructed diff.
                 * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
                 * @param {string} text1 Old string to be diffed.
                 * @param {string} text2 New string to be diffed.
                 * @return {Array} Array of diff tuples.
                 * @private
                 */
                function diff_bisect_(text1, text2) {
                  // Cache the text lengths to prevent multiple calls.
                  var text1_length = text1.length;
                  var text2_length = text2.length;
                  var max_d = Math.ceil((text1_length + text2_length) / 2);
                  var v_offset = max_d;
                  var v_length = 2 * max_d;
                  var v1 = new Array(v_length);
                  var v2 = new Array(v_length);
                  // Setting all elements to -1 is faster in Chrome & Firefox than mixing
                  // integers and undefined.
                  for (var x = 0; x < v_length; x++) {
                    v1[x] = -1;
                    v2[x] = -1;
                  }
                  v1[v_offset + 1] = 0;
                  v2[v_offset + 1] = 0;
                  var delta = text1_length - text2_length;
                  // If the total number of characters is odd, then the front path will collide
                  // with the reverse path.
                  var front = delta % 2 != 0;
                  // Offsets for start and end of k loop.
                  // Prevents mapping of space beyond the grid.
                  var k1start = 0;
                  var k1end = 0;
                  var k2start = 0;
                  var k2end = 0;
                  for (var d = 0; d < max_d; d++) {
                    // Walk the front path one step.
                    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
                      var k1_offset = v_offset + k1;
                      var x1;
                      if (
                        k1 == -d ||
                        (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])
                      ) {
                        x1 = v1[k1_offset + 1];
                      } else {
                        x1 = v1[k1_offset - 1] + 1;
                      }
                      var y1 = x1 - k1;
                      while (
                        x1 < text1_length &&
                        y1 < text2_length &&
                        text1.charAt(x1) == text2.charAt(y1)
                      ) {
                        x1++;
                        y1++;
                      }
                      v1[k1_offset] = x1;
                      if (x1 > text1_length) {
                        // Ran off the right of the graph.
                        k1end += 2;
                      } else if (y1 > text2_length) {
                        // Ran off the bottom of the graph.
                        k1start += 2;
                      } else if (front) {
                        var k2_offset = v_offset + delta - k1;
                        if (
                          k2_offset >= 0 &&
                          k2_offset < v_length &&
                          v2[k2_offset] != -1
                        ) {
                          // Mirror x2 onto top-left coordinate system.
                          var x2 = text1_length - v2[k2_offset];
                          if (x1 >= x2) {
                            // Overlap detected.
                            return diff_bisectSplit_(text1, text2, x1, y1);
                          }
                        }
                      }
                    }

                    // Walk the reverse path one step.
                    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
                      var k2_offset = v_offset + k2;
                      var x2;
                      if (
                        k2 == -d ||
                        (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])
                      ) {
                        x2 = v2[k2_offset + 1];
                      } else {
                        x2 = v2[k2_offset - 1] + 1;
                      }
                      var y2 = x2 - k2;
                      while (
                        x2 < text1_length &&
                        y2 < text2_length &&
                        text1.charAt(text1_length - x2 - 1) ==
                          text2.charAt(text2_length - y2 - 1)
                      ) {
                        x2++;
                        y2++;
                      }
                      v2[k2_offset] = x2;
                      if (x2 > text1_length) {
                        // Ran off the left of the graph.
                        k2end += 2;
                      } else if (y2 > text2_length) {
                        // Ran off the top of the graph.
                        k2start += 2;
                      } else if (!front) {
                        var k1_offset = v_offset + delta - k2;
                        if (
                          k1_offset >= 0 &&
                          k1_offset < v_length &&
                          v1[k1_offset] != -1
                        ) {
                          var x1 = v1[k1_offset];
                          var y1 = v_offset + x1 - k1_offset;
                          // Mirror x2 onto top-left coordinate system.
                          x2 = text1_length - x2;
                          if (x1 >= x2) {
                            // Overlap detected.
                            return diff_bisectSplit_(text1, text2, x1, y1);
                          }
                        }
                      }
                    }
                  }
                  // Diff took too long and hit the deadline or
                  // number of diffs equals number of characters, no commonality at all.
                  return [
                    [DIFF_DELETE, text1],
                    [DIFF_INSERT, text2]
                  ];
                }

                /**
                 * Given the location of the 'middle snake', split the diff in two parts
                 * and recurse.
                 * @param {string} text1 Old string to be diffed.
                 * @param {string} text2 New string to be diffed.
                 * @param {number} x Index of split point in text1.
                 * @param {number} y Index of split point in text2.
                 * @return {Array} Array of diff tuples.
                 */
                function diff_bisectSplit_(text1, text2, x, y) {
                  var text1a = text1.substring(0, x);
                  var text2a = text2.substring(0, y);
                  var text1b = text1.substring(x);
                  var text2b = text2.substring(y);

                  // Compute both diffs serially.
                  var diffs = diff_main(text1a, text2a);
                  var diffsb = diff_main(text1b, text2b);

                  return diffs.concat(diffsb);
                }

                /**
                 * Determine the common prefix of two strings.
                 * @param {string} text1 First string.
                 * @param {string} text2 Second string.
                 * @return {number} The number of characters common to the start of each
                 *     string.
                 */
                function diff_commonPrefix(text1, text2) {
                  // Quick check for common null cases.
                  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
                    return 0;
                  }
                  // Binary search.
                  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
                  var pointermin = 0;
                  var pointermax = Math.min(text1.length, text2.length);
                  var pointermid = pointermax;
                  var pointerstart = 0;
                  while (pointermin < pointermid) {
                    if (
                      text1.substring(pointerstart, pointermid) ==
                      text2.substring(pointerstart, pointermid)
                    ) {
                      pointermin = pointermid;
                      pointerstart = pointermin;
                    } else {
                      pointermax = pointermid;
                    }
                    pointermid = Math.floor(
                      (pointermax - pointermin) / 2 + pointermin
                    );
                  }
                  return pointermid;
                }

                /**
                 * Determine the common suffix of two strings.
                 * @param {string} text1 First string.
                 * @param {string} text2 Second string.
                 * @return {number} The number of characters common to the end of each string.
                 */
                function diff_commonSuffix(text1, text2) {
                  // Quick check for common null cases.
                  if (
                    !text1 ||
                    !text2 ||
                    text1.charAt(text1.length - 1) !=
                      text2.charAt(text2.length - 1)
                  ) {
                    return 0;
                  }
                  // Binary search.
                  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
                  var pointermin = 0;
                  var pointermax = Math.min(text1.length, text2.length);
                  var pointermid = pointermax;
                  var pointerend = 0;
                  while (pointermin < pointermid) {
                    if (
                      text1.substring(
                        text1.length - pointermid,
                        text1.length - pointerend
                      ) ==
                      text2.substring(
                        text2.length - pointermid,
                        text2.length - pointerend
                      )
                    ) {
                      pointermin = pointermid;
                      pointerend = pointermin;
                    } else {
                      pointermax = pointermid;
                    }
                    pointermid = Math.floor(
                      (pointermax - pointermin) / 2 + pointermin
                    );
                  }
                  return pointermid;
                }

                /**
                 * Do the two texts share a substring which is at least half the length of the
                 * longer text?
                 * This speedup can produce non-minimal diffs.
                 * @param {string} text1 First string.
                 * @param {string} text2 Second string.
                 * @return {Array.<string>} Five element Array, containing the prefix of
                 *     text1, the suffix of text1, the prefix of text2, the suffix of
                 *     text2 and the common middle.  Or null if there was no match.
                 */
                function diff_halfMatch_(text1, text2) {
                  var longtext = text1.length > text2.length ? text1 : text2;
                  var shorttext = text1.length > text2.length ? text2 : text1;
                  if (
                    longtext.length < 4 ||
                    shorttext.length * 2 < longtext.length
                  ) {
                    return null; // Pointless.
                  }

                  /**
                   * Does a substring of shorttext exist within longtext such that the substring
                   * is at least half the length of longtext?
                   * Closure, but does not reference any external variables.
                   * @param {string} longtext Longer string.
                   * @param {string} shorttext Shorter string.
                   * @param {number} i Start index of quarter length substring within longtext.
                   * @return {Array.<string>} Five element Array, containing the prefix of
                   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
                   *     of shorttext and the common middle.  Or null if there was no match.
                   * @private
                   */
                  function diff_halfMatchI_(longtext, shorttext, i) {
                    // Start with a 1/4 length substring at position i as a seed.
                    var seed = longtext.substring(
                      i,
                      i + Math.floor(longtext.length / 4)
                    );
                    var j = -1;
                    var best_common = '';
                    var best_longtext_a,
                      best_longtext_b,
                      best_shorttext_a,
                      best_shorttext_b;
                    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
                      var prefixLength = diff_commonPrefix(
                        longtext.substring(i),
                        shorttext.substring(j)
                      );
                      var suffixLength = diff_commonSuffix(
                        longtext.substring(0, i),
                        shorttext.substring(0, j)
                      );
                      if (best_common.length < suffixLength + prefixLength) {
                        best_common =
                          shorttext.substring(j - suffixLength, j) +
                          shorttext.substring(j, j + prefixLength);
                        best_longtext_a = longtext.substring(
                          0,
                          i - suffixLength
                        );
                        best_longtext_b = longtext.substring(i + prefixLength);
                        best_shorttext_a = shorttext.substring(
                          0,
                          j - suffixLength
                        );
                        best_shorttext_b = shorttext.substring(
                          j + prefixLength
                        );
                      }
                    }
                    if (best_common.length * 2 >= longtext.length) {
                      return [
                        best_longtext_a,
                        best_longtext_b,
                        best_shorttext_a,
                        best_shorttext_b,
                        best_common
                      ];
                    } else {
                      return null;
                    }
                  }

                  // First check if the second quarter is the seed for a half-match.
                  var hm1 = diff_halfMatchI_(
                    longtext,
                    shorttext,
                    Math.ceil(longtext.length / 4)
                  );
                  // Check again based on the third quarter.
                  var hm2 = diff_halfMatchI_(
                    longtext,
                    shorttext,
                    Math.ceil(longtext.length / 2)
                  );
                  var hm;
                  if (!hm1 && !hm2) {
                    return null;
                  } else if (!hm2) {
                    hm = hm1;
                  } else if (!hm1) {
                    hm = hm2;
                  } else {
                    // Both matched.  Select the longest.
                    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
                  }

                  // A half-match was found, sort out the return data.
                  var text1_a, text1_b, text2_a, text2_b;
                  if (text1.length > text2.length) {
                    text1_a = hm[0];
                    text1_b = hm[1];
                    text2_a = hm[2];
                    text2_b = hm[3];
                  } else {
                    text2_a = hm[0];
                    text2_b = hm[1];
                    text1_a = hm[2];
                    text1_b = hm[3];
                  }
                  var mid_common = hm[4];
                  return [text1_a, text1_b, text2_a, text2_b, mid_common];
                }

                /**
                 * Reorder and merge like edit sections.  Merge equalities.
                 * Any edit section can move as long as it doesn't cross an equality.
                 * @param {Array} diffs Array of diff tuples.
                 */
                function diff_cleanupMerge(diffs) {
                  diffs.push([DIFF_EQUAL, '']); // Add a dummy entry at the end.
                  var pointer = 0;
                  var count_delete = 0;
                  var count_insert = 0;
                  var text_delete = '';
                  var text_insert = '';
                  var commonlength;
                  while (pointer < diffs.length) {
                    switch (diffs[pointer][0]) {
                      case DIFF_INSERT:
                        count_insert++;
                        text_insert += diffs[pointer][1];
                        pointer++;
                        break;
                      case DIFF_DELETE:
                        count_delete++;
                        text_delete += diffs[pointer][1];
                        pointer++;
                        break;
                      case DIFF_EQUAL:
                        // Upon reaching an equality, check for prior redundancies.
                        if (count_delete + count_insert > 1) {
                          if (count_delete !== 0 && count_insert !== 0) {
                            // Factor out any common prefixies.
                            commonlength = diff_commonPrefix(
                              text_insert,
                              text_delete
                            );
                            if (commonlength !== 0) {
                              if (
                                pointer - count_delete - count_insert > 0 &&
                                diffs[
                                  pointer - count_delete - count_insert - 1
                                ][0] == DIFF_EQUAL
                              ) {
                                diffs[
                                  pointer - count_delete - count_insert - 1
                                ][1] += text_insert.substring(0, commonlength);
                              } else {
                                diffs.splice(0, 0, [
                                  DIFF_EQUAL,
                                  text_insert.substring(0, commonlength)
                                ]);
                                pointer++;
                              }
                              text_insert = text_insert.substring(commonlength);
                              text_delete = text_delete.substring(commonlength);
                            }
                            // Factor out any common suffixies.
                            commonlength = diff_commonSuffix(
                              text_insert,
                              text_delete
                            );
                            if (commonlength !== 0) {
                              diffs[pointer][1] =
                                text_insert.substring(
                                  text_insert.length - commonlength
                                ) + diffs[pointer][1];
                              text_insert = text_insert.substring(
                                0,
                                text_insert.length - commonlength
                              );
                              text_delete = text_delete.substring(
                                0,
                                text_delete.length - commonlength
                              );
                            }
                          }
                          // Delete the offending records and add the merged ones.
                          if (count_delete === 0) {
                            diffs.splice(
                              pointer - count_insert,
                              count_delete + count_insert,
                              [DIFF_INSERT, text_insert]
                            );
                          } else if (count_insert === 0) {
                            diffs.splice(
                              pointer - count_delete,
                              count_delete + count_insert,
                              [DIFF_DELETE, text_delete]
                            );
                          } else {
                            diffs.splice(
                              pointer - count_delete - count_insert,
                              count_delete + count_insert,
                              [DIFF_DELETE, text_delete],
                              [DIFF_INSERT, text_insert]
                            );
                          }
                          pointer =
                            pointer -
                            count_delete -
                            count_insert +
                            (count_delete ? 1 : 0) +
                            (count_insert ? 1 : 0) +
                            1;
                        } else if (
                          pointer !== 0 &&
                          diffs[pointer - 1][0] == DIFF_EQUAL
                        ) {
                          // Merge this equality with the previous one.
                          diffs[pointer - 1][1] += diffs[pointer][1];
                          diffs.splice(pointer, 1);
                        } else {
                          pointer++;
                        }
                        count_insert = 0;
                        count_delete = 0;
                        text_delete = '';
                        text_insert = '';
                        break;
                    }
                  }
                  if (diffs[diffs.length - 1][1] === '') {
                    diffs.pop(); // Remove the dummy entry at the end.
                  }

                  // Second pass: look for single edits surrounded on both sides by equalities
                  // which can be shifted sideways to eliminate an equality.
                  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
                  var changes = false;
                  pointer = 1;
                  // Intentionally ignore the first and last element (don't need checking).
                  while (pointer < diffs.length - 1) {
                    if (
                      diffs[pointer - 1][0] == DIFF_EQUAL &&
                      diffs[pointer + 1][0] == DIFF_EQUAL
                    ) {
                      // This is a single edit surrounded by equalities.
                      if (
                        diffs[pointer][1].substring(
                          diffs[pointer][1].length -
                            diffs[pointer - 1][1].length
                        ) == diffs[pointer - 1][1]
                      ) {
                        // Shift the edit over the previous equality.
                        diffs[pointer][1] =
                          diffs[pointer - 1][1] +
                          diffs[pointer][1].substring(
                            0,
                            diffs[pointer][1].length -
                              diffs[pointer - 1][1].length
                          );
                        diffs[pointer + 1][1] =
                          diffs[pointer - 1][1] + diffs[pointer + 1][1];
                        diffs.splice(pointer - 1, 1);
                        changes = true;
                      } else if (
                        diffs[pointer][1].substring(
                          0,
                          diffs[pointer + 1][1].length
                        ) == diffs[pointer + 1][1]
                      ) {
                        // Shift the edit over the next equality.
                        diffs[pointer - 1][1] += diffs[pointer + 1][1];
                        diffs[pointer][1] =
                          diffs[pointer][1].substring(
                            diffs[pointer + 1][1].length
                          ) + diffs[pointer + 1][1];
                        diffs.splice(pointer + 1, 1);
                        changes = true;
                      }
                    }
                    pointer++;
                  }
                  // If shifts were made, the diff needs reordering and another shift sweep.
                  if (changes) {
                    diff_cleanupMerge(diffs);
                  }
                }

                var diff = diff_main;
                diff.INSERT = DIFF_INSERT;
                diff.DELETE = DIFF_DELETE;
                diff.EQUAL = DIFF_EQUAL;

                module.exports = diff;

                /*
                 * Modify a diff such that the cursor position points to the start of a change:
                 * E.g.
                 *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
                 *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
                 *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
                 *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
                 *
                 * @param {Array} diffs Array of diff tuples
                 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
                 * @return {Array} A tuple [cursor location in the modified diff, modified diff]
                 */
                function cursor_normalize_diff(diffs, cursor_pos) {
                  if (cursor_pos === 0) {
                    return [DIFF_EQUAL, diffs];
                  }
                  for (var current_pos = 0, i = 0; i < diffs.length; i++) {
                    var d = diffs[i];
                    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
                      var next_pos = current_pos + d[1].length;
                      if (cursor_pos === next_pos) {
                        return [i + 1, diffs];
                      } else if (cursor_pos < next_pos) {
                        // copy to prevent side effects
                        diffs = diffs.slice();
                        // split d into two diff changes
                        var split_pos = cursor_pos - current_pos;
                        var d_left = [d[0], d[1].slice(0, split_pos)];
                        var d_right = [d[0], d[1].slice(split_pos)];
                        diffs.splice(i, 1, d_left, d_right);
                        return [i + 1, diffs];
                      } else {
                        current_pos = next_pos;
                      }
                    }
                  }
                  throw new Error('cursor_pos is out of bounds!');
                }

                /*
                 * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
                 *
                 * Case 1)
                 *   Check if a naive shift is possible:
                 *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
                 *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
                 * Case 2)
                 *   Check if the following shifts are possible:
                 *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
                 *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
                 *         ^            ^
                 *         d          d_next
                 *
                 * @param {Array} diffs Array of diff tuples
                 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
                 * @return {Array} Array of diff tuples
                 */
                function fix_cursor(diffs, cursor_pos) {
                  var norm = cursor_normalize_diff(diffs, cursor_pos);
                  var ndiffs = norm[1];
                  var cursor_pointer = norm[0];
                  var d = ndiffs[cursor_pointer];
                  var d_next = ndiffs[cursor_pointer + 1];

                  if (d == null) {
                    // Text was deleted from end of original string,
                    // cursor is now out of bounds in new string
                    return diffs;
                  } else if (d[0] !== DIFF_EQUAL) {
                    // A modification happened at the cursor location.
                    // This is the expected outcome, so we can return the original diff.
                    return diffs;
                  } else {
                    if (
                      d_next != null &&
                      d[1] + d_next[1] === d_next[1] + d[1]
                    ) {
                      // Case 1)
                      // It is possible to perform a naive shift
                      ndiffs.splice(cursor_pointer, 2, d_next, d);
                      return merge_tuples(ndiffs, cursor_pointer, 2);
                    } else if (
                      d_next != null &&
                      d_next[1].indexOf(d[1]) === 0
                    ) {
                      // Case 2)
                      // d[1] is a prefix of d_next[1]
                      // We can assume that d_next[0] !== 0, since d[0] === 0
                      // Shift edit locations..
                      ndiffs.splice(
                        cursor_pointer,
                        2,
                        [d_next[0], d[1]],
                        [0, d[1]]
                      );
                      var suffix = d_next[1].slice(d[1].length);
                      if (suffix.length > 0) {
                        ndiffs.splice(cursor_pointer + 2, 0, [
                          d_next[0],
                          suffix
                        ]);
                      }
                      return merge_tuples(ndiffs, cursor_pointer, 3);
                    } else {
                      // Not possible to perform any modification
                      return diffs;
                    }
                  }
                }

                /*
                 * Check diff did not split surrogate pairs.
                 * Ex. [0, '\uD83D'], [-1, '\uDC36'], [1, '\uDC2F'] -> [-1, '\uD83D\uDC36'], [1, '\uD83D\uDC2F']
                 *     '\uD83D\uDC36' === '🐶', '\uD83D\uDC2F' === '🐯'
                 *
                 * @param {Array} diffs Array of diff tuples
                 * @return {Array} Array of diff tuples
                 */
                function fix_emoji(diffs) {
                  var compact = false;
                  var starts_with_pair_end = function(str) {
                    return (
                      str.charCodeAt(0) >= 0xdc00 && str.charCodeAt(0) <= 0xdfff
                    );
                  };
                  var ends_with_pair_start = function(str) {
                    return (
                      str.charCodeAt(str.length - 1) >= 0xd800 &&
                      str.charCodeAt(str.length - 1) <= 0xdbff
                    );
                  };
                  for (var i = 2; i < diffs.length; i += 1) {
                    if (
                      diffs[i - 2][0] === DIFF_EQUAL &&
                      ends_with_pair_start(diffs[i - 2][1]) &&
                      diffs[i - 1][0] === DIFF_DELETE &&
                      starts_with_pair_end(diffs[i - 1][1]) &&
                      diffs[i][0] === DIFF_INSERT &&
                      starts_with_pair_end(diffs[i][1])
                    ) {
                      compact = true;

                      diffs[i - 1][1] =
                        diffs[i - 2][1].slice(-1) + diffs[i - 1][1];
                      diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];

                      diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);
                    }
                  }
                  if (!compact) {
                    return diffs;
                  }
                  var fixed_diffs = [];
                  for (var i = 0; i < diffs.length; i += 1) {
                    if (diffs[i][1].length > 0) {
                      fixed_diffs.push(diffs[i]);
                    }
                  }
                  return fixed_diffs;
                }

                /*
                 * Try to merge tuples with their neigbors in a given range.
                 * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
                 *
                 * @param {Array} diffs Array of diff tuples.
                 * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
                 * @param {Int} length Number of consecutive elements to check.
                 * @return {Array} Array of merged diff tuples.
                 */
                function merge_tuples(diffs, start, length) {
                  // Check from (start-1) to (start+length).
                  for (
                    var i = start + length - 1;
                    i >= 0 && i >= start - 1;
                    i--
                  ) {
                    if (i + 1 < diffs.length) {
                      var left_d = diffs[i];
                      var right_d = diffs[i + 1];
                      if (left_d[0] === right_d[1]) {
                        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
                      }
                    }
                  }
                  return diffs;
                }

                /***/
              },
              /* 52 */
              /***/ function(module, exports) {
                exports = module.exports =
                  typeof Object.keys === 'function' ? Object.keys : shim;

                exports.shim = shim;
                function shim(obj) {
                  var keys = [];
                  for (var key in obj) keys.push(key);
                  return keys;
                }

                /***/
              },
              /* 53 */
              /***/ function(module, exports) {
                var supportsArgumentsClass =
                  (function() {
                    return Object.prototype.toString.call(arguments);
                  })() == '[object Arguments]';

                exports = module.exports = supportsArgumentsClass
                  ? supported
                  : unsupported;

                exports.supported = supported;
                function supported(object) {
                  return (
                    Object.prototype.toString.call(object) ==
                    '[object Arguments]'
                  );
                }

                exports.unsupported = unsupported;
                function unsupported(object) {
                  return (
                    (object &&
                      typeof object == 'object' &&
                      typeof object.length == 'number' &&
                      Object.prototype.hasOwnProperty.call(object, 'callee') &&
                      !Object.prototype.propertyIsEnumerable.call(
                        object,
                        'callee'
                      )) ||
                    false
                  );
                }

                /***/
              },
              /* 54 */
              /***/ function(module, exports) {
                'use strict';

                var has = Object.prototype.hasOwnProperty,
                  prefix = '~';

                /**
                 * Constructor to create a storage for our `EE` objects.
                 * An `Events` instance is a plain object whose properties are event names.
                 *
                 * @constructor
                 * @api private
                 */
                function Events() {}

                //
                // We try to not inherit from `Object.prototype`. In some engines creating an
                // instance in this way is faster than calling `Object.create(null)` directly.
                // If `Object.create(null)` is not supported we prefix the event names with a
                // character to make sure that the built-in object properties are not
                // overridden or used as an attack vector.
                //
                if (Object.create) {
                  Events.prototype = Object.create(null);

                  //
                  // This hack is needed because the `__proto__` property is still inherited in
                  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
                  //
                  if (!new Events().__proto__) prefix = false;
                }

                /**
                 * Representation of a single event listener.
                 *
                 * @param {Function} fn The listener function.
                 * @param {Mixed} context The context to invoke the listener with.
                 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
                 * @constructor
                 * @api private
                 */
                function EE(fn, context, once) {
                  this.fn = fn;
                  this.context = context;
                  this.once = once || false;
                }

                /**
                 * Minimal `EventEmitter` interface that is molded against the Node.js
                 * `EventEmitter` interface.
                 *
                 * @constructor
                 * @api public
                 */
                function EventEmitter() {
                  this._events = new Events();
                  this._eventsCount = 0;
                }

                /**
                 * Return an array listing the events for which the emitter has registered
                 * listeners.
                 *
                 * @returns {Array}
                 * @api public
                 */
                EventEmitter.prototype.eventNames = function eventNames() {
                  var names = [],
                    events,
                    name;

                  if (this._eventsCount === 0) return names;

                  for (name in (events = this._events)) {
                    if (has.call(events, name))
                      names.push(prefix ? name.slice(1) : name);
                  }

                  if (Object.getOwnPropertySymbols) {
                    return names.concat(Object.getOwnPropertySymbols(events));
                  }

                  return names;
                };

                /**
                 * Return the listeners registered for a given event.
                 *
                 * @param {String|Symbol} event The event name.
                 * @param {Boolean} exists Only check if there are listeners.
                 * @returns {Array|Boolean}
                 * @api public
                 */
                EventEmitter.prototype.listeners = function listeners(
                  event,
                  exists
                ) {
                  var evt = prefix ? prefix + event : event,
                    available = this._events[evt];

                  if (exists) return !!available;
                  if (!available) return [];
                  if (available.fn) return [available.fn];

                  for (
                    var i = 0, l = available.length, ee = new Array(l);
                    i < l;
                    i++
                  ) {
                    ee[i] = available[i].fn;
                  }

                  return ee;
                };

                /**
                 * Calls each of the listeners registered for a given event.
                 *
                 * @param {String|Symbol} event The event name.
                 * @returns {Boolean} `true` if the event had listeners, else `false`.
                 * @api public
                 */
                EventEmitter.prototype.emit = function emit(
                  event,
                  a1,
                  a2,
                  a3,
                  a4,
                  a5
                ) {
                  var evt = prefix ? prefix + event : event;

                  if (!this._events[evt]) return false;

                  var listeners = this._events[evt],
                    len = arguments.length,
                    args,
                    i;

                  if (listeners.fn) {
                    if (listeners.once)
                      this.removeListener(event, listeners.fn, undefined, true);

                    switch (len) {
                      case 1:
                        return listeners.fn.call(listeners.context), true;
                      case 2:
                        return listeners.fn.call(listeners.context, a1), true;
                      case 3:
                        return (
                          listeners.fn.call(listeners.context, a1, a2), true
                        );
                      case 4:
                        return (
                          listeners.fn.call(listeners.context, a1, a2, a3), true
                        );
                      case 5:
                        return (
                          listeners.fn.call(listeners.context, a1, a2, a3, a4),
                          true
                        );
                      case 6:
                        return (
                          listeners.fn.call(
                            listeners.context,
                            a1,
                            a2,
                            a3,
                            a4,
                            a5
                          ),
                          true
                        );
                    }

                    for (i = 1, args = new Array(len - 1); i < len; i++) {
                      args[i - 1] = arguments[i];
                    }

                    listeners.fn.apply(listeners.context, args);
                  } else {
                    var length = listeners.length,
                      j;

                    for (i = 0; i < length; i++) {
                      if (listeners[i].once)
                        this.removeListener(
                          event,
                          listeners[i].fn,
                          undefined,
                          true
                        );

                      switch (len) {
                        case 1:
                          listeners[i].fn.call(listeners[i].context);
                          break;
                        case 2:
                          listeners[i].fn.call(listeners[i].context, a1);
                          break;
                        case 3:
                          listeners[i].fn.call(listeners[i].context, a1, a2);
                          break;
                        case 4:
                          listeners[i].fn.call(
                            listeners[i].context,
                            a1,
                            a2,
                            a3
                          );
                          break;
                        default:
                          if (!args)
                            for (
                              j = 1, args = new Array(len - 1);
                              j < len;
                              j++
                            ) {
                              args[j - 1] = arguments[j];
                            }

                          listeners[i].fn.apply(listeners[i].context, args);
                      }
                    }
                  }

                  return true;
                };

                /**
                 * Add a listener for a given event.
                 *
                 * @param {String|Symbol} event The event name.
                 * @param {Function} fn The listener function.
                 * @param {Mixed} [context=this] The context to invoke the listener with.
                 * @returns {EventEmitter} `this`.
                 * @api public
                 */
                EventEmitter.prototype.on = function on(event, fn, context) {
                  var listener = new EE(fn, context || this),
                    evt = prefix ? prefix + event : event;

                  if (!this._events[evt])
                    (this._events[evt] = listener), this._eventsCount++;
                  else if (!this._events[evt].fn)
                    this._events[evt].push(listener);
                  else this._events[evt] = [this._events[evt], listener];

                  return this;
                };

                /**
                 * Add a one-time listener for a given event.
                 *
                 * @param {String|Symbol} event The event name.
                 * @param {Function} fn The listener function.
                 * @param {Mixed} [context=this] The context to invoke the listener with.
                 * @returns {EventEmitter} `this`.
                 * @api public
                 */
                EventEmitter.prototype.once = function once(
                  event,
                  fn,
                  context
                ) {
                  var listener = new EE(fn, context || this, true),
                    evt = prefix ? prefix + event : event;

                  if (!this._events[evt])
                    (this._events[evt] = listener), this._eventsCount++;
                  else if (!this._events[evt].fn)
                    this._events[evt].push(listener);
                  else this._events[evt] = [this._events[evt], listener];

                  return this;
                };

                /**
                 * Remove the listeners of a given event.
                 *
                 * @param {String|Symbol} event The event name.
                 * @param {Function} fn Only remove the listeners that match this function.
                 * @param {Mixed} context Only remove the listeners that have this context.
                 * @param {Boolean} once Only remove one-time listeners.
                 * @returns {EventEmitter} `this`.
                 * @api public
                 */
                EventEmitter.prototype.removeListener = function removeListener(
                  event,
                  fn,
                  context,
                  once
                ) {
                  var evt = prefix ? prefix + event : event;

                  if (!this._events[evt]) return this;
                  if (!fn) {
                    if (--this._eventsCount === 0) this._events = new Events();
                    else delete this._events[evt];
                    return this;
                  }

                  var listeners = this._events[evt];

                  if (listeners.fn) {
                    if (
                      listeners.fn === fn &&
                      (!once || listeners.once) &&
                      (!context || listeners.context === context)
                    ) {
                      if (--this._eventsCount === 0)
                        this._events = new Events();
                      else delete this._events[evt];
                    }
                  } else {
                    for (
                      var i = 0, events = [], length = listeners.length;
                      i < length;
                      i++
                    ) {
                      if (
                        listeners[i].fn !== fn ||
                        (once && !listeners[i].once) ||
                        (context && listeners[i].context !== context)
                      ) {
                        events.push(listeners[i]);
                      }
                    }

                    //
                    // Reset the array, or remove it completely if we have no more listeners.
                    //
                    if (events.length)
                      this._events[evt] =
                        events.length === 1 ? events[0] : events;
                    else if (--this._eventsCount === 0)
                      this._events = new Events();
                    else delete this._events[evt];
                  }

                  return this;
                };

                /**
                 * Remove all listeners, or those of the specified event.
                 *
                 * @param {String|Symbol} [event] The event name.
                 * @returns {EventEmitter} `this`.
                 * @api public
                 */
                EventEmitter.prototype.removeAllListeners = function removeAllListeners(
                  event
                ) {
                  var evt;

                  if (event) {
                    evt = prefix ? prefix + event : event;
                    if (this._events[evt]) {
                      if (--this._eventsCount === 0)
                        this._events = new Events();
                      else delete this._events[evt];
                    }
                  } else {
                    this._events = new Events();
                    this._eventsCount = 0;
                  }

                  return this;
                };

                //
                // Alias methods names because people roll like that.
                //
                EventEmitter.prototype.off =
                  EventEmitter.prototype.removeListener;
                EventEmitter.prototype.addListener = EventEmitter.prototype.on;

                //
                // This function doesn't apply anymore.
                //
                EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
                  return this;
                };

                //
                // Expose the prefix.
                //
                EventEmitter.prefixed = prefix;

                //
                // Allow `EventEmitter` to be imported as module namespace.
                //
                EventEmitter.EventEmitter = EventEmitter;

                //
                // Expose the module.
                //
                if ('undefined' !== typeof module) {
                  module.exports = EventEmitter;
                }

                /***/
              },
              /* 55 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;

                var _typeof =
                  typeof Symbol === 'function' &&
                  typeof Symbol.iterator === 'symbol'
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === 'function' &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? 'symbol'
                          : typeof obj;
                      };

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _extend2 = __webpack_require__(3);

                var _extend3 = _interopRequireDefault(_extend2);

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                var _align = __webpack_require__(36);

                var _background = __webpack_require__(37);

                var _code = __webpack_require__(13);

                var _code2 = _interopRequireDefault(_code);

                var _color = __webpack_require__(26);

                var _direction = __webpack_require__(38);

                var _font = __webpack_require__(39);

                var _size = __webpack_require__(40);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var debug = (0, _logger2.default)('quill:clipboard');

                var DOM_KEY = '__ql-matcher';

                var CLIPBOARD_CONFIG = [
                  [Node.TEXT_NODE, matchText],
                  [Node.TEXT_NODE, matchNewline],
                  ['br', matchBreak],
                  [Node.ELEMENT_NODE, matchNewline],
                  [Node.ELEMENT_NODE, matchBlot],
                  [Node.ELEMENT_NODE, matchSpacing],
                  [Node.ELEMENT_NODE, matchAttributor],
                  [Node.ELEMENT_NODE, matchStyles],
                  ['li', matchIndent],
                  ['b', matchAlias.bind(matchAlias, 'bold')],
                  ['i', matchAlias.bind(matchAlias, 'italic')],
                  ['style', matchIgnore]
                ];

                var ATTRIBUTE_ATTRIBUTORS = [
                  _align.AlignAttribute,
                  _direction.DirectionAttribute
                ].reduce(function(memo, attr) {
                  memo[attr.keyName] = attr;
                  return memo;
                }, {});

                var STYLE_ATTRIBUTORS = [
                  _align.AlignStyle,
                  _background.BackgroundStyle,
                  _color.ColorStyle,
                  _direction.DirectionStyle,
                  _font.FontStyle,
                  _size.SizeStyle
                ].reduce(function(memo, attr) {
                  memo[attr.keyName] = attr;
                  return memo;
                }, {});

                var Clipboard = (function(_Module) {
                  _inherits(Clipboard, _Module);

                  function Clipboard(quill, options) {
                    _classCallCheck(this, Clipboard);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)
                      ).call(this, quill, options)
                    );

                    _this.quill.root.addEventListener(
                      'paste',
                      _this.onPaste.bind(_this)
                    );
                    _this.container = _this.quill.addContainer('ql-clipboard');
                    _this.container.setAttribute('contenteditable', true);
                    _this.container.setAttribute('tabindex', -1);
                    _this.matchers = [];
                    CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(
                      function(_ref) {
                        var _ref2 = _slicedToArray(_ref, 2),
                          selector = _ref2[0],
                          matcher = _ref2[1];

                        if (!options.matchVisual && matcher === matchSpacing)
                          return;
                        _this.addMatcher(selector, matcher);
                      }
                    );
                    return _this;
                  }

                  _createClass(Clipboard, [
                    {
                      key: 'addMatcher',
                      value: function addMatcher(selector, matcher) {
                        this.matchers.push([selector, matcher]);
                      }
                    },
                    {
                      key: 'convert',
                      value: function convert(html) {
                        if (typeof html === 'string') {
                          this.container.innerHTML = html.replace(
                            /\>\r?\n +\</g,
                            '><'
                          ); // Remove spaces between tags
                          return this.convert();
                        }
                        var formats = this.quill.getFormat(
                          this.quill.selection.savedRange.index
                        );
                        if (formats[_code2.default.blotName]) {
                          var text = this.container.innerText;
                          this.container.innerHTML = '';
                          return new _quillDelta2.default().insert(
                            text,
                            _defineProperty(
                              {},
                              _code2.default.blotName,
                              formats[_code2.default.blotName]
                            )
                          );
                        }

                        var _prepareMatching = this.prepareMatching(),
                          _prepareMatching2 = _slicedToArray(
                            _prepareMatching,
                            2
                          ),
                          elementMatchers = _prepareMatching2[0],
                          textMatchers = _prepareMatching2[1];

                        var delta = traverse(
                          this.container,
                          elementMatchers,
                          textMatchers
                        );
                        // Remove trailing newline
                        if (
                          deltaEndsWith(delta, '\n') &&
                          delta.ops[delta.ops.length - 1].attributes == null
                        ) {
                          delta = delta.compose(
                            new _quillDelta2.default()
                              .retain(delta.length() - 1)
                              .delete(1)
                          );
                        }
                        debug.log('convert', this.container.innerHTML, delta);
                        this.container.innerHTML = '';
                        return delta;
                      }
                    },
                    {
                      key: 'dangerouslyPasteHTML',
                      value: function dangerouslyPasteHTML(index, html) {
                        var source =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : _quill2.default.sources.API;

                        if (typeof index === 'string') {
                          this.quill.setContents(this.convert(index), html);
                          this.quill.setSelection(
                            0,
                            _quill2.default.sources.SILENT
                          );
                        } else {
                          var paste = this.convert(html);
                          this.quill.updateContents(
                            new _quillDelta2.default()
                              .retain(index)
                              .concat(paste),
                            source
                          );
                          this.quill.setSelection(
                            index + paste.length(),
                            _quill2.default.sources.SILENT
                          );
                        }
                      }
                    },
                    {
                      key: 'onPaste',
                      value: function onPaste(e) {
                        var _this2 = this;

                        if (e.defaultPrevented || !this.quill.isEnabled())
                          return;
                        var range = this.quill.getSelection();
                        var delta = new _quillDelta2.default().retain(
                          range.index
                        );
                        var scrollTop = this.quill.scrollingContainer.scrollTop;
                        this.container.focus();
                        this.quill.selection.update(
                          _quill2.default.sources.SILENT
                        );
                        setTimeout(function() {
                          delta = delta
                            .concat(_this2.convert())
                            .delete(range.length);
                          _this2.quill.updateContents(
                            delta,
                            _quill2.default.sources.USER
                          );
                          // range.length contributes to delta.length()
                          _this2.quill.setSelection(
                            delta.length() - range.length,
                            _quill2.default.sources.SILENT
                          );
                          _this2.quill.scrollingContainer.scrollTop = scrollTop;
                          _this2.quill.focus();
                        }, 1);
                      }
                    },
                    {
                      key: 'prepareMatching',
                      value: function prepareMatching() {
                        var _this3 = this;

                        var elementMatchers = [],
                          textMatchers = [];
                        this.matchers.forEach(function(pair) {
                          var _pair = _slicedToArray(pair, 2),
                            selector = _pair[0],
                            matcher = _pair[1];

                          switch (selector) {
                            case Node.TEXT_NODE:
                              textMatchers.push(matcher);
                              break;
                            case Node.ELEMENT_NODE:
                              elementMatchers.push(matcher);
                              break;
                            default:
                              [].forEach.call(
                                _this3.container.querySelectorAll(selector),
                                function(node) {
                                  // TODO use weakmap
                                  node[DOM_KEY] = node[DOM_KEY] || [];
                                  node[DOM_KEY].push(matcher);
                                }
                              );
                              break;
                          }
                        });
                        return [elementMatchers, textMatchers];
                      }
                    }
                  ]);

                  return Clipboard;
                })(_module2.default);

                Clipboard.DEFAULTS = {
                  matchers: [],
                  matchVisual: true
                };

                function applyFormat(delta, format, value) {
                  if (
                    (typeof format === 'undefined'
                      ? 'undefined'
                      : _typeof(format)) === 'object'
                  ) {
                    return Object.keys(format).reduce(function(delta, key) {
                      return applyFormat(delta, key, format[key]);
                    }, delta);
                  } else {
                    return delta.reduce(function(delta, op) {
                      if (op.attributes && op.attributes[format]) {
                        return delta.push(op);
                      } else {
                        return delta.insert(
                          op.insert,
                          (0, _extend3.default)(
                            {},
                            _defineProperty({}, format, value),
                            op.attributes
                          )
                        );
                      }
                    }, new _quillDelta2.default());
                  }
                }

                function computeStyle(node) {
                  if (node.nodeType !== Node.ELEMENT_NODE) return {};
                  var DOM_KEY = '__ql-computed-style';
                  return (
                    node[DOM_KEY] ||
                    (node[DOM_KEY] = window.getComputedStyle(node))
                  );
                }

                function deltaEndsWith(delta, text) {
                  var endText = '';
                  for (
                    var i = delta.ops.length - 1;
                    i >= 0 && endText.length < text.length;
                    --i
                  ) {
                    var op = delta.ops[i];
                    if (typeof op.insert !== 'string') break;
                    endText = op.insert + endText;
                  }
                  return endText.slice(-1 * text.length) === text;
                }

                function isLine(node) {
                  if (node.childNodes.length === 0) return false; // Exclude embed blocks
                  var style = computeStyle(node);
                  return ['block', 'list-item'].indexOf(style.display) > -1;
                }

                function traverse(node, elementMatchers, textMatchers) {
                  // Post-order
                  if (node.nodeType === node.TEXT_NODE) {
                    return textMatchers.reduce(function(delta, matcher) {
                      return matcher(node, delta);
                    }, new _quillDelta2.default());
                  } else if (node.nodeType === node.ELEMENT_NODE) {
                    return [].reduce.call(
                      node.childNodes || [],
                      function(delta, childNode) {
                        var childrenDelta = traverse(
                          childNode,
                          elementMatchers,
                          textMatchers
                        );
                        if (childNode.nodeType === node.ELEMENT_NODE) {
                          childrenDelta = elementMatchers.reduce(function(
                            childrenDelta,
                            matcher
                          ) {
                            return matcher(childNode, childrenDelta);
                          },
                          childrenDelta);
                          childrenDelta = (childNode[DOM_KEY] || []).reduce(
                            function(childrenDelta, matcher) {
                              return matcher(childNode, childrenDelta);
                            },
                            childrenDelta
                          );
                        }
                        return delta.concat(childrenDelta);
                      },
                      new _quillDelta2.default()
                    );
                  } else {
                    return new _quillDelta2.default();
                  }
                }

                function matchAlias(format, node, delta) {
                  return applyFormat(delta, format, true);
                }

                function matchAttributor(node, delta) {
                  var attributes = _parchment2.default.Attributor.Attribute.keys(
                    node
                  );
                  var classes = _parchment2.default.Attributor.Class.keys(node);
                  var styles = _parchment2.default.Attributor.Style.keys(node);
                  var formats = {};
                  attributes
                    .concat(classes)
                    .concat(styles)
                    .forEach(function(name) {
                      var attr = _parchment2.default.query(
                        name,
                        _parchment2.default.Scope.ATTRIBUTE
                      );
                      if (attr != null) {
                        formats[attr.attrName] = attr.value(node);
                        if (formats[attr.attrName]) return;
                      }
                      attr = ATTRIBUTE_ATTRIBUTORS[name];
                      if (
                        attr != null &&
                        (attr.attrName === name || attr.keyName === name)
                      ) {
                        formats[attr.attrName] = attr.value(node) || undefined;
                      }
                      attr = STYLE_ATTRIBUTORS[name];
                      if (
                        attr != null &&
                        (attr.attrName === name || attr.keyName === name)
                      ) {
                        attr = STYLE_ATTRIBUTORS[name];
                        formats[attr.attrName] = attr.value(node) || undefined;
                      }
                    });
                  if (Object.keys(formats).length > 0) {
                    delta = applyFormat(delta, formats);
                  }
                  return delta;
                }

                function matchBlot(node, delta) {
                  var match = _parchment2.default.query(node);
                  if (match == null) return delta;
                  if (match.prototype instanceof _parchment2.default.Embed) {
                    var embed = {};
                    var value = match.value(node);
                    if (value != null) {
                      embed[match.blotName] = value;
                      delta = new _quillDelta2.default().insert(
                        embed,
                        match.formats(node)
                      );
                    }
                  } else if (typeof match.formats === 'function') {
                    delta = applyFormat(
                      delta,
                      match.blotName,
                      match.formats(node)
                    );
                  }
                  return delta;
                }

                function matchBreak(node, delta) {
                  if (!deltaEndsWith(delta, '\n')) {
                    delta.insert('\n');
                  }
                  return delta;
                }

                function matchIgnore() {
                  return new _quillDelta2.default();
                }

                function matchIndent(node, delta) {
                  var match = _parchment2.default.query(node);
                  if (
                    match == null ||
                    match.blotName !== 'list-item' ||
                    !deltaEndsWith(delta, '\n')
                  ) {
                    return delta;
                  }
                  var indent = -1,
                    parent = node.parentNode;
                  while (!parent.classList.contains('ql-clipboard')) {
                    if (
                      (_parchment2.default.query(parent) || {}).blotName ===
                      'list'
                    ) {
                      indent += 1;
                    }
                    parent = parent.parentNode;
                  }
                  if (indent <= 0) return delta;
                  return delta.compose(
                    new _quillDelta2.default()
                      .retain(delta.length() - 1)
                      .retain(1, { indent: indent })
                  );
                }

                function matchNewline(node, delta) {
                  if (!deltaEndsWith(delta, '\n')) {
                    if (
                      isLine(node) ||
                      (delta.length() > 0 &&
                        node.nextSibling &&
                        isLine(node.nextSibling))
                    ) {
                      delta.insert('\n');
                    }
                  }
                  return delta;
                }

                function matchSpacing(node, delta) {
                  if (
                    isLine(node) &&
                    node.nextElementSibling != null &&
                    !deltaEndsWith(delta, '\n\n')
                  ) {
                    var nodeHeight =
                      node.offsetHeight +
                      parseFloat(computeStyle(node).marginTop) +
                      parseFloat(computeStyle(node).marginBottom);
                    if (
                      node.nextElementSibling.offsetTop >
                      node.offsetTop + nodeHeight * 1.5
                    ) {
                      delta.insert('\n');
                    }
                  }
                  return delta;
                }

                function matchStyles(node, delta) {
                  var formats = {};
                  var style = node.style || {};
                  if (
                    style.fontStyle &&
                    computeStyle(node).fontStyle === 'italic'
                  ) {
                    formats.italic = true;
                  }
                  if (
                    style.fontWeight &&
                    (computeStyle(node).fontWeight.startsWith('bold') ||
                      parseInt(computeStyle(node).fontWeight) >= 700)
                  ) {
                    formats.bold = true;
                  }
                  if (Object.keys(formats).length > 0) {
                    delta = applyFormat(delta, formats);
                  }
                  if (parseFloat(style.textIndent || 0) > 0) {
                    // Could be 0.5in
                    delta = new _quillDelta2.default()
                      .insert('\t')
                      .concat(delta);
                  }
                  return delta;
                }

                function matchText(node, delta) {
                  var text = node.data;
                  // Word represents empty line with <o:p>&nbsp;</o:p>
                  if (node.parentNode.tagName === 'O:P') {
                    return delta.insert(text.trim());
                  }
                  if (
                    text.trim().length === 0 &&
                    node.parentNode.classList.contains('ql-clipboard')
                  ) {
                    return delta;
                  }
                  if (
                    !computeStyle(node.parentNode).whiteSpace.startsWith('pre')
                  ) {
                    // eslint-disable-next-line func-style
                    var replacer = function replacer(collapse, match) {
                      match = match.replace(/[^\u00a0]/g, ''); // \u00a0 is nbsp;
                      return match.length < 1 && collapse ? ' ' : match;
                    };
                    text = text.replace(/\r\n/g, ' ').replace(/\n/g, ' ');
                    text = text.replace(
                      /\s\s+/g,
                      replacer.bind(replacer, true)
                    ); // collapse whitespace
                    if (
                      (node.previousSibling == null &&
                        isLine(node.parentNode)) ||
                      (node.previousSibling != null &&
                        isLine(node.previousSibling))
                    ) {
                      text = text.replace(
                        /^\s+/,
                        replacer.bind(replacer, false)
                      );
                    }
                    if (
                      (node.nextSibling == null && isLine(node.parentNode)) ||
                      (node.nextSibling != null && isLine(node.nextSibling))
                    ) {
                      text = text.replace(
                        /\s+$/,
                        replacer.bind(replacer, false)
                      );
                    }
                  }
                  return delta.insert(text);
                }

                exports.default = Clipboard;
                exports.matchAttributor = matchAttributor;
                exports.matchBlot = matchBlot;
                exports.matchNewline = matchNewline;
                exports.matchSpacing = matchSpacing;
                exports.matchText = matchText;

                /***/
              },
              /* 56 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Bold = (function(_Inline) {
                  _inherits(Bold, _Inline);

                  function Bold() {
                    _classCallCheck(this, Bold);

                    return _possibleConstructorReturn(
                      this,
                      (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Bold,
                    [
                      {
                        key: 'optimize',
                        value: function optimize(context) {
                          _get(
                            Bold.prototype.__proto__ ||
                              Object.getPrototypeOf(Bold.prototype),
                            'optimize',
                            this
                          ).call(this, context);
                          if (
                            this.domNode.tagName !== this.statics.tagName[0]
                          ) {
                            this.replaceWith(this.statics.blotName);
                          }
                        }
                      }
                    ],
                    [
                      {
                        key: 'create',
                        value: function create() {
                          return _get(
                            Bold.__proto__ || Object.getPrototypeOf(Bold),
                            'create',
                            this
                          ).call(this);
                        }
                      },
                      {
                        key: 'formats',
                        value: function formats() {
                          return true;
                        }
                      }
                    ]
                  );

                  return Bold;
                })(_inline2.default);

                Bold.blotName = 'bold';
                Bold.tagName = ['STRONG', 'B'];

                exports.default = Bold;

                /***/
              },
              /* 57 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.addControls = exports.default = undefined;

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _quillDelta = __webpack_require__(2);

                var _quillDelta2 = _interopRequireDefault(_quillDelta);

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _logger = __webpack_require__(10);

                var _logger2 = _interopRequireDefault(_logger);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var debug = (0, _logger2.default)('quill:toolbar');

                var Toolbar = (function(_Module) {
                  _inherits(Toolbar, _Module);

                  function Toolbar(quill, options) {
                    _classCallCheck(this, Toolbar);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)
                      ).call(this, quill, options)
                    );

                    if (Array.isArray(_this.options.container)) {
                      var container = document.createElement('div');
                      addControls(container, _this.options.container);
                      quill.container.parentNode.insertBefore(
                        container,
                        quill.container
                      );
                      _this.container = container;
                    } else if (typeof _this.options.container === 'string') {
                      _this.container = document.querySelector(
                        _this.options.container
                      );
                    } else {
                      _this.container = _this.options.container;
                    }
                    if (!(_this.container instanceof HTMLElement)) {
                      var _ret;

                      return (
                        (_ret = debug.error(
                          'Container required for toolbar',
                          _this.options
                        )),
                        _possibleConstructorReturn(_this, _ret)
                      );
                    }
                    _this.container.classList.add('ql-toolbar');
                    _this.controls = [];
                    _this.handlers = {};
                    Object.keys(_this.options.handlers).forEach(function(
                      format
                    ) {
                      _this.addHandler(format, _this.options.handlers[format]);
                    });
                    [].forEach.call(
                      _this.container.querySelectorAll('button, select'),
                      function(input) {
                        _this.attach(input);
                      }
                    );
                    _this.quill.on(
                      _quill2.default.events.EDITOR_CHANGE,
                      function(type, range) {
                        if (type === _quill2.default.events.SELECTION_CHANGE) {
                          _this.update(range);
                        }
                      }
                    );
                    _this.quill.on(
                      _quill2.default.events.SCROLL_OPTIMIZE,
                      function() {
                        var _this$quill$selection = _this.quill.selection.getRange(),
                          _this$quill$selection2 = _slicedToArray(
                            _this$quill$selection,
                            1
                          ),
                          range = _this$quill$selection2[0]; // quill.getSelection triggers update

                        _this.update(range);
                      }
                    );
                    return _this;
                  }

                  _createClass(Toolbar, [
                    {
                      key: 'addHandler',
                      value: function addHandler(format, handler) {
                        this.handlers[format] = handler;
                      }
                    },
                    {
                      key: 'attach',
                      value: function attach(input) {
                        var _this2 = this;

                        var format = [].find.call(input.classList, function(
                          className
                        ) {
                          return className.indexOf('ql-') === 0;
                        });
                        if (!format) return;
                        format = format.slice('ql-'.length);
                        if (input.tagName === 'BUTTON') {
                          input.setAttribute('type', 'button');
                        }
                        if (this.handlers[format] == null) {
                          if (
                            this.quill.scroll.whitelist != null &&
                            this.quill.scroll.whitelist[format] == null
                          ) {
                            debug.warn(
                              'ignoring attaching to disabled format',
                              format,
                              input
                            );
                            return;
                          }
                          if (_parchment2.default.query(format) == null) {
                            debug.warn(
                              'ignoring attaching to nonexistent format',
                              format,
                              input
                            );
                            return;
                          }
                        }
                        var eventName =
                          input.tagName === 'SELECT' ? 'change' : 'click';
                        input.addEventListener(eventName, function(e) {
                          var value = void 0;
                          if (input.tagName === 'SELECT') {
                            if (input.selectedIndex < 0) return;
                            var selected = input.options[input.selectedIndex];
                            if (selected.hasAttribute('selected')) {
                              value = false;
                            } else {
                              value = selected.value || false;
                            }
                          } else {
                            if (input.classList.contains('ql-active')) {
                              value = false;
                            } else {
                              value =
                                input.value || !input.hasAttribute('value');
                            }
                            e.preventDefault();
                          }
                          _this2.quill.focus();

                          var _quill$selection$getR = _this2.quill.selection.getRange(),
                            _quill$selection$getR2 = _slicedToArray(
                              _quill$selection$getR,
                              1
                            ),
                            range = _quill$selection$getR2[0];

                          if (_this2.handlers[format] != null) {
                            _this2.handlers[format].call(_this2, value);
                          } else if (
                            _parchment2.default.query(format)
                              .prototype instanceof _parchment2.default.Embed
                          ) {
                            value = prompt('Enter ' + format);
                            if (!value) return;
                            _this2.quill.updateContents(
                              new _quillDelta2.default()
                                .retain(range.index)
                                .delete(range.length)
                                .insert(_defineProperty({}, format, value)),
                              _quill2.default.sources.USER
                            );
                          } else {
                            _this2.quill.format(
                              format,
                              value,
                              _quill2.default.sources.USER
                            );
                          }
                          _this2.update(range);
                        });
                        // TODO use weakmap
                        this.controls.push([format, input]);
                      }
                    },
                    {
                      key: 'update',
                      value: function update(range) {
                        var formats =
                          range == null ? {} : this.quill.getFormat(range);
                        this.controls.forEach(function(pair) {
                          var _pair = _slicedToArray(pair, 2),
                            format = _pair[0],
                            input = _pair[1];

                          if (input.tagName === 'SELECT') {
                            var option = void 0;
                            if (range == null) {
                              option = null;
                            } else if (formats[format] == null) {
                              option = input.querySelector('option[selected]');
                            } else if (!Array.isArray(formats[format])) {
                              var value = formats[format];
                              if (typeof value === 'string') {
                                value = value.replace(/\"/g, '\\"');
                              }
                              option = input.querySelector(
                                'option[value="' + value + '"]'
                              );
                            }
                            if (option == null) {
                              input.value = ''; // TODO make configurable?
                              input.selectedIndex = -1;
                            } else {
                              option.selected = true;
                            }
                          } else {
                            if (range == null) {
                              input.classList.remove('ql-active');
                            } else if (input.hasAttribute('value')) {
                              // both being null should match (default values)
                              // '1' should match with 1 (headers)
                              var isActive =
                                formats[format] ===
                                  input.getAttribute('value') ||
                                (formats[format] != null &&
                                  formats[format].toString() ===
                                    input.getAttribute('value')) ||
                                (formats[format] == null &&
                                  !input.getAttribute('value'));
                              input.classList.toggle('ql-active', isActive);
                            } else {
                              input.classList.toggle(
                                'ql-active',
                                formats[format] != null
                              );
                            }
                          }
                        });
                      }
                    }
                  ]);

                  return Toolbar;
                })(_module2.default);

                Toolbar.DEFAULTS = {};

                function addButton(container, format, value) {
                  var input = document.createElement('button');
                  input.setAttribute('type', 'button');
                  input.classList.add('ql-' + format);
                  if (value != null) {
                    input.value = value;
                  }
                  container.appendChild(input);
                }

                function addControls(container, groups) {
                  if (!Array.isArray(groups[0])) {
                    groups = [groups];
                  }
                  groups.forEach(function(controls) {
                    var group = document.createElement('span');
                    group.classList.add('ql-formats');
                    controls.forEach(function(control) {
                      if (typeof control === 'string') {
                        addButton(group, control);
                      } else {
                        var format = Object.keys(control)[0];
                        var value = control[format];
                        if (Array.isArray(value)) {
                          addSelect(group, format, value);
                        } else {
                          addButton(group, format, value);
                        }
                      }
                    });
                    container.appendChild(group);
                  });
                }

                function addSelect(container, format, values) {
                  var input = document.createElement('select');
                  input.classList.add('ql-' + format);
                  values.forEach(function(value) {
                    var option = document.createElement('option');
                    if (value !== false) {
                      option.setAttribute('value', value);
                    } else {
                      option.setAttribute('selected', 'selected');
                    }
                    input.appendChild(option);
                  });
                  container.appendChild(input);
                }

                Toolbar.DEFAULTS = {
                  container: null,
                  handlers: {
                    clean: function clean() {
                      var _this3 = this;

                      var range = this.quill.getSelection();
                      if (range == null) return;
                      if (range.length == 0) {
                        var formats = this.quill.getFormat();
                        Object.keys(formats).forEach(function(name) {
                          // Clean functionality in existing apps only clean inline formats
                          if (
                            _parchment2.default.query(
                              name,
                              _parchment2.default.Scope.INLINE
                            ) != null
                          ) {
                            _this3.quill.format(name, false);
                          }
                        });
                      } else {
                        this.quill.removeFormat(
                          range,
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    direction: function direction(value) {
                      var align = this.quill.getFormat()['align'];
                      if (value === 'rtl' && align == null) {
                        this.quill.format(
                          'align',
                          'right',
                          _quill2.default.sources.USER
                        );
                      } else if (!value && align === 'right') {
                        this.quill.format(
                          'align',
                          false,
                          _quill2.default.sources.USER
                        );
                      }
                      this.quill.format(
                        'direction',
                        value,
                        _quill2.default.sources.USER
                      );
                    },
                    indent: function indent(value) {
                      var range = this.quill.getSelection();
                      var formats = this.quill.getFormat(range);
                      var indent = parseInt(formats.indent || 0);
                      if (value === '+1' || value === '-1') {
                        var modifier = value === '+1' ? 1 : -1;
                        if (formats.direction === 'rtl') modifier *= -1;
                        this.quill.format(
                          'indent',
                          indent + modifier,
                          _quill2.default.sources.USER
                        );
                      }
                    },
                    link: function link(value) {
                      if (value === true) {
                        value = prompt('Enter link URL:');
                      }
                      this.quill.format(
                        'link',
                        value,
                        _quill2.default.sources.USER
                      );
                    },
                    list: function list(value) {
                      var range = this.quill.getSelection();
                      var formats = this.quill.getFormat(range);
                      if (value === 'check') {
                        if (
                          formats['list'] === 'checked' ||
                          formats['list'] === 'unchecked'
                        ) {
                          this.quill.format(
                            'list',
                            false,
                            _quill2.default.sources.USER
                          );
                        } else {
                          this.quill.format(
                            'list',
                            'unchecked',
                            _quill2.default.sources.USER
                          );
                        }
                      } else {
                        this.quill.format(
                          'list',
                          value,
                          _quill2.default.sources.USER
                        );
                      }
                    }
                  }
                };

                exports.default = Toolbar;
                exports.addControls = addControls;

                /***/
              },
              /* 58 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <polyline class="ql-even ql-stroke" points="5 7 3 9 5 11"></polyline> <polyline class="ql-even ql-stroke" points="13 7 15 9 13 11"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>';

                /***/
              },
              /* 59 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _picker = __webpack_require__(28);

                var _picker2 = _interopRequireDefault(_picker);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ColorPicker = (function(_Picker) {
                  _inherits(ColorPicker, _Picker);

                  function ColorPicker(select, label) {
                    _classCallCheck(this, ColorPicker);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        ColorPicker.__proto__ ||
                        Object.getPrototypeOf(ColorPicker)
                      ).call(this, select)
                    );

                    _this.label.innerHTML = label;
                    _this.container.classList.add('ql-color-picker');
                    [].slice
                      .call(
                        _this.container.querySelectorAll('.ql-picker-item'),
                        0,
                        7
                      )
                      .forEach(function(item) {
                        item.classList.add('ql-primary');
                      });
                    return _this;
                  }

                  _createClass(ColorPicker, [
                    {
                      key: 'buildItem',
                      value: function buildItem(option) {
                        var item = _get(
                          ColorPicker.prototype.__proto__ ||
                            Object.getPrototypeOf(ColorPicker.prototype),
                          'buildItem',
                          this
                        ).call(this, option);
                        item.style.backgroundColor =
                          option.getAttribute('value') || '';
                        return item;
                      }
                    },
                    {
                      key: 'selectItem',
                      value: function selectItem(item, trigger) {
                        _get(
                          ColorPicker.prototype.__proto__ ||
                            Object.getPrototypeOf(ColorPicker.prototype),
                          'selectItem',
                          this
                        ).call(this, item, trigger);
                        var colorLabel = this.label.querySelector(
                          '.ql-color-label'
                        );
                        var value = item
                          ? item.getAttribute('data-value') || ''
                          : '';
                        if (colorLabel) {
                          if (colorLabel.tagName === 'line') {
                            colorLabel.style.stroke = value;
                          } else {
                            colorLabel.style.fill = value;
                          }
                        }
                      }
                    }
                  ]);

                  return ColorPicker;
                })(_picker2.default);

                exports.default = ColorPicker;

                /***/
              },
              /* 60 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _picker = __webpack_require__(28);

                var _picker2 = _interopRequireDefault(_picker);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var IconPicker = (function(_Picker) {
                  _inherits(IconPicker, _Picker);

                  function IconPicker(select, icons) {
                    _classCallCheck(this, IconPicker);

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        IconPicker.__proto__ ||
                        Object.getPrototypeOf(IconPicker)
                      ).call(this, select)
                    );

                    _this.container.classList.add('ql-icon-picker');
                    [].forEach.call(
                      _this.container.querySelectorAll('.ql-picker-item'),
                      function(item) {
                        item.innerHTML =
                          icons[item.getAttribute('data-value') || ''];
                      }
                    );
                    _this.defaultItem = _this.container.querySelector(
                      '.ql-selected'
                    );
                    _this.selectItem(_this.defaultItem);
                    return _this;
                  }

                  _createClass(IconPicker, [
                    {
                      key: 'selectItem',
                      value: function selectItem(item, trigger) {
                        _get(
                          IconPicker.prototype.__proto__ ||
                            Object.getPrototypeOf(IconPicker.prototype),
                          'selectItem',
                          this
                        ).call(this, item, trigger);
                        item = item || this.defaultItem;
                        this.label.innerHTML = item.innerHTML;
                      }
                    }
                  ]);

                  return IconPicker;
                })(_picker2.default);

                exports.default = IconPicker;

                /***/
              },
              /* 61 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                var Tooltip = (function() {
                  function Tooltip(quill, boundsContainer) {
                    var _this = this;

                    _classCallCheck(this, Tooltip);

                    this.quill = quill;
                    this.boundsContainer = boundsContainer || document.body;
                    this.root = quill.addContainer('ql-tooltip');
                    this.root.innerHTML = this.constructor.TEMPLATE;
                    if (this.quill.root === this.quill.scrollingContainer) {
                      this.quill.root.addEventListener('scroll', function() {
                        _this.root.style.marginTop =
                          -1 * _this.quill.root.scrollTop + 'px';
                      });
                    }
                    this.hide();
                  }

                  _createClass(Tooltip, [
                    {
                      key: 'hide',
                      value: function hide() {
                        this.root.classList.add('ql-hidden');
                      }
                    },
                    {
                      key: 'position',
                      value: function position(reference) {
                        var left =
                          reference.left +
                          reference.width / 2 -
                          this.root.offsetWidth / 2;
                        // root.scrollTop should be 0 if scrollContainer !== root
                        var top = reference.bottom + this.quill.root.scrollTop;
                        this.root.style.left = left + 'px';
                        this.root.style.top = top + 'px';
                        this.root.classList.remove('ql-flip');
                        var containerBounds = this.boundsContainer.getBoundingClientRect();
                        var rootBounds = this.root.getBoundingClientRect();
                        var shift = 0;
                        if (rootBounds.right > containerBounds.right) {
                          shift = containerBounds.right - rootBounds.right;
                          this.root.style.left = left + shift + 'px';
                        }
                        if (rootBounds.left < containerBounds.left) {
                          shift = containerBounds.left - rootBounds.left;
                          this.root.style.left = left + shift + 'px';
                        }
                        if (rootBounds.bottom > containerBounds.bottom) {
                          var height = rootBounds.bottom - rootBounds.top;
                          var verticalShift =
                            reference.bottom - reference.top + height;
                          this.root.style.top = top - verticalShift + 'px';
                          this.root.classList.add('ql-flip');
                        }
                        return shift;
                      }
                    },
                    {
                      key: 'show',
                      value: function show() {
                        this.root.classList.remove('ql-editing');
                        this.root.classList.remove('ql-hidden');
                      }
                    }
                  ]);

                  return Tooltip;
                })();

                exports.default = Tooltip;

                /***/
              },
              /* 62 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _slicedToArray = (function() {
                  function sliceIterator(arr, i) {
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _e = undefined;
                    try {
                      for (
                        var _i = arr[Symbol.iterator](), _s;
                        !(_n = (_s = _i.next()).done);
                        _n = true
                      ) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                      }
                    } catch (err) {
                      _d = true;
                      _e = err;
                    } finally {
                      try {
                        if (!_n && _i['return']) _i['return']();
                      } finally {
                        if (_d) throw _e;
                      }
                    }
                    return _arr;
                  }
                  return function(arr, i) {
                    if (Array.isArray(arr)) {
                      return arr;
                    } else if (Symbol.iterator in Object(arr)) {
                      return sliceIterator(arr, i);
                    } else {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance'
                      );
                    }
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _emitter = __webpack_require__(8);

                var _emitter2 = _interopRequireDefault(_emitter);

                var _base = __webpack_require__(43);

                var _base2 = _interopRequireDefault(_base);

                var _link = __webpack_require__(27);

                var _link2 = _interopRequireDefault(_link);

                var _selection = __webpack_require__(15);

                var _icons = __webpack_require__(41);

                var _icons2 = _interopRequireDefault(_icons);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var TOOLBAR_CONFIG = [
                  [{ header: ['1', '2', '3', false] }],
                  ['bold', 'italic', 'underline', 'link'],
                  [{ list: 'ordered' }, { list: 'bullet' }],
                  ['clean']
                ];

                var SnowTheme = (function(_BaseTheme) {
                  _inherits(SnowTheme, _BaseTheme);

                  function SnowTheme(quill, options) {
                    _classCallCheck(this, SnowTheme);

                    if (
                      options.modules.toolbar != null &&
                      options.modules.toolbar.container == null
                    ) {
                      options.modules.toolbar.container = TOOLBAR_CONFIG;
                    }

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)
                      ).call(this, quill, options)
                    );

                    _this.quill.container.classList.add('ql-snow');
                    return _this;
                  }

                  _createClass(SnowTheme, [
                    {
                      key: 'extendToolbar',
                      value: function extendToolbar(toolbar) {
                        toolbar.container.classList.add('ql-snow');
                        this.buildButtons(
                          [].slice.call(
                            toolbar.container.querySelectorAll('button')
                          ),
                          _icons2.default
                        );
                        this.buildPickers(
                          [].slice.call(
                            toolbar.container.querySelectorAll('select')
                          ),
                          _icons2.default
                        );
                        this.tooltip = new SnowTooltip(
                          this.quill,
                          this.options.bounds
                        );
                        if (toolbar.container.querySelector('.ql-link')) {
                          this.quill.keyboard.addBinding(
                            { key: 'K', shortKey: true },
                            function(range, context) {
                              toolbar.handlers['link'].call(
                                toolbar,
                                !context.format.link
                              );
                            }
                          );
                        }
                      }
                    }
                  ]);

                  return SnowTheme;
                })(_base2.default);

                SnowTheme.DEFAULTS = (0, _extend2.default)(
                  true,
                  {},
                  _base2.default.DEFAULTS,
                  {
                    modules: {
                      toolbar: {
                        handlers: {
                          link: function link(value) {
                            if (value) {
                              var range = this.quill.getSelection();
                              if (range == null || range.length == 0) return;
                              var preview = this.quill.getText(range);
                              if (
                                /^\S+@\S+\.\S+$/.test(preview) &&
                                preview.indexOf('mailto:') !== 0
                              ) {
                                preview = 'mailto:' + preview;
                              }
                              var tooltip = this.quill.theme.tooltip;
                              tooltip.edit('link', preview);
                            } else {
                              this.quill.format('link', false);
                            }
                          }
                        }
                      }
                    }
                  }
                );

                var SnowTooltip = (function(_BaseTooltip) {
                  _inherits(SnowTooltip, _BaseTooltip);

                  function SnowTooltip(quill, bounds) {
                    _classCallCheck(this, SnowTooltip);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (
                        SnowTooltip.__proto__ ||
                        Object.getPrototypeOf(SnowTooltip)
                      ).call(this, quill, bounds)
                    );

                    _this2.preview = _this2.root.querySelector('a.ql-preview');
                    return _this2;
                  }

                  _createClass(SnowTooltip, [
                    {
                      key: 'listen',
                      value: function listen() {
                        var _this3 = this;

                        _get(
                          SnowTooltip.prototype.__proto__ ||
                            Object.getPrototypeOf(SnowTooltip.prototype),
                          'listen',
                          this
                        ).call(this);
                        this.root
                          .querySelector('a.ql-action')
                          .addEventListener('click', function(event) {
                            if (_this3.root.classList.contains('ql-editing')) {
                              _this3.save();
                            } else {
                              _this3.edit('link', _this3.preview.textContent);
                            }
                            event.preventDefault();
                          });
                        this.root
                          .querySelector('a.ql-remove')
                          .addEventListener('click', function(event) {
                            if (_this3.linkRange != null) {
                              var range = _this3.linkRange;
                              _this3.restoreFocus();
                              _this3.quill.formatText(
                                range,
                                'link',
                                false,
                                _emitter2.default.sources.USER
                              );
                              delete _this3.linkRange;
                            }
                            event.preventDefault();
                            _this3.hide();
                          });
                        this.quill.on(
                          _emitter2.default.events.SELECTION_CHANGE,
                          function(range, oldRange, source) {
                            if (range == null) return;
                            if (
                              range.length === 0 &&
                              source === _emitter2.default.sources.USER
                            ) {
                              var _quill$scroll$descend = _this3.quill.scroll.descendant(
                                  _link2.default,
                                  range.index
                                ),
                                _quill$scroll$descend2 = _slicedToArray(
                                  _quill$scroll$descend,
                                  2
                                ),
                                link = _quill$scroll$descend2[0],
                                offset = _quill$scroll$descend2[1];

                              if (link != null) {
                                _this3.linkRange = new _selection.Range(
                                  range.index - offset,
                                  link.length()
                                );
                                var preview = _link2.default.formats(
                                  link.domNode
                                );
                                _this3.preview.textContent = preview;
                                _this3.preview.setAttribute('href', preview);
                                _this3.show();
                                _this3.position(
                                  _this3.quill.getBounds(_this3.linkRange)
                                );
                                return;
                              }
                            } else {
                              delete _this3.linkRange;
                            }
                            _this3.hide();
                          }
                        );
                      }
                    },
                    {
                      key: 'show',
                      value: function show() {
                        _get(
                          SnowTooltip.prototype.__proto__ ||
                            Object.getPrototypeOf(SnowTooltip.prototype),
                          'show',
                          this
                        ).call(this);
                        this.root.removeAttribute('data-mode');
                      }
                    }
                  ]);

                  return SnowTooltip;
                })(_base.BaseTooltip);

                SnowTooltip.TEMPLATE = [
                  '<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>',
                  '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">',
                  '<a class="ql-action"></a>',
                  '<a class="ql-remove"></a>'
                ].join('');

                exports.default = SnowTheme;

                /***/
              },
              /* 63 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _core = __webpack_require__(29);

                var _core2 = _interopRequireDefault(_core);

                var _align = __webpack_require__(36);

                var _direction = __webpack_require__(38);

                var _indent = __webpack_require__(64);

                var _blockquote = __webpack_require__(65);

                var _blockquote2 = _interopRequireDefault(_blockquote);

                var _header = __webpack_require__(66);

                var _header2 = _interopRequireDefault(_header);

                var _list = __webpack_require__(67);

                var _list2 = _interopRequireDefault(_list);

                var _background = __webpack_require__(37);

                var _color = __webpack_require__(26);

                var _font = __webpack_require__(39);

                var _size = __webpack_require__(40);

                var _bold = __webpack_require__(56);

                var _bold2 = _interopRequireDefault(_bold);

                var _italic = __webpack_require__(68);

                var _italic2 = _interopRequireDefault(_italic);

                var _link = __webpack_require__(27);

                var _link2 = _interopRequireDefault(_link);

                var _script = __webpack_require__(69);

                var _script2 = _interopRequireDefault(_script);

                var _strike = __webpack_require__(70);

                var _strike2 = _interopRequireDefault(_strike);

                var _underline = __webpack_require__(71);

                var _underline2 = _interopRequireDefault(_underline);

                var _image = __webpack_require__(72);

                var _image2 = _interopRequireDefault(_image);

                var _video = __webpack_require__(73);

                var _video2 = _interopRequireDefault(_video);

                var _code = __webpack_require__(13);

                var _code2 = _interopRequireDefault(_code);

                var _formula = __webpack_require__(74);

                var _formula2 = _interopRequireDefault(_formula);

                var _syntax = __webpack_require__(75);

                var _syntax2 = _interopRequireDefault(_syntax);

                var _toolbar = __webpack_require__(57);

                var _toolbar2 = _interopRequireDefault(_toolbar);

                var _icons = __webpack_require__(41);

                var _icons2 = _interopRequireDefault(_icons);

                var _picker = __webpack_require__(28);

                var _picker2 = _interopRequireDefault(_picker);

                var _colorPicker = __webpack_require__(59);

                var _colorPicker2 = _interopRequireDefault(_colorPicker);

                var _iconPicker = __webpack_require__(60);

                var _iconPicker2 = _interopRequireDefault(_iconPicker);

                var _tooltip = __webpack_require__(61);

                var _tooltip2 = _interopRequireDefault(_tooltip);

                var _bubble = __webpack_require__(108);

                var _bubble2 = _interopRequireDefault(_bubble);

                var _snow = __webpack_require__(62);

                var _snow2 = _interopRequireDefault(_snow);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                _core2.default.register(
                  {
                    'attributors/attribute/direction':
                      _direction.DirectionAttribute,

                    'attributors/class/align': _align.AlignClass,
                    'attributors/class/background': _background.BackgroundClass,
                    'attributors/class/color': _color.ColorClass,
                    'attributors/class/direction': _direction.DirectionClass,
                    'attributors/class/font': _font.FontClass,
                    'attributors/class/size': _size.SizeClass,

                    'attributors/style/align': _align.AlignStyle,
                    'attributors/style/background': _background.BackgroundStyle,
                    'attributors/style/color': _color.ColorStyle,
                    'attributors/style/direction': _direction.DirectionStyle,
                    'attributors/style/font': _font.FontStyle,
                    'attributors/style/size': _size.SizeStyle
                  },
                  true
                );

                _core2.default.register(
                  {
                    'formats/align': _align.AlignClass,
                    'formats/direction': _direction.DirectionClass,
                    'formats/indent': _indent.IndentClass,

                    'formats/background': _background.BackgroundStyle,
                    'formats/color': _color.ColorStyle,
                    'formats/font': _font.FontClass,
                    'formats/size': _size.SizeClass,

                    'formats/blockquote': _blockquote2.default,
                    'formats/code-block': _code2.default,
                    'formats/header': _header2.default,
                    'formats/list': _list2.default,

                    'formats/bold': _bold2.default,
                    'formats/code': _code.Code,
                    'formats/italic': _italic2.default,
                    'formats/link': _link2.default,
                    'formats/script': _script2.default,
                    'formats/strike': _strike2.default,
                    'formats/underline': _underline2.default,

                    'formats/image': _image2.default,
                    'formats/video': _video2.default,

                    'formats/list/item': _list.ListItem,

                    'modules/formula': _formula2.default,
                    'modules/syntax': _syntax2.default,
                    'modules/toolbar': _toolbar2.default,

                    'themes/bubble': _bubble2.default,
                    'themes/snow': _snow2.default,

                    'ui/icons': _icons2.default,
                    'ui/picker': _picker2.default,
                    'ui/icon-picker': _iconPicker2.default,
                    'ui/color-picker': _colorPicker2.default,
                    'ui/tooltip': _tooltip2.default
                  },
                  true
                );

                exports.default = _core2.default;

                /***/
              },
              /* 64 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.IndentClass = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var IdentAttributor = (function(_Parchment$Attributor) {
                  _inherits(IdentAttributor, _Parchment$Attributor);

                  function IdentAttributor() {
                    _classCallCheck(this, IdentAttributor);

                    return _possibleConstructorReturn(
                      this,
                      (
                        IdentAttributor.__proto__ ||
                        Object.getPrototypeOf(IdentAttributor)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(IdentAttributor, [
                    {
                      key: 'add',
                      value: function add(node, value) {
                        if (value === '+1' || value === '-1') {
                          var indent = this.value(node) || 0;
                          value = value === '+1' ? indent + 1 : indent - 1;
                        }
                        if (value === 0) {
                          this.remove(node);
                          return true;
                        } else {
                          return _get(
                            IdentAttributor.prototype.__proto__ ||
                              Object.getPrototypeOf(IdentAttributor.prototype),
                            'add',
                            this
                          ).call(this, node, value);
                        }
                      }
                    },
                    {
                      key: 'canAdd',
                      value: function canAdd(node, value) {
                        return (
                          _get(
                            IdentAttributor.prototype.__proto__ ||
                              Object.getPrototypeOf(IdentAttributor.prototype),
                            'canAdd',
                            this
                          ).call(this, node, value) ||
                          _get(
                            IdentAttributor.prototype.__proto__ ||
                              Object.getPrototypeOf(IdentAttributor.prototype),
                            'canAdd',
                            this
                          ).call(this, node, parseInt(value))
                        );
                      }
                    },
                    {
                      key: 'value',
                      value: function value(node) {
                        return (
                          parseInt(
                            _get(
                              IdentAttributor.prototype.__proto__ ||
                                Object.getPrototypeOf(
                                  IdentAttributor.prototype
                                ),
                              'value',
                              this
                            ).call(this, node)
                          ) || undefined
                        ); // Don't return NaN
                      }
                    }
                  ]);

                  return IdentAttributor;
                })(_parchment2.default.Attributor.Class);

                var IndentClass = new IdentAttributor('indent', 'ql-indent', {
                  scope: _parchment2.default.Scope.BLOCK,
                  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
                });

                exports.IndentClass = IndentClass;

                /***/
              },
              /* 65 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Blockquote = (function(_Block) {
                  _inherits(Blockquote, _Block);

                  function Blockquote() {
                    _classCallCheck(this, Blockquote);

                    return _possibleConstructorReturn(
                      this,
                      (
                        Blockquote.__proto__ ||
                        Object.getPrototypeOf(Blockquote)
                      ).apply(this, arguments)
                    );
                  }

                  return Blockquote;
                })(_block2.default);

                Blockquote.blotName = 'blockquote';
                Blockquote.tagName = 'blockquote';

                exports.default = Blockquote;

                /***/
              },
              /* 66 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Header = (function(_Block) {
                  _inherits(Header, _Block);

                  function Header() {
                    _classCallCheck(this, Header);

                    return _possibleConstructorReturn(
                      this,
                      (Header.__proto__ || Object.getPrototypeOf(Header)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(Header, null, [
                    {
                      key: 'formats',
                      value: function formats(domNode) {
                        return this.tagName.indexOf(domNode.tagName) + 1;
                      }
                    }
                  ]);

                  return Header;
                })(_block2.default);

                Header.blotName = 'header';
                Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];

                exports.default = Header;

                /***/
              },
              /* 67 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.ListItem = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _block = __webpack_require__(4);

                var _block2 = _interopRequireDefault(_block);

                var _container = __webpack_require__(25);

                var _container2 = _interopRequireDefault(_container);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _defineProperty(obj, key, value) {
                  if (key in obj) {
                    Object.defineProperty(obj, key, {
                      value: value,
                      enumerable: true,
                      configurable: true,
                      writable: true
                    });
                  } else {
                    obj[key] = value;
                  }
                  return obj;
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ListItem = (function(_Block) {
                  _inherits(ListItem, _Block);

                  function ListItem() {
                    _classCallCheck(this, ListItem);

                    return _possibleConstructorReturn(
                      this,
                      (
                        ListItem.__proto__ || Object.getPrototypeOf(ListItem)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(
                    ListItem,
                    [
                      {
                        key: 'format',
                        value: function format(name, value) {
                          if (name === List.blotName && !value) {
                            this.replaceWith(
                              _parchment2.default.create(this.statics.scope)
                            );
                          } else {
                            _get(
                              ListItem.prototype.__proto__ ||
                                Object.getPrototypeOf(ListItem.prototype),
                              'format',
                              this
                            ).call(this, name, value);
                          }
                        }
                      },
                      {
                        key: 'remove',
                        value: function remove() {
                          if (this.prev == null && this.next == null) {
                            this.parent.remove();
                          } else {
                            _get(
                              ListItem.prototype.__proto__ ||
                                Object.getPrototypeOf(ListItem.prototype),
                              'remove',
                              this
                            ).call(this);
                          }
                        }
                      },
                      {
                        key: 'replaceWith',
                        value: function replaceWith(name, value) {
                          this.parent.isolate(
                            this.offset(this.parent),
                            this.length()
                          );
                          if (name === this.parent.statics.blotName) {
                            this.parent.replaceWith(name, value);
                            return this;
                          } else {
                            this.parent.unwrap();
                            return _get(
                              ListItem.prototype.__proto__ ||
                                Object.getPrototypeOf(ListItem.prototype),
                              'replaceWith',
                              this
                            ).call(this, name, value);
                          }
                        }
                      }
                    ],
                    [
                      {
                        key: 'formats',
                        value: function formats(domNode) {
                          return domNode.tagName === this.tagName
                            ? undefined
                            : _get(
                                ListItem.__proto__ ||
                                  Object.getPrototypeOf(ListItem),
                                'formats',
                                this
                              ).call(this, domNode);
                        }
                      }
                    ]
                  );

                  return ListItem;
                })(_block2.default);

                ListItem.blotName = 'list-item';
                ListItem.tagName = 'LI';

                var List = (function(_Container) {
                  _inherits(List, _Container);

                  _createClass(List, null, [
                    {
                      key: 'create',
                      value: function create(value) {
                        var tagName = value === 'ordered' ? 'OL' : 'UL';
                        var node = _get(
                          List.__proto__ || Object.getPrototypeOf(List),
                          'create',
                          this
                        ).call(this, tagName);
                        if (value === 'checked' || value === 'unchecked') {
                          node.setAttribute(
                            'data-checked',
                            value === 'checked'
                          );
                        }
                        return node;
                      }
                    },
                    {
                      key: 'formats',
                      value: function formats(domNode) {
                        if (domNode.tagName === 'OL') return 'ordered';
                        if (domNode.tagName === 'UL') {
                          if (domNode.hasAttribute('data-checked')) {
                            return domNode.getAttribute('data-checked') ===
                              'true'
                              ? 'checked'
                              : 'unchecked';
                          } else {
                            return 'bullet';
                          }
                        }
                        return undefined;
                      }
                    }
                  ]);

                  function List(domNode) {
                    _classCallCheck(this, List);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (List.__proto__ || Object.getPrototypeOf(List)).call(
                        this,
                        domNode
                      )
                    );

                    var listEventHandler = function listEventHandler(e) {
                      if (e.target.parentNode !== domNode) return;
                      var format = _this2.statics.formats(domNode);
                      var blot = _parchment2.default.find(e.target);
                      if (format === 'checked') {
                        blot.format('list', 'unchecked');
                      } else if (format === 'unchecked') {
                        blot.format('list', 'checked');
                      }
                    };

                    domNode.addEventListener('touchstart', listEventHandler);
                    domNode.addEventListener('mousedown', listEventHandler);
                    return _this2;
                  }

                  _createClass(List, [
                    {
                      key: 'format',
                      value: function format(name, value) {
                        if (this.children.length > 0) {
                          this.children.tail.format(name, value);
                        }
                      }
                    },
                    {
                      key: 'formats',
                      value: function formats() {
                        // We don't inherit from FormatBlot
                        return _defineProperty(
                          {},
                          this.statics.blotName,
                          this.statics.formats(this.domNode)
                        );
                      }
                    },
                    {
                      key: 'insertBefore',
                      value: function insertBefore(blot, ref) {
                        if (blot instanceof ListItem) {
                          _get(
                            List.prototype.__proto__ ||
                              Object.getPrototypeOf(List.prototype),
                            'insertBefore',
                            this
                          ).call(this, blot, ref);
                        } else {
                          var index =
                            ref == null ? this.length() : ref.offset(this);
                          var after = this.split(index);
                          after.parent.insertBefore(blot, after);
                        }
                      }
                    },
                    {
                      key: 'optimize',
                      value: function optimize(context) {
                        _get(
                          List.prototype.__proto__ ||
                            Object.getPrototypeOf(List.prototype),
                          'optimize',
                          this
                        ).call(this, context);
                        var next = this.next;
                        if (
                          next != null &&
                          next.prev === this &&
                          next.statics.blotName === this.statics.blotName &&
                          next.domNode.tagName === this.domNode.tagName &&
                          next.domNode.getAttribute('data-checked') ===
                            this.domNode.getAttribute('data-checked')
                        ) {
                          next.moveChildren(this);
                          next.remove();
                        }
                      }
                    },
                    {
                      key: 'replace',
                      value: function replace(target) {
                        if (target.statics.blotName !== this.statics.blotName) {
                          var item = _parchment2.default.create(
                            this.statics.defaultChild
                          );
                          target.moveChildren(item);
                          this.appendChild(item);
                        }
                        _get(
                          List.prototype.__proto__ ||
                            Object.getPrototypeOf(List.prototype),
                          'replace',
                          this
                        ).call(this, target);
                      }
                    }
                  ]);

                  return List;
                })(_container2.default);

                List.blotName = 'list';
                List.scope = _parchment2.default.Scope.BLOCK_BLOT;
                List.tagName = ['OL', 'UL'];
                List.defaultChild = 'list-item';
                List.allowedChildren = [ListItem];

                exports.ListItem = ListItem;
                exports.default = List;

                /***/
              },
              /* 68 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _bold = __webpack_require__(56);

                var _bold2 = _interopRequireDefault(_bold);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Italic = (function(_Bold) {
                  _inherits(Italic, _Bold);

                  function Italic() {
                    _classCallCheck(this, Italic);

                    return _possibleConstructorReturn(
                      this,
                      (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  return Italic;
                })(_bold2.default);

                Italic.blotName = 'italic';
                Italic.tagName = ['EM', 'I'];

                exports.default = Italic;

                /***/
              },
              /* 69 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Script = (function(_Inline) {
                  _inherits(Script, _Inline);

                  function Script() {
                    _classCallCheck(this, Script);

                    return _possibleConstructorReturn(
                      this,
                      (Script.__proto__ || Object.getPrototypeOf(Script)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(Script, null, [
                    {
                      key: 'create',
                      value: function create(value) {
                        if (value === 'super') {
                          return document.createElement('sup');
                        } else if (value === 'sub') {
                          return document.createElement('sub');
                        } else {
                          return _get(
                            Script.__proto__ || Object.getPrototypeOf(Script),
                            'create',
                            this
                          ).call(this, value);
                        }
                      }
                    },
                    {
                      key: 'formats',
                      value: function formats(domNode) {
                        if (domNode.tagName === 'SUB') return 'sub';
                        if (domNode.tagName === 'SUP') return 'super';
                        return undefined;
                      }
                    }
                  ]);

                  return Script;
                })(_inline2.default);

                Script.blotName = 'script';
                Script.tagName = ['SUB', 'SUP'];

                exports.default = Script;

                /***/
              },
              /* 70 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Strike = (function(_Inline) {
                  _inherits(Strike, _Inline);

                  function Strike() {
                    _classCallCheck(this, Strike);

                    return _possibleConstructorReturn(
                      this,
                      (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  return Strike;
                })(_inline2.default);

                Strike.blotName = 'strike';
                Strike.tagName = 'S';

                exports.default = Strike;

                /***/
              },
              /* 71 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _inline = __webpack_require__(6);

                var _inline2 = _interopRequireDefault(_inline);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var Underline = (function(_Inline) {
                  _inherits(Underline, _Inline);

                  function Underline() {
                    _classCallCheck(this, Underline);

                    return _possibleConstructorReturn(
                      this,
                      (
                        Underline.__proto__ || Object.getPrototypeOf(Underline)
                      ).apply(this, arguments)
                    );
                  }

                  return Underline;
                })(_inline2.default);

                Underline.blotName = 'underline';
                Underline.tagName = 'U';

                exports.default = Underline;

                /***/
              },
              /* 72 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _link = __webpack_require__(27);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ATTRIBUTES = ['alt', 'height', 'width'];

                var Image = (function(_Parchment$Embed) {
                  _inherits(Image, _Parchment$Embed);

                  function Image() {
                    _classCallCheck(this, Image);

                    return _possibleConstructorReturn(
                      this,
                      (Image.__proto__ || Object.getPrototypeOf(Image)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Image,
                    [
                      {
                        key: 'format',
                        value: function format(name, value) {
                          if (ATTRIBUTES.indexOf(name) > -1) {
                            if (value) {
                              this.domNode.setAttribute(name, value);
                            } else {
                              this.domNode.removeAttribute(name);
                            }
                          } else {
                            _get(
                              Image.prototype.__proto__ ||
                                Object.getPrototypeOf(Image.prototype),
                              'format',
                              this
                            ).call(this, name, value);
                          }
                        }
                      }
                    ],
                    [
                      {
                        key: 'create',
                        value: function create(value) {
                          var node = _get(
                            Image.__proto__ || Object.getPrototypeOf(Image),
                            'create',
                            this
                          ).call(this, value);
                          if (typeof value === 'string') {
                            node.setAttribute('src', this.sanitize(value));
                          }
                          return node;
                        }
                      },
                      {
                        key: 'formats',
                        value: function formats(domNode) {
                          return ATTRIBUTES.reduce(function(
                            formats,
                            attribute
                          ) {
                            if (domNode.hasAttribute(attribute)) {
                              formats[attribute] = domNode.getAttribute(
                                attribute
                              );
                            }
                            return formats;
                          },
                          {});
                        }
                      },
                      {
                        key: 'match',
                        value: function match(url) {
                          return (
                            /\.(jpe?g|gif|png)$/.test(url) ||
                            /^data:image\/.+;base64/.test(url)
                          );
                        }
                      },
                      {
                        key: 'sanitize',
                        value: function sanitize(url) {
                          return (0, _link.sanitize)(url, [
                            'http',
                            'https',
                            'data'
                          ])
                            ? url
                            : '//:0';
                        }
                      },
                      {
                        key: 'value',
                        value: function value(domNode) {
                          return domNode.getAttribute('src');
                        }
                      }
                    ]
                  );

                  return Image;
                })(_parchment2.default.Embed);

                Image.blotName = 'image';
                Image.tagName = 'IMG';

                exports.default = Image;

                /***/
              },
              /* 73 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _block = __webpack_require__(4);

                var _link = __webpack_require__(27);

                var _link2 = _interopRequireDefault(_link);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var ATTRIBUTES = ['height', 'width'];

                var Video = (function(_BlockEmbed) {
                  _inherits(Video, _BlockEmbed);

                  function Video() {
                    _classCallCheck(this, Video);

                    return _possibleConstructorReturn(
                      this,
                      (Video.__proto__ || Object.getPrototypeOf(Video)).apply(
                        this,
                        arguments
                      )
                    );
                  }

                  _createClass(
                    Video,
                    [
                      {
                        key: 'format',
                        value: function format(name, value) {
                          if (ATTRIBUTES.indexOf(name) > -1) {
                            if (value) {
                              this.domNode.setAttribute(name, value);
                            } else {
                              this.domNode.removeAttribute(name);
                            }
                          } else {
                            _get(
                              Video.prototype.__proto__ ||
                                Object.getPrototypeOf(Video.prototype),
                              'format',
                              this
                            ).call(this, name, value);
                          }
                        }
                      }
                    ],
                    [
                      {
                        key: 'create',
                        value: function create(value) {
                          var node = _get(
                            Video.__proto__ || Object.getPrototypeOf(Video),
                            'create',
                            this
                          ).call(this, value);
                          node.setAttribute('frameborder', '0');
                          node.setAttribute('allowfullscreen', true);
                          node.setAttribute('src', this.sanitize(value));
                          return node;
                        }
                      },
                      {
                        key: 'formats',
                        value: function formats(domNode) {
                          return ATTRIBUTES.reduce(function(
                            formats,
                            attribute
                          ) {
                            if (domNode.hasAttribute(attribute)) {
                              formats[attribute] = domNode.getAttribute(
                                attribute
                              );
                            }
                            return formats;
                          },
                          {});
                        }
                      },
                      {
                        key: 'sanitize',
                        value: function sanitize(url) {
                          return _link2.default.sanitize(url);
                        }
                      },
                      {
                        key: 'value',
                        value: function value(domNode) {
                          return domNode.getAttribute('src');
                        }
                      }
                    ]
                  );

                  return Video;
                })(_block.BlockEmbed);

                Video.blotName = 'video';
                Video.className = 'ql-video';
                Video.tagName = 'IFRAME';

                exports.default = Video;

                /***/
              },
              /* 74 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.FormulaBlot = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _embed = __webpack_require__(35);

                var _embed2 = _interopRequireDefault(_embed);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var FormulaBlot = (function(_Embed) {
                  _inherits(FormulaBlot, _Embed);

                  function FormulaBlot() {
                    _classCallCheck(this, FormulaBlot);

                    return _possibleConstructorReturn(
                      this,
                      (
                        FormulaBlot.__proto__ ||
                        Object.getPrototypeOf(FormulaBlot)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(FormulaBlot, null, [
                    {
                      key: 'create',
                      value: function create(value) {
                        var node = _get(
                          FormulaBlot.__proto__ ||
                            Object.getPrototypeOf(FormulaBlot),
                          'create',
                          this
                        ).call(this, value);
                        if (typeof value === 'string') {
                          window.katex.render(value, node, {
                            throwOnError: false,
                            errorColor: '#f00'
                          });
                          node.setAttribute('data-value', value);
                        }
                        return node;
                      }
                    },
                    {
                      key: 'value',
                      value: function value(domNode) {
                        return domNode.getAttribute('data-value');
                      }
                    }
                  ]);

                  return FormulaBlot;
                })(_embed2.default);

                FormulaBlot.blotName = 'formula';
                FormulaBlot.className = 'ql-formula';
                FormulaBlot.tagName = 'SPAN';

                var Formula = (function(_Module) {
                  _inherits(Formula, _Module);

                  _createClass(Formula, null, [
                    {
                      key: 'register',
                      value: function register() {
                        _quill2.default.register(FormulaBlot, true);
                      }
                    }
                  ]);

                  function Formula() {
                    _classCallCheck(this, Formula);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (
                        Formula.__proto__ || Object.getPrototypeOf(Formula)
                      ).call(this)
                    );

                    if (window.katex == null) {
                      throw new Error('Formula module requires KaTeX.');
                    }
                    return _this2;
                  }

                  return Formula;
                })(_module2.default);

                exports.FormulaBlot = FormulaBlot;
                exports.default = Formula;

                /***/
              },
              /* 75 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.CodeToken = exports.CodeBlock = undefined;

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _parchment = __webpack_require__(0);

                var _parchment2 = _interopRequireDefault(_parchment);

                var _quill = __webpack_require__(5);

                var _quill2 = _interopRequireDefault(_quill);

                var _module = __webpack_require__(9);

                var _module2 = _interopRequireDefault(_module);

                var _code = __webpack_require__(13);

                var _code2 = _interopRequireDefault(_code);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var SyntaxCodeBlock = (function(_CodeBlock) {
                  _inherits(SyntaxCodeBlock, _CodeBlock);

                  function SyntaxCodeBlock() {
                    _classCallCheck(this, SyntaxCodeBlock);

                    return _possibleConstructorReturn(
                      this,
                      (
                        SyntaxCodeBlock.__proto__ ||
                        Object.getPrototypeOf(SyntaxCodeBlock)
                      ).apply(this, arguments)
                    );
                  }

                  _createClass(SyntaxCodeBlock, [
                    {
                      key: 'replaceWith',
                      value: function replaceWith(block) {
                        this.domNode.textContent = this.domNode.textContent;
                        this.attach();
                        _get(
                          SyntaxCodeBlock.prototype.__proto__ ||
                            Object.getPrototypeOf(SyntaxCodeBlock.prototype),
                          'replaceWith',
                          this
                        ).call(this, block);
                      }
                    },
                    {
                      key: 'highlight',
                      value: function highlight(_highlight) {
                        var text = this.domNode.textContent;
                        if (this.cachedText !== text) {
                          if (
                            text.trim().length > 0 ||
                            this.cachedText == null
                          ) {
                            this.domNode.innerHTML = _highlight(text);
                            this.domNode.normalize();
                            this.attach();
                          }
                          this.cachedText = text;
                        }
                      }
                    }
                  ]);

                  return SyntaxCodeBlock;
                })(_code2.default);

                SyntaxCodeBlock.className = 'ql-syntax';

                var CodeToken = new _parchment2.default.Attributor.Class(
                  'token',
                  'hljs',
                  {
                    scope: _parchment2.default.Scope.INLINE
                  }
                );

                var Syntax = (function(_Module) {
                  _inherits(Syntax, _Module);

                  _createClass(Syntax, null, [
                    {
                      key: 'register',
                      value: function register() {
                        _quill2.default.register(CodeToken, true);
                        _quill2.default.register(SyntaxCodeBlock, true);
                      }
                    }
                  ]);

                  function Syntax(quill, options) {
                    _classCallCheck(this, Syntax);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(
                        this,
                        quill,
                        options
                      )
                    );

                    if (typeof _this2.options.highlight !== 'function') {
                      throw new Error(
                        'Syntax module requires highlight.js. Please include the library on the page before Quill.'
                      );
                    }
                    var timer = null;
                    _this2.quill.on(
                      _quill2.default.events.SCROLL_OPTIMIZE,
                      function() {
                        clearTimeout(timer);
                        timer = setTimeout(function() {
                          _this2.highlight();
                          timer = null;
                        }, _this2.options.interval);
                      }
                    );
                    _this2.highlight();
                    return _this2;
                  }

                  _createClass(Syntax, [
                    {
                      key: 'highlight',
                      value: function highlight() {
                        var _this3 = this;

                        if (this.quill.selection.composing) return;
                        this.quill.update(_quill2.default.sources.USER);
                        var range = this.quill.getSelection();
                        this.quill.scroll
                          .descendants(SyntaxCodeBlock)
                          .forEach(function(code) {
                            code.highlight(_this3.options.highlight);
                          });
                        this.quill.update(_quill2.default.sources.SILENT);
                        if (range != null) {
                          this.quill.setSelection(
                            range,
                            _quill2.default.sources.SILENT
                          );
                        }
                      }
                    }
                  ]);

                  return Syntax;
                })(_module2.default);

                Syntax.DEFAULTS = {
                  highlight: (function() {
                    if (window.hljs == null) return null;
                    return function(text) {
                      var result = window.hljs.highlightAuto(text);
                      return result.value;
                    };
                  })(),
                  interval: 1000
                };

                exports.CodeBlock = SyntaxCodeBlock;
                exports.CodeToken = CodeToken;
                exports.default = Syntax;

                /***/
              },
              /* 76 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>';

                /***/
              },
              /* 77 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>';

                /***/
              },
              /* 78 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>';

                /***/
              },
              /* 79 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>';

                /***/
              },
              /* 80 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <g class="ql-fill ql-color-label"> <polygon points="6 6.868 6 6 5 6 5 7 5.942 7 6 6.868"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points="6.817 5 6 5 6 6 6.38 6 6.817 5"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points="4 11.439 4 11 3 11 3 12 3.755 12 4 11.439"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points="4.63 10 4 10 4 11 4.192 11 4.63 10"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points="13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points="12 6.868 12 6 11.62 6 12 6.868"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points="12.933 9 13 9 13 8 12.495 8 12.933 9"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points="5.5 13 9 5 12.5 13"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>';

                /***/
              },
              /* 81 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <rect class="ql-fill ql-stroke" height=3 width=3 x=4 y=5></rect> <rect class="ql-fill ql-stroke" height=3 width=3 x=11 y=5></rect> <path class="ql-even ql-fill ql-stroke" d=M7,8c0,4.031-3,5-3,5></path> <path class="ql-even ql-fill ql-stroke" d=M14,8c0,4.031-3,5-3,5></path> </svg>';

                /***/
              },
              /* 82 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>';

                /***/
              },
              /* 83 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>';

                /***/
              },
              /* 84 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class="ql-color-label ql-stroke ql-transparent" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points="5.5 11 9 3 12.5 11"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>';

                /***/
              },
              /* 85 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="3 11 5 9 3 7 3 11"></polygon> <line class="ql-stroke ql-fill" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>';

                /***/
              },
              /* 86 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="15 12 13 10 15 8 15 12"></polygon> <line class="ql-stroke ql-fill" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>';

                /***/
              },
              /* 87 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>';

                /***/
              },
              /* 88 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>';

                /***/
              },
              /* 89 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>';

                /***/
              },
              /* 90 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform="translate(24 18) rotate(-180)"/> </svg>';

                /***/
              },
              /* 91 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>';

                /***/
              },
              /* 92 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>';

                /***/
              },
              /* 93 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>';

                /***/
              },
              /* 94 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>';

                /***/
              },
              /* 95 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class="ql-even ql-fill" points="5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12"></polyline> </svg>';

                /***/
              },
              /* 96 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class="ql-fill ql-stroke" points="3 7 3 11 5 9 3 7"></polyline> </svg>';

                /***/
              },
              /* 97 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="5 7 5 11 3 9 5 7"></polyline> </svg>';

                /***/
              },
              /* 98 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class="ql-even ql-stroke" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class="ql-even ql-stroke" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>';

                /***/
              },
              /* 99 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class="ql-stroke ql-thin" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class="ql-stroke ql-thin" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class="ql-stroke ql-thin" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>';

                /***/
              },
              /* 100 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>';

                /***/
              },
              /* 101 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points="3 4 4 5 6 3"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points="3 14 4 15 6 13"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="3 9 4 10 6 8"></polyline> </svg>';

                /***/
              },
              /* 102 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>';

                /***/
              },
              /* 103 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>';

                /***/
              },
              /* 104 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <line class="ql-stroke ql-thin" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>';

                /***/
              },
              /* 105 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>';

                /***/
              },
              /* 106 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>';

                /***/
              },
              /* 107 */
              /***/ function(module, exports) {
                module.exports =
                  '<svg viewbox="0 0 18 18"> <polygon class=ql-stroke points="7 11 9 13 11 11 7 11"></polygon> <polygon class=ql-stroke points="7 7 9 5 11 7 7 7"></polygon> </svg>';

                /***/
              },
              /* 108 */
              /***/ function(module, exports, __webpack_require__) {
                'use strict';

                Object.defineProperty(exports, '__esModule', {
                  value: true
                });
                exports.default = exports.BubbleTooltip = undefined;

                var _get = function get(object, property, receiver) {
                  if (object === null) object = Function.prototype;
                  var desc = Object.getOwnPropertyDescriptor(object, property);
                  if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                      return undefined;
                    } else {
                      return get(parent, property, receiver);
                    }
                  } else if ('value' in desc) {
                    return desc.value;
                  } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                      return undefined;
                    }
                    return getter.call(receiver);
                  }
                };

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ('value' in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                var _extend = __webpack_require__(3);

                var _extend2 = _interopRequireDefault(_extend);

                var _emitter = __webpack_require__(8);

                var _emitter2 = _interopRequireDefault(_emitter);

                var _base = __webpack_require__(43);

                var _base2 = _interopRequireDefault(_base);

                var _selection = __webpack_require__(15);

                var _icons = __webpack_require__(41);

                var _icons2 = _interopRequireDefault(_icons);

                function _interopRequireDefault(obj) {
                  return obj && obj.__esModule ? obj : { default: obj };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError('Cannot call a class as a function');
                  }
                }

                function _possibleConstructorReturn(self, call) {
                  if (!self) {
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  }
                  return call &&
                    (typeof call === 'object' || typeof call === 'function')
                    ? call
                    : self;
                }

                function _inherits(subClass, superClass) {
                  if (typeof superClass !== 'function' && superClass !== null) {
                    throw new TypeError(
                      'Super expression must either be null or a function, not ' +
                        typeof superClass
                    );
                  }
                  subClass.prototype = Object.create(
                    superClass && superClass.prototype,
                    {
                      constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                      }
                    }
                  );
                  if (superClass)
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(subClass, superClass)
                      : (subClass.__proto__ = superClass);
                }

                var TOOLBAR_CONFIG = [
                  ['bold', 'italic', 'link'],
                  [{ header: 1 }, { header: 2 }, 'blockquote']
                ];

                var BubbleTheme = (function(_BaseTheme) {
                  _inherits(BubbleTheme, _BaseTheme);

                  function BubbleTheme(quill, options) {
                    _classCallCheck(this, BubbleTheme);

                    if (
                      options.modules.toolbar != null &&
                      options.modules.toolbar.container == null
                    ) {
                      options.modules.toolbar.container = TOOLBAR_CONFIG;
                    }

                    var _this = _possibleConstructorReturn(
                      this,
                      (
                        BubbleTheme.__proto__ ||
                        Object.getPrototypeOf(BubbleTheme)
                      ).call(this, quill, options)
                    );

                    _this.quill.container.classList.add('ql-bubble');
                    return _this;
                  }

                  _createClass(BubbleTheme, [
                    {
                      key: 'extendToolbar',
                      value: function extendToolbar(toolbar) {
                        this.tooltip = new BubbleTooltip(
                          this.quill,
                          this.options.bounds
                        );
                        this.tooltip.root.appendChild(toolbar.container);
                        this.buildButtons(
                          [].slice.call(
                            toolbar.container.querySelectorAll('button')
                          ),
                          _icons2.default
                        );
                        this.buildPickers(
                          [].slice.call(
                            toolbar.container.querySelectorAll('select')
                          ),
                          _icons2.default
                        );
                      }
                    }
                  ]);

                  return BubbleTheme;
                })(_base2.default);

                BubbleTheme.DEFAULTS = (0, _extend2.default)(
                  true,
                  {},
                  _base2.default.DEFAULTS,
                  {
                    modules: {
                      toolbar: {
                        handlers: {
                          link: function link(value) {
                            if (!value) {
                              this.quill.format('link', false);
                            } else {
                              this.quill.theme.tooltip.edit();
                            }
                          }
                        }
                      }
                    }
                  }
                );

                var BubbleTooltip = (function(_BaseTooltip) {
                  _inherits(BubbleTooltip, _BaseTooltip);

                  function BubbleTooltip(quill, bounds) {
                    _classCallCheck(this, BubbleTooltip);

                    var _this2 = _possibleConstructorReturn(
                      this,
                      (
                        BubbleTooltip.__proto__ ||
                        Object.getPrototypeOf(BubbleTooltip)
                      ).call(this, quill, bounds)
                    );

                    _this2.quill.on(
                      _emitter2.default.events.EDITOR_CHANGE,
                      function(type, range, oldRange, source) {
                        if (type !== _emitter2.default.events.SELECTION_CHANGE)
                          return;
                        if (
                          range != null &&
                          range.length > 0 &&
                          source === _emitter2.default.sources.USER
                        ) {
                          _this2.show();
                          // Lock our width so we will expand beyond our offsetParent boundaries
                          _this2.root.style.left = '0px';
                          _this2.root.style.width = '';
                          _this2.root.style.width =
                            _this2.root.offsetWidth + 'px';
                          var lines = _this2.quill.getLines(
                            range.index,
                            range.length
                          );
                          if (lines.length === 1) {
                            _this2.position(_this2.quill.getBounds(range));
                          } else {
                            var lastLine = lines[lines.length - 1];
                            var index = _this2.quill.getIndex(lastLine);
                            var length = Math.min(
                              lastLine.length() - 1,
                              range.index + range.length - index
                            );
                            var _bounds = _this2.quill.getBounds(
                              new _selection.Range(index, length)
                            );
                            _this2.position(_bounds);
                          }
                        } else if (
                          document.activeElement !== _this2.textbox &&
                          _this2.quill.hasFocus()
                        ) {
                          _this2.hide();
                        }
                      }
                    );
                    return _this2;
                  }

                  _createClass(BubbleTooltip, [
                    {
                      key: 'listen',
                      value: function listen() {
                        var _this3 = this;

                        _get(
                          BubbleTooltip.prototype.__proto__ ||
                            Object.getPrototypeOf(BubbleTooltip.prototype),
                          'listen',
                          this
                        ).call(this);
                        this.root
                          .querySelector('.ql-close')
                          .addEventListener('click', function() {
                            _this3.root.classList.remove('ql-editing');
                          });
                        this.quill.on(
                          _emitter2.default.events.SCROLL_OPTIMIZE,
                          function() {
                            // Let selection be restored by toolbar handlers before repositioning
                            setTimeout(function() {
                              if (_this3.root.classList.contains('ql-hidden'))
                                return;
                              var range = _this3.quill.getSelection();
                              if (range != null) {
                                _this3.position(_this3.quill.getBounds(range));
                              }
                            }, 1);
                          }
                        );
                      }
                    },
                    {
                      key: 'cancel',
                      value: function cancel() {
                        this.show();
                      }
                    },
                    {
                      key: 'position',
                      value: function position(reference) {
                        var shift = _get(
                          BubbleTooltip.prototype.__proto__ ||
                            Object.getPrototypeOf(BubbleTooltip.prototype),
                          'position',
                          this
                        ).call(this, reference);
                        var arrow = this.root.querySelector(
                          '.ql-tooltip-arrow'
                        );
                        arrow.style.marginLeft = '';
                        if (shift === 0) return shift;
                        arrow.style.marginLeft =
                          -1 * shift - arrow.offsetWidth / 2 + 'px';
                      }
                    }
                  ]);

                  return BubbleTooltip;
                })(_base.BaseTooltip);

                BubbleTooltip.TEMPLATE = [
                  '<span class="ql-tooltip-arrow"></span>',
                  '<div class="ql-tooltip-editor">',
                  '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">',
                  '<a class="ql-close"></a>',
                  '</div>'
                ].join('');

                exports.BubbleTooltip = BubbleTooltip;
                exports.default = BubbleTheme;

                /***/
              },
              /* 109 */
              /***/ function(module, exports, __webpack_require__) {
                module.exports = __webpack_require__(63);

                /***/
              }
              /******/
            ]
          )['default'];
        });
      },
      { buffer: '../../node_modules/buffer/index.js' }
    ],
    'quill.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.createEditors = void 0;

        var _quill = _interopRequireDefault(require('quill'));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var createEditors = function createEditors() {
          var toolbarOptions = [
            [
              {
                header: [4, false]
              }
            ],
            ['bold', 'italic', 'underline', 'strike'], // toggled buttons
            ['link', 'blockquote'],
            [
              {
                list: 'ordered'
              },
              {
                list: 'bullet'
              }
            ],
            ['clean'] // remove formatting button
          ];
          return new _quill.default('.editor', {
            modules: {
              toolbar: toolbarOptions
            },
            theme: 'snow',
            placeholder: 'Describe your topic in details...'
          });
        };

        exports.createEditors = createEditors;
      },
      { quill: '../../node_modules/quill/dist/quill.js' }
    ],
    'filter.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.filter = void 0;

        var filter = function filter(filterStr) {
          location.assign('/?'.concat(filterStr, '#topics'));
        };

        exports.filter = filter;
      },
      {}
    ],
    '../../node_modules/object-to-formdata/dist/index.module.js': [
      function(require, module, exports) {
        const isUndefined = value => value === undefined;

        const isNull = value => value === null;

        const isBoolean = value => typeof value === 'boolean';

        const isObject = value => value === Object(value);

        const isArray = value => Array.isArray(value);

        const isDate = value => value instanceof Date;

        const isBlob = value =>
          value &&
          typeof value.size === 'number' &&
          typeof value.type === 'string' &&
          typeof value.slice === 'function';

        const isFile = value =>
          isBlob(value) &&
          typeof value.name === 'string' &&
          (typeof value.lastModifiedDate === 'object' ||
            typeof value.lastModified === 'number');

        const serialize = (obj, cfg, fd, pre) => {
          cfg = cfg || {};

          cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;

          cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds)
            ? false
            : cfg.nullsAsUndefineds;

          cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers)
            ? false
            : cfg.booleansAsIntegers;

          cfg.allowEmptyArrays = isUndefined(cfg.allowEmptyArrays)
            ? false
            : cfg.allowEmptyArrays;

          fd = fd || new FormData();

          if (isUndefined(obj)) {
            return fd;
          } else if (isNull(obj)) {
            if (!cfg.nullsAsUndefineds) {
              fd.append(pre, '');
            }
          } else if (isBoolean(obj)) {
            if (cfg.booleansAsIntegers) {
              fd.append(pre, obj ? 1 : 0);
            } else {
              fd.append(pre, obj);
            }
          } else if (isArray(obj)) {
            if (obj.length) {
              obj.forEach((value, index) => {
                const key = pre + '[' + (cfg.indices ? index : '') + ']';

                serialize(value, cfg, fd, key);
              });
            } else if (cfg.allowEmptyArrays) {
              fd.append(pre + '[]', '');
            }
          } else if (isDate(obj)) {
            fd.append(pre, obj.toISOString());
          } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {
            Object.keys(obj).forEach(prop => {
              const value = obj[prop];

              if (isArray(value)) {
                while (
                  prop.length > 2 &&
                  prop.lastIndexOf('[]') === prop.length - 2
                ) {
                  prop = prop.substring(0, prop.length - 2);
                }
              }

              const key = pre ? pre + '[' + prop + ']' : prop;

              serialize(value, cfg, fd, key);
            });
          } else {
            fd.append(pre, obj);
          }

          return fd;
        };

        module.exports = {
          serialize
        };
      },
      {}
    ],
    'geolocation.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.getLocation = exports.geoLocate = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var geoLocate = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
              var getPosition;
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      getPosition = function getPosition(options) {
                        return new Promise(function(resolve, reject) {
                          navigator.geolocation.getCurrentPosition(
                            resolve,
                            reject,
                            options
                          );
                        });
                      };

                      _context.next = 3;
                      return getPosition();

                    case 3:
                      return _context.abrupt('return', _context.sent);

                    case 4:
                    case 'end':
                      return _context.stop();
                  }
                }
              }, _callee);
            })
          );

          return function geoLocate() {
            return _ref.apply(this, arguments);
          };
        })();

        exports.geoLocate = geoLocate;

        var getLocation = /*#__PURE__*/ (function() {
          var _ref2 = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee2(
              locationLatLng
            ) {
              var res, name;
              return regeneratorRuntime.wrap(
                function _callee2$(_context2) {
                  while (1) {
                    switch ((_context2.prev = _context2.next)) {
                      case 0:
                        _context2.prev = 0;
                        console.log(locationLatLng);
                        _context2.next = 4;
                        return (0, _axios.default)({
                          method: 'GET',
                          url: 'https://www.mapquestapi.com/geocoding/v1/reverse?key=qGF0GOYsNSQ0PFJAdJBIhVglHRYkdLy1&inFormat=kvp&outFormat=json&location='
                            .concat(locationLatLng.lat, ',')
                            .concat(locationLatLng.lng, '&maxResults=1')
                        });

                      case 4:
                        res = _context2.sent;
                        console.log(res);

                        if (!(res.status === 200)) {
                          _context2.next = 9;
                          break;
                        }

                        name = [
                          res.data.results[0].locations[0].adminArea1,
                          res.data.results[0].locations[0].adminArea3,
                          res.data.results[0].locations[0].adminArea5
                        ];
                        return _context2.abrupt('return', {
                          coordinates: [locationLatLng.lng, locationLatLng.lat],
                          address: name.join('|')
                        });

                      case 9:
                        _context2.next = 15;
                        break;

                      case 11:
                        _context2.prev = 11;
                        _context2.t0 = _context2['catch'](0);
                        console.log(_context2.t0);
                        (0, _alert.showAlert)(
                          'failed',
                          'Please provide a valid location'
                        );

                      case 15:
                      case 'end':
                        return _context2.stop();
                    }
                  }
                },
                _callee2,
                null,
                [[0, 11]]
              );
            })
          );

          return function getLocation(_x) {
            return _ref2.apply(this, arguments);
          };
        })();

        exports.getLocation = getLocation;
      },
      { axios: '../../node_modules/axios/index.js', './alert': 'alert.js' }
    ],
    'createTopic.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.createTopic = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _objectToFormdata = require('object-to-formdata');

        var _alert = require('./alert');

        var _loader = require('./loader');

        var _geolocation = require('./geolocation');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var submitTopic = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(
              topic,
              operation,
              url,
              msg
            ) {
              var topicLocation, data, res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return (0, _geolocation.getLocation)(
                          topic.locationLatLng
                        );

                      case 3:
                        topicLocation = _context.sent;

                        if (topic.category) {
                          _context.next = 8;
                          break;
                        }

                        return _context.abrupt(
                          'return',
                          (0, _alert.showAlert)(
                            'failed',
                            'Please pick a category for your topic from the dropdown.'
                          )
                        );

                      case 8:
                        if (!(topic.description.text.trim().length < 30)) {
                          _context.next = 12;
                          break;
                        }

                        return _context.abrupt(
                          'return',
                          (0, _alert.showAlert)(
                            'failed',
                            "Your topic's description is too short.(< 30 characters)"
                          )
                        );

                      case 12:
                        if (topicLocation) {
                          _context.next = 16;
                          break;
                        }

                        return _context.abrupt(
                          'return',
                          (0, _alert.showAlert)(
                            'failed',
                            'Location address not found. Please try again'
                          )
                        );

                      case 16:
                        (0, _loader.showLoader)();
                        topic.description = JSON.stringify(topic.description);
                        topicLocation.type = 'Point';
                        delete topic.locationLatLng; // topic.location = JSON.stringify(topicLocation);

                        data = new FormData();
                        Object.keys(topic).forEach(function(k) {
                          return data.append(k, topic[k]);
                        });
                        data.append('location', JSON.stringify(topicLocation));
                        data.append(
                          'imageCover',
                          document.getElementById('imageCover').files[0]
                        );
                        console.log(data);
                        _context.next = 27;
                        return (0, _axios.default)({
                          method: operation,
                          url: ''.concat(url),
                          data: data
                        });

                      case 27:
                        res = _context.sent;
                        (0, _loader.hideLoader)();

                        if (res.data.status === 'success') {
                          (0, _alert.showAlert)('success', ''.concat(msg));
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                      case 30:
                        (0, _loader.hideLoader)();
                        _context.next = 37;
                        break;

                      case 33:
                        _context.prev = 33;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        console.log(_context.t0); // showAlert('failed', err.response.data.message);

                      case 37:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 33]]
              );
            })
          );

          return function submitTopic(_x, _x2, _x3, _x4) {
            return _ref.apply(this, arguments);
          };
        })();

        var createTopic = function createTopic(
          form,
          title,
          category,
          tags,
          mediaUrls,
          marker,
          editor,
          op
        ) {
          var topicId =
            arguments.length > 8 && arguments[8] !== undefined
              ? arguments[8]
              : {
                  value: ''
                };
          var menus =
            arguments.length > 9 && arguments[9] !== undefined
              ? arguments[9]
              : [];
          form.addEventListener(
            'submit',
            /*#__PURE__*/ (function() {
              var _ref2 = _asyncToGenerator(
                /*#__PURE__*/ regeneratorRuntime.mark(function _callee2(e) {
                  var url, msg, operation, topic;
                  return regeneratorRuntime.wrap(
                    function _callee2$(_context2) {
                      while (1) {
                        switch ((_context2.prev = _context2.next)) {
                          case 0:
                            if (op === 'update') {
                              url = 'http://127.0.0.1:3000/api/v1/topics/'.concat(
                                topicId.value
                              );
                              msg = 'Topic successfully updated';
                              operation = 'PATCH';
                            } else {
                              url = 'http://127.0.0.1:3000/api/v1/topics';
                              msg = 'Topic successfully created';
                              operation = 'POST';
                            }

                            e.preventDefault();
                            topic = {
                              title: title.value,
                              category: category.value,
                              description: {
                                text: editor
                                  .getText()
                                  .split('\n\n')
                                  .join(),
                                deltaOps: editor.getContents()
                              },
                              locationLatLng: marker.getLatLng()
                            };

                            if (tags.value) {
                              topic.tags = tags.value.split(',');
                            }

                            if (mediaUrls.value) {
                              topic.mediaUrls = mediaUrls.value.split(',');
                            }

                            _context2.prev = 5;
                            _context2.next = 8;
                            return submitTopic(topic, operation, url, msg);

                          case 8:
                            _context2.next = 13;
                            break;

                          case 10:
                            _context2.prev = 10;
                            _context2.t0 = _context2['catch'](5);
                            console.log(_context2.t0);

                          case 13:
                          case 'end':
                            return _context2.stop();
                        }
                      }
                    },
                    _callee2,
                    null,
                    [[5, 10]]
                  );
                })
              );

              return function(_x5) {
                return _ref2.apply(this, arguments);
              };
            })()
          );
          form.addEventListener('reset', function(e) {
            e.preventDefault();
            var topic = topicId.topic;
            editor.setText('');

            try {
              var descriptionDelta = JSON.parse(topic.description);
              editor.setContents(descriptionDelta.deltaOps);
            } catch (_unused) {
              editor.setText(topic.description);
            }

            title.value = topic.title;
            menus[0].setChoiceByValue(topic.category);
            menus[0].unhighlightAll();
            menus[1].removeActiveItems(0).setValue(topic.tags);
            menus[2].removeActiveItems(0).setValue(topic.mediaUrls);
            marker.setLatLng(
              new L.LatLng(
                topic.location.coordinates[1],
                topic.location.coordinates[0]
              )
            );
          });
        };

        exports.createTopic = createTopic;
      },
      {
        axios: '../../node_modules/axios/index.js',
        'object-to-formdata':
          '../../node_modules/object-to-formdata/dist/index.module.js',
        './alert': 'alert.js',
        './loader': 'loader.js',
        './geolocation': 'geolocation.js'
      }
    ],
    'createReport.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.createReport = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _loader = require('./loader');

        var _alert = require('./alert');

        var _geolocation = require('./geolocation');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var submitReport = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(
              topicId,
              reportContent,
              reportMediaUrls,
              operation,
              url,
              msg
            ) {
              var position, reportLocation, report, res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return (0, _geolocation.geoLocate)();

                      case 3:
                        position = _context.sent;
                        _context.next = 10;
                        break;

                      case 6:
                        _context.prev = 6;
                        _context.t0 = _context['catch'](0);
                        (0, _alert.showAlert)(
                          'warning',
                          ''.concat(
                            _context.t0.message,
                            '. Default location of latitude 0 and longitude 0 will be used'
                          )
                        );
                        position = {
                          coords: {
                            latitude: 0,
                            longitude: 0
                          }
                        };

                      case 10:
                        _context.prev = 10;
                        (0, _loader.showLoader)();
                        _context.next = 14;
                        return (0, _geolocation.getLocation)({
                          lat: position.coords.latitude,
                          lng: position.coords.longitude
                        });

                      case 14:
                        reportLocation = _context.sent;

                        if (reportLocation) {
                          _context.next = 20;
                          break;
                        }

                        (0, _loader.hideLoader)();
                        return _context.abrupt(
                          'return',
                          (0, _alert.showAlert)(
                            'failed',
                            'Location address not found. Please try again'
                          )
                        );

                      case 20:
                        reportLocation.description = reportLocation.address;
                        reportLocation.type = 'Point';
                        delete reportLocation.address;
                        report = {
                          content: reportContent,
                          location: reportLocation
                        };

                        if (operation === 'POST') {
                          report.topic = topicId;
                        }

                        if (reportMediaUrls) {
                          report.mediaUrls = reportMediaUrls.split(',');
                        }

                        _context.next = 28;
                        return (0, _axios.default)({
                          method: operation,
                          url: url,
                          data: report
                        });

                      case 28:
                        res = _context.sent;

                        if (res.data.status === 'success') {
                          (0, _alert.showAlert)('success', msg);
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                      case 30:
                        (0, _loader.hideLoader)();
                        _context.next = 38;
                        break;

                      case 33:
                        _context.prev = 33;
                        _context.t1 = _context['catch'](10);
                        (0, _loader.hideLoader)();
                        console.log(_context.t1);
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t1.response.data.message
                        );

                      case 38:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [
                  [0, 6],
                  [10, 33]
                ]
              );
            })
          );

          return function submitReport(_x, _x2, _x3, _x4, _x5, _x6) {
            return _ref.apply(this, arguments);
          };
        })();

        var createReport = function createReport(
          createReportForm,
          reportContentEl,
          reportMediaUrlsEl,
          op,
          report,
          mediaUrls
        ) {
          createReportForm.addEventListener('submit', function(e) {
            var url, msg, operation;

            if (op === 'update') {
              url = 'http://127.0.0.1:3000/api/v1/reports/'.concat(
                report.value
              );
              msg = 'Report successfully updated';
              operation = 'PATCH';
            } else {
              url = 'http://127.0.0.1:3000/api/v1/reports';
              msg = 'Report successfully submitted';
              operation = 'POST';
            }

            e.preventDefault();
            submitReport(
              createReportForm.dataset.topic,
              reportContentEl.value,
              reportMediaUrlsEl.value,
              operation,
              url,
              msg
            );
          });
          createReportForm.addEventListener('reset', function(e) {
            e.preventDefault();
            reportContentEl.value = report.report.content;
            mediaUrls.removeActiveItems(0).setValue(report.report.mediaUrls);
          });
        };

        exports.createReport = createReport;
      },
      {
        axios: '../../node_modules/axios/index.js',
        './loader': 'loader.js',
        './alert': 'alert.js',
        './geolocation': 'geolocation.js'
      }
    ],
    'search.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.searchTopics = void 0;

        var _loader = require('./loader');

        var searchTopics = function searchTopics(form, pat) {
          form.addEventListener('submit', function(e) {
            e.preventDefault();
            (0, _loader.showLoader)();
            location.assign(
              '/?search='.concat(encodeURIComponent(pat.value.trim()))
            );
          });
        };

        exports.searchTopics = searchTopics;
      },
      { './loader': 'loader.js' }
    ],
    'echarts.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.reportCharts = void 0;
        var sentimentChartOption = {
          title: {
            text: 'Sentiment analysis',
            textStyle: {
              fontFamily: 'Frank Ruhl Libre',
              fontSize: 16,
              fontWeight: 400
            },
            subtext: 'Most people feel positive about this',
            subtextStyle: {
              fontFamily: 'PT serif',
              fontSize: 13,
              fontWeight: 400,
              color: '#ba9545'
            }
          },
          tooltip: {
            trigger: 'item',
            formatter: '{a} <br/>{b} : {c} ({d}%)'
          },
          series: [
            {
              name: 'Sentiment',
              type: 'pie',
              center: ['50%', '58%'],
              radius: '60%',
              data: [],
              emphasis: {
                itemStyle: {
                  shadowBlur: 5,
                  shadowOffsetX: 0,
                  shadowColor: 'rgba(122, 122, 122, .5)'
                }
              }
            }
          ]
        };
        var reportChartOption = {
          tooltip: {
            trigger: 'axis',
            position: function position(pt) {
              return [pt[0], '10%'];
            }
          },
          title: {
            text: 'Report graph',
            textStyle: {
              fontFamily: 'Frank Ruhl Libre',
              fontSize: 16,
              fontWeight: 400
            },
            subtext: 'There is a total of 200 reports',
            subtextStyle: {
              fontFamily: 'PT serif',
              fontSize: 13,
              fontWeight: 400,
              color: '#ba9545',
              paddingBottom: 15
            }
          },
          toolbox: {
            show: true,
            feature: {
              dataZoom: {
                yAxisIndex: 'none'
              },
              magicType: {
                type: ['line', 'bar']
              }
            }
          },
          xAxis: {
            type: 'category',
            boundaryGap: false,
            data: [],
            axisLine: {
              lineStyle: {
                color: 'rgba(186, 149, 69, 1)'
              }
            },
            axisLabel: {
              fontFamily: 'PT serif',
              margin: 10
            }
          },
          yAxis: {
            type: 'value',
            boundaryGap: [0, '100%'],
            axisLine: {
              lineStyle: {
                color: 'rgba(186, 149, 69, 1)'
              }
            },
            axisLabel: {
              fontFamily: 'PT serif',
              margin: 10
            },
            splitLine: {
              lineStyle: {
                type: 'dotted'
              }
            }
          },
          dataZoom: [
            {
              type: 'inside',
              start: 0,
              end: 10
            },
            {
              start: 0,
              end: 10,
              handleIcon:
                'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
              handleSize: '75%',
              handleStyle: {
                color: '#fff',
                shadowBlur: 3,
                shadowColor: 'rgba(0, 0, 0, 0.6)',
                shadowOffsetX: 2,
                shadowOffsetY: 2
              }
            }
          ],
          series: [
            {
              name: 'Reports',
              type: 'line',
              smooth: true,
              symbol: 'circle',
              sampling: 'average',
              itemStyle: {
                color: 'rgba(186, 149, 69, 1)'
              },
              areaStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                  {
                    offset: 0,
                    color: 'rgba(186, 149, 69, .9)'
                  },
                  {
                    offset: 1,
                    color: 'rgba(186, 149, 69, .9)'
                  }
                ])
              },
              data: []
            }
          ]
        };
        var charts = [];

        var reportCharts = function reportCharts(
          sentimentChartContainers,
          reportsChartContainers
        ) {
          reportsChartContainers.forEach(function(c) {
            var reportChart = echarts.init(c);
            var data = JSON.parse(c.dataset.reports);
            reportChartOption.xAxis.data = data[0];
            reportChartOption.series[0].data = data[1];
            reportChart.setOption(reportChartOption);
            charts.push(reportChart);
          });
          sentimentChartContainers.forEach(function(c) {
            var sentimentChart = echarts.init(c);
            sentimentChartOption.series[0].data = JSON.parse(
              c.dataset.sentiments
            );
            sentimentChart.setOption(sentimentChartOption);
            charts.push(sentimentChart);
          });
        };

        exports.reportCharts = reportCharts;
        window.addEventListener('resize', function(e) {
          charts.forEach(function(c) {
            return c.resize();
          });
        });
      },
      {}
    ],
    'updateUser.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.updateUser = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var updateUserInfo = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(data) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'PATCH',
                          url: 'http://127.0.0.1:3000/api/v1/users/updateme',
                          data: data
                        });

                      case 4:
                        res = _context.sent;

                        if (res.data.status === 'success') {
                          (0, _alert.hideAlert)('.confirm__container');
                          (0, _alert.showAlert)(
                            'success',
                            'Information successfully updated'
                          );
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                        _context.next = 12;
                        break;

                      case 8:
                        _context.prev = 8;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 12:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 8]]
              );
            })
          );

          return function updateUserInfo(_x) {
            return _ref.apply(this, arguments);
          };
        })();

        var updateUser = function updateUser(form) {
          form.addEventListener('submit', function(e) {
            e.preventDefault();
            var photoForm = new FormData();
            photoForm.append('name', document.getElementById('username').value);
            photoForm.append('email', document.getElementById('email').value);
            photoForm.append(
              'photo',
              document.getElementById('photo').files[0]
            );
            console.log(photoForm);
            (0,
            _alert.showConfirm)('Are you sure you want to update your information?', function() {
              updateUserInfo(photoForm);
            });
          });
        };

        exports.updateUser = updateUser;
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'updatePassword.js': [
      function(require, module, exports) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        exports.updatePassword = void 0;

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var updateUserPassword = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(
              currentPassword,
              password,
              passwordConfirm
            ) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'POST',
                          url:
                            'http://127.0.0.1:3000/api/v1/users/updatepassword',
                          data: {
                            currentPassword: currentPassword,
                            password: password,
                            passwordConfirm: passwordConfirm
                          }
                        });

                      case 4:
                        res = _context.sent;

                        if (res.data.status === 'success') {
                          (0, _alert.hideAlert)('.confirm__container');
                          (0, _alert.showAlert)(
                            'success',
                            'Password successfully updated'
                          );
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                        _context.next = 12;
                        break;

                      case 8:
                        _context.prev = 8;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 12:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 8]]
              );
            })
          );

          return function updateUserPassword(_x, _x2, _x3) {
            return _ref.apply(this, arguments);
          };
        })();

        var updatePassword = function updatePassword(form) {
          form.addEventListener('submit', function(e) {
            e.preventDefault();
            var currentPassword = form.querySelector('#current-password');
            var password = form.querySelector('#password');
            var passwordConfirm = form.querySelector('#password-confirm');
            (0,
            _alert.showConfirm)('Are you sure you want to update your password?', function() {
              updateUserPassword(
                currentPassword.value,
                password.value,
                passwordConfirm.value
              );
            });
          });
        };

        exports.updatePassword = updatePassword;
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'vote.js': [
      function(require, module, exports) {
        'use strict';

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var voteBtns = document.querySelectorAll('.report__feel');

        var getReport = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(report) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return (0, _axios.default)({
                          method: 'GET',
                          url: 'http://127.0.0.1:3000/api/v1/reports/'.concat(
                            report
                          )
                        });

                      case 3:
                        res = _context.sent;

                        if (!(res.data.status === 'success')) {
                          _context.next = 6;
                          break;
                        }

                        return _context.abrupt('return', res.data);

                      case 6:
                        _context.next = 12;
                        break;

                      case 8:
                        _context.prev = 8;
                        _context.t0 = _context['catch'](0);
                        (0, _alert.showAlert)(
                          'failed',
                          'Something went wrong. Please reload the page'
                        );
                        return _context.abrupt('return', null);

                      case 12:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 8]]
              );
            })
          );

          return function getReport(_x) {
            return _ref.apply(this, arguments);
          };
        })();

        var vote = /*#__PURE__*/ (function() {
          var _ref2 = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee3(
              op,
              assocatiedBtnOp,
              associatedBtn,
              btn,
              report,
              value
            ) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee3$(_context3) {
                  while (1) {
                    switch ((_context3.prev = _context3.next)) {
                      case 0:
                        _context3.prev = 0;
                        (0, _loader.showLoader)();
                        _context3.next = 4;
                        return (0, _axios.default)({
                          method: 'POST',
                          url: 'http://127.0.0.1:3000/api/v1/votes',
                          data: {
                            report: report,
                            value: value
                          }
                        });

                      case 4:
                        res = _context3.sent;

                        if (res.data.status === 'success') {
                          window.setTimeout(
                            /*#__PURE__*/ _asyncToGenerator(
                              /*#__PURE__*/ regeneratorRuntime.mark(
                                function _callee2() {
                                  var updatedReport;
                                  return regeneratorRuntime.wrap(
                                    function _callee2$(_context2) {
                                      while (1) {
                                        switch (
                                          (_context2.prev = _context2.next)
                                        ) {
                                          case 0:
                                            _context2.next = 2;
                                            return getReport(report);

                                          case 2:
                                            updatedReport = _context2.sent;
                                            btn.classList.toggle(
                                              'report__feel-btn--active'
                                            );
                                            associatedBtn.classList.remove(
                                              'report__feel-btn--active'
                                            );
                                            associatedBtn.querySelector(
                                              '.report__count'
                                            ).innerText =
                                              updatedReport.data.data[
                                                assocatiedBtnOp
                                              ];
                                            btn.querySelector(
                                              '.report__count'
                                            ).innerText =
                                              updatedReport.data.data[op];
                                            console.log(updatedReport);
                                            (0, _loader.hideLoader)();

                                          case 9:
                                          case 'end':
                                            return _context2.stop();
                                        }
                                      }
                                    },
                                    _callee2
                                  );
                                }
                              )
                            ),
                            1000
                          );
                        }

                        _context3.next = 13;
                        break;

                      case 8:
                        _context3.prev = 8;
                        _context3.t0 = _context3['catch'](0);
                        (0, _loader.hideLoader)();
                        console.log(_context3.t0);
                        (0, _alert.showAlert)(
                          'failed',
                          _context3.t0.response.data.message
                        );

                      case 13:
                      case 'end':
                        return _context3.stop();
                    }
                  }
                },
                _callee3,
                null,
                [[0, 8]]
              );
            })
          );

          return function vote(_x2, _x3, _x4, _x5, _x6, _x7) {
            return _ref2.apply(this, arguments);
          };
        })();

        voteBtns.forEach(function(g) {
          var likeBtn = g.querySelector('.report__feel-btn--like');
          var dislikeBtn = g.querySelector('.report__feel-btn--dislike');
          likeBtn.addEventListener('click', function(e) {
            var value;
            if (likeBtn.classList.contains('report__feel-btn--active'))
              value = 0;
            else value = 1;
            vote(
              'numLikes',
              'numDisLikes',
              dislikeBtn,
              likeBtn,
              likeBtn.dataset.report,
              value
            );
          });
          dislikeBtn.addEventListener('click', function(e) {
            var value;
            if (dislikeBtn.classList.contains('report__feel-btn--active'))
              value = 0;
            else value = -1;
            vote(
              'numDisLikes',
              'numLikes',
              likeBtn,
              dislikeBtn,
              dislikeBtn.dataset.report,
              value
            );
          });
        });
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'deleteTopic.js': [
      function(require, module, exports) {
        'use strict';

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var deleteBtns = document.querySelectorAll('.delete-topic__btn');

        var deleteTopic = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(topicId) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'DELETE',
                          url: 'http://127.0.0.1:3000/api/v1/topics/'.concat(
                            topicId
                          )
                        });

                      case 4:
                        res = _context.sent;

                        if (res.status === 204) {
                          (0, _alert.showAlert)(
                            'success',
                            'Topic successfully deleted'
                          );
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                        (0, _loader.hideLoader)();
                        _context.next = 13;
                        break;

                      case 9:
                        _context.prev = 9;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 13:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 9]]
              );
            })
          );

          return function deleteTopic(_x) {
            return _ref.apply(this, arguments);
          };
        })();

        deleteBtns.forEach(function(b) {
          b.addEventListener('click', function(e) {
            (0,
            _alert.showConfirm)('Are you sure you want to delete this topic?', function() {
              deleteTopic(b.dataset.topic);
            });
          });
        });
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'deleteReport.js': [
      function(require, module, exports) {
        'use strict';

        var _axios = _interopRequireDefault(require('axios'));

        var _alert = require('./alert');

        var _loader = require('./loader');

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new Promise(function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }

        var deleteBtns = document.querySelectorAll('.delete-report__btn');

        var deleteReport = /*#__PURE__*/ (function() {
          var _ref = _asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee(reportId) {
              var res;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        _context.prev = 0;
                        (0, _loader.showLoader)();
                        _context.next = 4;
                        return (0, _axios.default)({
                          method: 'DELETE',
                          url: 'http://127.0.0.1:3000/api/v1/reports/'.concat(
                            reportId
                          )
                        });

                      case 4:
                        res = _context.sent;

                        if (res.status === 204) {
                          (0, _alert.showAlert)(
                            'success',
                            'Report successfully deleted'
                          );
                          window.setTimeout(function() {
                            location.reload();
                          }, 1500);
                        }

                        (0, _loader.hideLoader)();
                        _context.next = 13;
                        break;

                      case 9:
                        _context.prev = 9;
                        _context.t0 = _context['catch'](0);
                        (0, _loader.hideLoader)();
                        (0, _alert.showAlert)(
                          'failed',
                          _context.t0.response.data.message
                        );

                      case 13:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                null,
                [[0, 9]]
              );
            })
          );

          return function deleteReport(_x) {
            return _ref.apply(this, arguments);
          };
        })();

        deleteBtns.forEach(function(b) {
          b.addEventListener('click', function(e) {
            (0,
            _alert.showConfirm)('Are you sure you want to delete this report?', function() {
              deleteReport(b.dataset.report);
            });
          });
        });
      },
      {
        axios: '../../node_modules/axios/index.js',
        './alert': 'alert.js',
        './loader': 'loader.js'
      }
    ],
    'index.js': [
      function(require, module, exports) {
        'use strict';

        require('core-js/modules/es6.array.copy-within');

        require('core-js/modules/es6.array.fill');

        require('core-js/modules/es6.array.find');

        require('core-js/modules/es6.array.find-index');

        require('core-js/modules/es7.array.flat-map');

        require('core-js/modules/es6.array.from');

        require('core-js/modules/es7.array.includes');

        require('core-js/modules/es6.array.iterator');

        require('core-js/modules/es6.array.of');

        require('core-js/modules/es6.array.sort');

        require('core-js/modules/es6.array.species');

        require('core-js/modules/es6.date.to-primitive');

        require('core-js/modules/es6.function.has-instance');

        require('core-js/modules/es6.function.name');

        require('core-js/modules/es6.map');

        require('core-js/modules/es6.math.acosh');

        require('core-js/modules/es6.math.asinh');

        require('core-js/modules/es6.math.atanh');

        require('core-js/modules/es6.math.cbrt');

        require('core-js/modules/es6.math.clz32');

        require('core-js/modules/es6.math.cosh');

        require('core-js/modules/es6.math.expm1');

        require('core-js/modules/es6.math.fround');

        require('core-js/modules/es6.math.hypot');

        require('core-js/modules/es6.math.imul');

        require('core-js/modules/es6.math.log1p');

        require('core-js/modules/es6.math.log10');

        require('core-js/modules/es6.math.log2');

        require('core-js/modules/es6.math.sign');

        require('core-js/modules/es6.math.sinh');

        require('core-js/modules/es6.math.tanh');

        require('core-js/modules/es6.math.trunc');

        require('core-js/modules/es6.number.constructor');

        require('core-js/modules/es6.number.epsilon');

        require('core-js/modules/es6.number.is-finite');

        require('core-js/modules/es6.number.is-integer');

        require('core-js/modules/es6.number.is-nan');

        require('core-js/modules/es6.number.is-safe-integer');

        require('core-js/modules/es6.number.max-safe-integer');

        require('core-js/modules/es6.number.min-safe-integer');

        require('core-js/modules/es6.number.parse-float');

        require('core-js/modules/es6.number.parse-int');

        require('core-js/modules/es6.object.assign');

        require('core-js/modules/es7.object.define-getter');

        require('core-js/modules/es7.object.define-setter');

        require('core-js/modules/es7.object.entries');

        require('core-js/modules/es6.object.freeze');

        require('core-js/modules/es6.object.get-own-property-descriptor');

        require('core-js/modules/es7.object.get-own-property-descriptors');

        require('core-js/modules/es6.object.get-own-property-names');

        require('core-js/modules/es6.object.get-prototype-of');

        require('core-js/modules/es7.object.lookup-getter');

        require('core-js/modules/es7.object.lookup-setter');

        require('core-js/modules/es6.object.prevent-extensions');

        require('core-js/modules/es6.object.to-string');

        require('core-js/modules/es6.object.is');

        require('core-js/modules/es6.object.is-frozen');

        require('core-js/modules/es6.object.is-sealed');

        require('core-js/modules/es6.object.is-extensible');

        require('core-js/modules/es6.object.keys');

        require('core-js/modules/es6.object.seal');

        require('core-js/modules/es7.object.values');

        require('core-js/modules/es6.promise');

        require('core-js/modules/es7.promise.finally');

        require('core-js/modules/es6.reflect.apply');

        require('core-js/modules/es6.reflect.construct');

        require('core-js/modules/es6.reflect.define-property');

        require('core-js/modules/es6.reflect.delete-property');

        require('core-js/modules/es6.reflect.get');

        require('core-js/modules/es6.reflect.get-own-property-descriptor');

        require('core-js/modules/es6.reflect.get-prototype-of');

        require('core-js/modules/es6.reflect.has');

        require('core-js/modules/es6.reflect.is-extensible');

        require('core-js/modules/es6.reflect.own-keys');

        require('core-js/modules/es6.reflect.prevent-extensions');

        require('core-js/modules/es6.reflect.set');

        require('core-js/modules/es6.reflect.set-prototype-of');

        require('core-js/modules/es6.regexp.constructor');

        require('core-js/modules/es6.regexp.flags');

        require('core-js/modules/es6.regexp.match');

        require('core-js/modules/es6.regexp.replace');

        require('core-js/modules/es6.regexp.split');

        require('core-js/modules/es6.regexp.search');

        require('core-js/modules/es6.regexp.to-string');

        require('core-js/modules/es6.set');

        require('core-js/modules/es6.symbol');

        require('core-js/modules/es7.symbol.async-iterator');

        require('core-js/modules/es6.string.anchor');

        require('core-js/modules/es6.string.big');

        require('core-js/modules/es6.string.blink');

        require('core-js/modules/es6.string.bold');

        require('core-js/modules/es6.string.code-point-at');

        require('core-js/modules/es6.string.ends-with');

        require('core-js/modules/es6.string.fixed');

        require('core-js/modules/es6.string.fontcolor');

        require('core-js/modules/es6.string.fontsize');

        require('core-js/modules/es6.string.from-code-point');

        require('core-js/modules/es6.string.includes');

        require('core-js/modules/es6.string.italics');

        require('core-js/modules/es6.string.iterator');

        require('core-js/modules/es6.string.link');

        require('core-js/modules/es7.string.pad-start');

        require('core-js/modules/es7.string.pad-end');

        require('core-js/modules/es6.string.raw');

        require('core-js/modules/es6.string.repeat');

        require('core-js/modules/es6.string.small');

        require('core-js/modules/es6.string.starts-with');

        require('core-js/modules/es6.string.strike');

        require('core-js/modules/es6.string.sub');

        require('core-js/modules/es6.string.sup');

        require('core-js/modules/es7.string.trim-left');

        require('core-js/modules/es7.string.trim-right');

        require('core-js/modules/es6.typed.array-buffer');

        require('core-js/modules/es6.typed.int8-array');

        require('core-js/modules/es6.typed.uint8-array');

        require('core-js/modules/es6.typed.uint8-clamped-array');

        require('core-js/modules/es6.typed.int16-array');

        require('core-js/modules/es6.typed.uint16-array');

        require('core-js/modules/es6.typed.int32-array');

        require('core-js/modules/es6.typed.uint32-array');

        require('core-js/modules/es6.typed.float32-array');

        require('core-js/modules/es6.typed.float64-array');

        require('core-js/modules/es6.weak-map');

        require('core-js/modules/es6.weak-set');

        require('core-js/modules/web.timers');

        require('core-js/modules/web.immediate');

        require('core-js/modules/web.dom.iterable');

        require('regenerator-runtime/runtime');

        require('simplebar');

        var _login = require('./login');

        var _signup = require('./signup');

        var _mapbox = require('./mapbox');

        var _choice = require('./choice');

        var _quill = require('./quill');

        var _filter = require('./filter');

        var _createTopic = require('./createTopic');

        var _createReport = require('./createReport');

        var _loader = require('./loader');

        var _search = require('./search');

        var _echarts = require('./echarts');

        var _updateUser = require('./updateUser');

        var _updatePassword = require('./updatePassword');

        require('./vote');

        require('./deleteTopic');

        require('./deleteReport');

        // DOM elements
        var listViewToggle = document.querySelector('#view-switch--list');
        var mapViewToggle = document.querySelector('#view-switch--map');
        var listContainer = document.querySelector('.list-view-container');
        var mapContainer = document.querySelector('.map-container');
        var paginationDiv = document.querySelector('.pagination');
        var clusterListClose = document.querySelector(
          '.topic-map__cluster-list--close'
        );
        var clusterListContainer = document.querySelector(
          '.topic-map__cluster-list'
        );
        var clusterList = document.querySelector(
          '.topic-map__cluster-list--elements'
        );
        var createTopicButtons = document.querySelectorAll('.add-topic__btn');
        var createTopicFormContainer = document.querySelector(
          '.create-topic-form'
        );
        var createTopicClose = document.querySelector('.create-topic-close');
        var createTopicForm = document.querySelector('.form--create-topic');
        var searchTopicForm = document.querySelector('#searchTopicForm');
        var searchTopicPattern = document.querySelector('#searchTopicPattern');
        var newTopicTitle = document.querySelector('#title');
        var newTopicCategory = document.querySelector(
          '#select-category-create-topic-form'
        );
        var newTopicTags = document.querySelector(
          '#select-tags-create-topic-form'
        );
        var newTopicMediaUrls = document.querySelector(
          '#select-mediaUrls-create-topic-form'
        );
        var createReportButtons = document.querySelectorAll('.add-report__btn');
        var createReportFormContainer = document.querySelector(
          '.create-report-form'
        );
        var createReportClose = document.querySelector('.create-report-close');
        var createReportForm = document.querySelector('.form--create-report');
        var newReportContent = document.querySelector('#report-content');
        var newReportMediaUrls = document.querySelector(
          '#select-mediaUrls-create-report-form'
        );
        var selectGroupsNormal = document.querySelectorAll(
          '.select-group--normal'
        );
        var selectGroupsRespond = document.querySelectorAll(
          '.select-group--respond'
        );
        var menuSidebarToggle = document.querySelector('.menu__checkbox');
        var menuSidebarLinks = document.querySelectorAll('.menu__link');
        var loginForm = document.querySelector('.form--signin');
        var signUpForm = document.querySelector('.form--signup');
        var logoutBtn = document.querySelectorAll('.sign-out');
        var email = document.getElementById('email');
        var username = document.getElementById('username');
        var password = document.getElementById('password');
        var passwordConfirm = document.getElementById('passwordConfirm');
        var mapDivEl = document.querySelector('#mapbox');
        var filterTopicsBtn = document.querySelector('#filter-topics');
        var filterTopicsBtnRespond = document.querySelector(
          '#filter-topics--respond'
        );
        var sentimentChartContainers = document.querySelectorAll(
          '.sentiment-pie'
        );
        var reportChartContainers = document.querySelectorAll('.report-freq');
        var userSettingsToggle = document.querySelector(
          '.user-view__menu--item--1'
        );
        var userTopicsToggle = document.querySelector(
          '.user-view__menu--item--2'
        );
        var userReportsToggle = document.querySelector(
          '.user-view__menu--item--3'
        );
        var userSettings = document.querySelector('.user-view__info--settings');
        var userTopics = document.querySelector('.user-view__info--topics');
        var userReports = document.querySelector('.user-view__info--reports');
        var userTopicsEls = document.querySelectorAll('.user-view__topic');
        var userReportEls = document.querySelectorAll('.user-view__report');
        var userInfoFormEl = document.querySelector(
          '.user-view__info--profile'
        );
        var userPasswordFormEl = document.querySelector(
          '.user-view__info--password-form'
        );
        var fileUploadInputs = document.querySelectorAll('.form__upload');

        var tabulate = function tabulate(tab, tabs) {
          tabs.forEach(function(t) {
            t.classList.add('hide');
          });
          tab.classList.remove('hide');
        };

        var setActiveTabs = function setActiveTabs(item, items) {
          items.forEach(function(t) {
            t.classList.remove('user-view__menu--item--active');
          });
          item.classList.add('user-view__menu--item--active');
        };

        if (userSettingsToggle) {
          console.log('adding the event listeners');
          userSettingsToggle.addEventListener('click', function(e) {
            tabulate(userSettings, [userSettings, userTopics, userReports]);
            setActiveTabs(userSettingsToggle, [
              userSettingsToggle,
              userTopicsToggle,
              userReportsToggle
            ]);
          });
          userTopicsToggle.addEventListener('click', function(e) {
            tabulate(userTopics, [userSettings, userTopics, userReports]);
            setActiveTabs(userTopicsToggle, [
              userSettingsToggle,
              userTopicsToggle,
              userReportsToggle
            ]);
          });
          userReportsToggle.addEventListener('click', function(e) {
            tabulate(userReports, [userSettings, userTopics, userReports]);
            setActiveTabs(userReportsToggle, [
              userSettingsToggle,
              userTopicsToggle,
              userReportsToggle
            ]);
          });
        }

        var configureSelectGroups = function configureSelectGroups(
          selectGroup
        ) {
          selectGroup.forEach(function(g) {
            var selected = g.querySelector('.selected');
            var optionListContainer = g.querySelector('.option-container');
            var optionList = optionListContainer.querySelectorAll('input');
            var selectedOptions = new Set();
            selected.addEventListener('click', function() {
              // Close all other select list
              var selects = document.querySelectorAll('.option-container');
              selects.forEach(function(el) {
                el.classList.remove('option-container--active');
              });
              optionListContainer.classList.add('option-container--active');
            });
            optionList.forEach(function(o) {
              o.addEventListener('click', function() {
                if (!g.classList.contains('multi-select')) {
                  selectedOptions = new Set();
                }

                if (o.checked) {
                  selectedOptions.add(o.value);
                } else {
                  selectedOptions.delete(o.value);
                }

                g.dataset.selected = Array.from(selectedOptions).join('|');
                selected.innerHTML = '('
                  .concat(Array.from(selectedOptions).length, ') ')
                  .concat(g.getAttribute('data-select'));
              });
            });
          });
        };

        var filterTopics = function filterTopics(btn, btnSelectGroups) {
          btn.addEventListener('click', function(e) {
            e.preventDefault();
            var filters = Array.from(btnSelectGroups)
              .filter(function(g) {
                return g.dataset.selected !== undefined;
              })
              .map(function(g) {
                return ''
                  .concat(g.dataset.select, '=')
                  .concat(encodeURIComponent(g.dataset.selected));
              })
              .join('&');
            (0, _loader.showLoader)();
            (0, _filter.filter)(filters.replace(/categories/g, 'category'));
          });
        };

        document.onclick = function(e) {
          if (
            !e.target.classList.contains('option-container') &&
            !e.target.classList.contains('option__label') &&
            !e.target.classList.contains('option__radio') &&
            !e.target.classList.contains('selected')
          ) {
            var options = document.querySelectorAll('.option-container');
            options.forEach(function(el) {
              el.classList.remove('option-container--active');
            });
          }
        };

        if (fileUploadInputs.length > 0) {
          fileUploadInputs.forEach(function(btn) {
            btn.addEventListener('change', function(e) {
              var fileName = e.target.value.split('\\').pop();
              if (fileName)
                document
                  .querySelector(
                    'label[for='.concat(btn.getAttribute('id'), ']')
                  )
                  .querySelector('span').innerHTML = fileName;
              else
                document
                  .querySelector(
                    'label[for='.concat(btn.getAttribute('id'), ']')
                  )
                  .querySelector('span').innerHTML = 'Upload new image';
            });
          });
        }

        if (userInfoFormEl) {
          (0, _updateUser.updateUser)(userInfoFormEl);
        }

        if (userPasswordFormEl) {
          (0, _updatePassword.updatePassword)(userPasswordFormEl);
        }

        if (filterTopicsBtn) {
          configureSelectGroups(selectGroupsNormal);
          filterTopics(filterTopicsBtn, selectGroupsNormal);
        }

        if (filterTopicsBtnRespond) {
          configureSelectGroups(selectGroupsRespond);
          filterTopics(filterTopicsBtnRespond, selectGroupsRespond);
        }

        if (loginForm) {
          loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            (0, _login.login)(email.value, password.value);
          });
        }

        if (signUpForm) {
          signUpForm.addEventListener('submit', function(e) {
            e.preventDefault();
            (0,
            _signup.signup)(username.value, email.value, password.value, passwordConfirm.value);
          });
        }

        if (logoutBtn) {
          logoutBtn.forEach(function(btn) {
            btn.addEventListener('click', function(e) {
              (0, _login.logout)();
            });
          });
        }

        var map;

        if (mapDivEl) {
          map = L.map('mapbox', {
            maxBounds: L.latLngBounds([-90, -180], [90, 180]),
            minZoom: 2,
            maxZoom: 14
          }).setView([0, 0], 2);
          (0, _mapbox.displayMap)(map, JSON.parse(mapDivEl.dataset.mapdata));
        }

        if (clusterListClose) {
          clusterListClose.addEventListener('click', function() {
            clusterListContainer.classList.add('hide');
          });
        }

        if (searchTopicForm) {
          (0, _search.searchTopics)(searchTopicForm, searchTopicPattern);
        }

        var switchListView = function switchListView(
          mapView,
          listView,
          paginationDiv
        ) {
          mapView.classList.add('hide');
          listView.classList.remove('hide');
          paginationDiv.classList.remove('hide');
        };

        var switchMapView = function switchMapView(
          mapView,
          listView,
          paginationDiv
        ) {
          mapView.classList.remove('hide');
          listView.classList.add('hide');
          paginationDiv.classList.add('hide');
        };

        if (listViewToggle) {
          listViewToggle.addEventListener('click', function(e) {
            switchListView(mapContainer, listContainer, paginationDiv);
          });
          mapViewToggle.addEventListener('click', function(e) {
            switchMapView(mapContainer, listContainer, paginationDiv);
            map.invalidateSize();
          });
        }

        var processTopicForm = function processTopicForm() {
          var op =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 'create';
          var topics = arguments.length > 1 ? arguments[1] : undefined;

          if (createTopicButtons) {
            var menus = (0, _choice.createMultiSelectMenus)();
            var editor = (0, _quill.createEditors)();
            var createTopicMap = L.map('createTopicMap', {
              maxBounds: L.latLngBounds([-90, -180], [90, 180]),
              minZoom: 2,
              maxZoom: 14
            }).setView([0, 0], 2);
            (0, _mapbox.displayMap)(createTopicMap, []);
            var newTopicMarker = (0, _mapbox.initializeCreateTopicMap)(
              createTopicMap
            );
            var topicId = {
              value: '',
              topic: ''
            };

            if (op === 'update') {
              topics.forEach(function(el) {
                var updateBtn = el.querySelector('.add-topic__btn');
                updateBtn.addEventListener('click', function(e) {
                  createTopicFormContainer.style.transform =
                    'translateX(-50%) scaleX(1)';
                  createTopicFormContainer.style.opacity = '1';
                  var topic = JSON.parse(el.dataset.topic);
                  console.log(topic);
                  topicId.value = topic.id;
                  topicId.topic = topic;
                  editor.setText('');

                  try {
                    var descriptionDelta = JSON.parse(topic.description);
                    editor.setContents(descriptionDelta.deltaOps);
                  } catch (_unused) {
                    editor.setText(topic.description);
                  }

                  newTopicTitle.value = topic.title;
                  menus[0].setChoiceByValue(topic.category);
                  menus[0].unhighlightAll();
                  menus[1].removeActiveItems(0).setValue(topic.tags);
                  menus[2].removeActiveItems(0).setValue(topic.mediaUrls);
                  newTopicMarker.setLatLng(
                    new L.LatLng(
                      topic.location.coordinates[1],
                      topic.location.coordinates[0]
                    )
                  );
                });
              });
            } else {
              createTopicButtons.forEach(function(b) {
                b.addEventListener('click', function() {
                  createTopicFormContainer.style.transform =
                    'translateX(-50%) scaleX(1)';
                  createTopicFormContainer.style.opacity = '1';
                });
              });
            }

            (0, _createTopic.createTopic)(
              createTopicForm,
              newTopicTitle,
              newTopicCategory,
              newTopicTags,
              newTopicMediaUrls,
              newTopicMarker,
              editor,
              op,
              topicId,
              menus
            );
            createTopicClose.addEventListener('click', function() {
              createTopicFormContainer.style.transform =
                'translateX(-50%) scaleX(0)';
              createTopicFormContainer.style.opacity = '0';
            });
          }
        };

        if (userTopicsEls.length > 0) {
          processTopicForm('update', userTopicsEls);
        } else {
          processTopicForm('create');
        }

        var processReportForm = function processReportForm() {
          var op =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 'create';
          var reports = arguments.length > 1 ? arguments[1] : undefined;

          if (createReportButtons) {
            var menus = (0, _choice.createMultiSelectMenus)(true);
            var reportId = {
              value: '',
              report: ''
            };

            if (op === 'update') {
              reports.forEach(function(el) {
                var updateBtn = el.querySelector('.add-report__btn');
                updateBtn.addEventListener('click', function(e) {
                  createReportFormContainer.style.transform =
                    'translateX(-50%) scaleX(1)';
                  createReportFormContainer.style.opacity = '1';
                  var report = JSON.parse(el.dataset.report);
                  reportId.value = report.id;
                  reportId.report = report;
                  newReportContent.value = report.content;
                  menus.removeActiveItems(0).setValue(report.mediaUrls);
                });
              });
            } else {
              createReportButtons.forEach(function(b) {
                b.addEventListener('click', function() {
                  createReportFormContainer.style.transform =
                    'translateX(-50%) scaleX(1)';
                  createReportFormContainer.style.opacity = '1';
                });
              });
            }

            (0, _createReport.createReport)(
              createReportForm,
              newReportContent,
              newReportMediaUrls,
              op,
              reportId,
              menus
            );
            createReportClose.addEventListener('click', function() {
              createReportFormContainer.style.transform =
                'translateX(-50%) scaleX(0)';
              createReportFormContainer.style.opacity = '0';
            });
          }
        };

        if (userReportEls.length > 0) {
          processReportForm('update', userReportEls);
        } else {
          processReportForm('create', []);
        }

        if (menuSidebarLinks) {
          menuSidebarLinks.forEach(function(m) {
            m.addEventListener('click', function() {
              menuSidebarToggle.checked = false;
            });
          });
        }

        if (reportChartContainers || sentimentChartContainers) {
          (0, _echarts.reportCharts)(
            sentimentChartContainers,
            reportChartContainers
          );
        }
      },
      {
        'core-js/modules/es6.array.copy-within':
          '../../node_modules/core-js/modules/es6.array.copy-within.js',
        'core-js/modules/es6.array.fill':
          '../../node_modules/core-js/modules/es6.array.fill.js',
        'core-js/modules/es6.array.find':
          '../../node_modules/core-js/modules/es6.array.find.js',
        'core-js/modules/es6.array.find-index':
          '../../node_modules/core-js/modules/es6.array.find-index.js',
        'core-js/modules/es7.array.flat-map':
          '../../node_modules/core-js/modules/es7.array.flat-map.js',
        'core-js/modules/es6.array.from':
          '../../node_modules/core-js/modules/es6.array.from.js',
        'core-js/modules/es7.array.includes':
          '../../node_modules/core-js/modules/es7.array.includes.js',
        'core-js/modules/es6.array.iterator':
          '../../node_modules/core-js/modules/es6.array.iterator.js',
        'core-js/modules/es6.array.of':
          '../../node_modules/core-js/modules/es6.array.of.js',
        'core-js/modules/es6.array.sort':
          '../../node_modules/core-js/modules/es6.array.sort.js',
        'core-js/modules/es6.array.species':
          '../../node_modules/core-js/modules/es6.array.species.js',
        'core-js/modules/es6.date.to-primitive':
          '../../node_modules/core-js/modules/es6.date.to-primitive.js',
        'core-js/modules/es6.function.has-instance':
          '../../node_modules/core-js/modules/es6.function.has-instance.js',
        'core-js/modules/es6.function.name':
          '../../node_modules/core-js/modules/es6.function.name.js',
        'core-js/modules/es6.map':
          '../../node_modules/core-js/modules/es6.map.js',
        'core-js/modules/es6.math.acosh':
          '../../node_modules/core-js/modules/es6.math.acosh.js',
        'core-js/modules/es6.math.asinh':
          '../../node_modules/core-js/modules/es6.math.asinh.js',
        'core-js/modules/es6.math.atanh':
          '../../node_modules/core-js/modules/es6.math.atanh.js',
        'core-js/modules/es6.math.cbrt':
          '../../node_modules/core-js/modules/es6.math.cbrt.js',
        'core-js/modules/es6.math.clz32':
          '../../node_modules/core-js/modules/es6.math.clz32.js',
        'core-js/modules/es6.math.cosh':
          '../../node_modules/core-js/modules/es6.math.cosh.js',
        'core-js/modules/es6.math.expm1':
          '../../node_modules/core-js/modules/es6.math.expm1.js',
        'core-js/modules/es6.math.fround':
          '../../node_modules/core-js/modules/es6.math.fround.js',
        'core-js/modules/es6.math.hypot':
          '../../node_modules/core-js/modules/es6.math.hypot.js',
        'core-js/modules/es6.math.imul':
          '../../node_modules/core-js/modules/es6.math.imul.js',
        'core-js/modules/es6.math.log1p':
          '../../node_modules/core-js/modules/es6.math.log1p.js',
        'core-js/modules/es6.math.log10':
          '../../node_modules/core-js/modules/es6.math.log10.js',
        'core-js/modules/es6.math.log2':
          '../../node_modules/core-js/modules/es6.math.log2.js',
        'core-js/modules/es6.math.sign':
          '../../node_modules/core-js/modules/es6.math.sign.js',
        'core-js/modules/es6.math.sinh':
          '../../node_modules/core-js/modules/es6.math.sinh.js',
        'core-js/modules/es6.math.tanh':
          '../../node_modules/core-js/modules/es6.math.tanh.js',
        'core-js/modules/es6.math.trunc':
          '../../node_modules/core-js/modules/es6.math.trunc.js',
        'core-js/modules/es6.number.constructor':
          '../../node_modules/core-js/modules/es6.number.constructor.js',
        'core-js/modules/es6.number.epsilon':
          '../../node_modules/core-js/modules/es6.number.epsilon.js',
        'core-js/modules/es6.number.is-finite':
          '../../node_modules/core-js/modules/es6.number.is-finite.js',
        'core-js/modules/es6.number.is-integer':
          '../../node_modules/core-js/modules/es6.number.is-integer.js',
        'core-js/modules/es6.number.is-nan':
          '../../node_modules/core-js/modules/es6.number.is-nan.js',
        'core-js/modules/es6.number.is-safe-integer':
          '../../node_modules/core-js/modules/es6.number.is-safe-integer.js',
        'core-js/modules/es6.number.max-safe-integer':
          '../../node_modules/core-js/modules/es6.number.max-safe-integer.js',
        'core-js/modules/es6.number.min-safe-integer':
          '../../node_modules/core-js/modules/es6.number.min-safe-integer.js',
        'core-js/modules/es6.number.parse-float':
          '../../node_modules/core-js/modules/es6.number.parse-float.js',
        'core-js/modules/es6.number.parse-int':
          '../../node_modules/core-js/modules/es6.number.parse-int.js',
        'core-js/modules/es6.object.assign':
          '../../node_modules/core-js/modules/es6.object.assign.js',
        'core-js/modules/es7.object.define-getter':
          '../../node_modules/core-js/modules/es7.object.define-getter.js',
        'core-js/modules/es7.object.define-setter':
          '../../node_modules/core-js/modules/es7.object.define-setter.js',
        'core-js/modules/es7.object.entries':
          '../../node_modules/core-js/modules/es7.object.entries.js',
        'core-js/modules/es6.object.freeze':
          '../../node_modules/core-js/modules/es6.object.freeze.js',
        'core-js/modules/es6.object.get-own-property-descriptor':
          '../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js',
        'core-js/modules/es7.object.get-own-property-descriptors':
          '../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js',
        'core-js/modules/es6.object.get-own-property-names':
          '../../node_modules/core-js/modules/es6.object.get-own-property-names.js',
        'core-js/modules/es6.object.get-prototype-of':
          '../../node_modules/core-js/modules/es6.object.get-prototype-of.js',
        'core-js/modules/es7.object.lookup-getter':
          '../../node_modules/core-js/modules/es7.object.lookup-getter.js',
        'core-js/modules/es7.object.lookup-setter':
          '../../node_modules/core-js/modules/es7.object.lookup-setter.js',
        'core-js/modules/es6.object.prevent-extensions':
          '../../node_modules/core-js/modules/es6.object.prevent-extensions.js',
        'core-js/modules/es6.object.to-string':
          '../../node_modules/core-js/modules/es6.object.to-string.js',
        'core-js/modules/es6.object.is':
          '../../node_modules/core-js/modules/es6.object.is.js',
        'core-js/modules/es6.object.is-frozen':
          '../../node_modules/core-js/modules/es6.object.is-frozen.js',
        'core-js/modules/es6.object.is-sealed':
          '../../node_modules/core-js/modules/es6.object.is-sealed.js',
        'core-js/modules/es6.object.is-extensible':
          '../../node_modules/core-js/modules/es6.object.is-extensible.js',
        'core-js/modules/es6.object.keys':
          '../../node_modules/core-js/modules/es6.object.keys.js',
        'core-js/modules/es6.object.seal':
          '../../node_modules/core-js/modules/es6.object.seal.js',
        'core-js/modules/es7.object.values':
          '../../node_modules/core-js/modules/es7.object.values.js',
        'core-js/modules/es6.promise':
          '../../node_modules/core-js/modules/es6.promise.js',
        'core-js/modules/es7.promise.finally':
          '../../node_modules/core-js/modules/es7.promise.finally.js',
        'core-js/modules/es6.reflect.apply':
          '../../node_modules/core-js/modules/es6.reflect.apply.js',
        'core-js/modules/es6.reflect.construct':
          '../../node_modules/core-js/modules/es6.reflect.construct.js',
        'core-js/modules/es6.reflect.define-property':
          '../../node_modules/core-js/modules/es6.reflect.define-property.js',
        'core-js/modules/es6.reflect.delete-property':
          '../../node_modules/core-js/modules/es6.reflect.delete-property.js',
        'core-js/modules/es6.reflect.get':
          '../../node_modules/core-js/modules/es6.reflect.get.js',
        'core-js/modules/es6.reflect.get-own-property-descriptor':
          '../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js',
        'core-js/modules/es6.reflect.get-prototype-of':
          '../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js',
        'core-js/modules/es6.reflect.has':
          '../../node_modules/core-js/modules/es6.reflect.has.js',
        'core-js/modules/es6.reflect.is-extensible':
          '../../node_modules/core-js/modules/es6.reflect.is-extensible.js',
        'core-js/modules/es6.reflect.own-keys':
          '../../node_modules/core-js/modules/es6.reflect.own-keys.js',
        'core-js/modules/es6.reflect.prevent-extensions':
          '../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js',
        'core-js/modules/es6.reflect.set':
          '../../node_modules/core-js/modules/es6.reflect.set.js',
        'core-js/modules/es6.reflect.set-prototype-of':
          '../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js',
        'core-js/modules/es6.regexp.constructor':
          '../../node_modules/core-js/modules/es6.regexp.constructor.js',
        'core-js/modules/es6.regexp.flags':
          '../../node_modules/core-js/modules/es6.regexp.flags.js',
        'core-js/modules/es6.regexp.match':
          '../../node_modules/core-js/modules/es6.regexp.match.js',
        'core-js/modules/es6.regexp.replace':
          '../../node_modules/core-js/modules/es6.regexp.replace.js',
        'core-js/modules/es6.regexp.split':
          '../../node_modules/core-js/modules/es6.regexp.split.js',
        'core-js/modules/es6.regexp.search':
          '../../node_modules/core-js/modules/es6.regexp.search.js',
        'core-js/modules/es6.regexp.to-string':
          '../../node_modules/core-js/modules/es6.regexp.to-string.js',
        'core-js/modules/es6.set':
          '../../node_modules/core-js/modules/es6.set.js',
        'core-js/modules/es6.symbol':
          '../../node_modules/core-js/modules/es6.symbol.js',
        'core-js/modules/es7.symbol.async-iterator':
          '../../node_modules/core-js/modules/es7.symbol.async-iterator.js',
        'core-js/modules/es6.string.anchor':
          '../../node_modules/core-js/modules/es6.string.anchor.js',
        'core-js/modules/es6.string.big':
          '../../node_modules/core-js/modules/es6.string.big.js',
        'core-js/modules/es6.string.blink':
          '../../node_modules/core-js/modules/es6.string.blink.js',
        'core-js/modules/es6.string.bold':
          '../../node_modules/core-js/modules/es6.string.bold.js',
        'core-js/modules/es6.string.code-point-at':
          '../../node_modules/core-js/modules/es6.string.code-point-at.js',
        'core-js/modules/es6.string.ends-with':
          '../../node_modules/core-js/modules/es6.string.ends-with.js',
        'core-js/modules/es6.string.fixed':
          '../../node_modules/core-js/modules/es6.string.fixed.js',
        'core-js/modules/es6.string.fontcolor':
          '../../node_modules/core-js/modules/es6.string.fontcolor.js',
        'core-js/modules/es6.string.fontsize':
          '../../node_modules/core-js/modules/es6.string.fontsize.js',
        'core-js/modules/es6.string.from-code-point':
          '../../node_modules/core-js/modules/es6.string.from-code-point.js',
        'core-js/modules/es6.string.includes':
          '../../node_modules/core-js/modules/es6.string.includes.js',
        'core-js/modules/es6.string.italics':
          '../../node_modules/core-js/modules/es6.string.italics.js',
        'core-js/modules/es6.string.iterator':
          '../../node_modules/core-js/modules/es6.string.iterator.js',
        'core-js/modules/es6.string.link':
          '../../node_modules/core-js/modules/es6.string.link.js',
        'core-js/modules/es7.string.pad-start':
          '../../node_modules/core-js/modules/es7.string.pad-start.js',
        'core-js/modules/es7.string.pad-end':
          '../../node_modules/core-js/modules/es7.string.pad-end.js',
        'core-js/modules/es6.string.raw':
          '../../node_modules/core-js/modules/es6.string.raw.js',
        'core-js/modules/es6.string.repeat':
          '../../node_modules/core-js/modules/es6.string.repeat.js',
        'core-js/modules/es6.string.small':
          '../../node_modules/core-js/modules/es6.string.small.js',
        'core-js/modules/es6.string.starts-with':
          '../../node_modules/core-js/modules/es6.string.starts-with.js',
        'core-js/modules/es6.string.strike':
          '../../node_modules/core-js/modules/es6.string.strike.js',
        'core-js/modules/es6.string.sub':
          '../../node_modules/core-js/modules/es6.string.sub.js',
        'core-js/modules/es6.string.sup':
          '../../node_modules/core-js/modules/es6.string.sup.js',
        'core-js/modules/es7.string.trim-left':
          '../../node_modules/core-js/modules/es7.string.trim-left.js',
        'core-js/modules/es7.string.trim-right':
          '../../node_modules/core-js/modules/es7.string.trim-right.js',
        'core-js/modules/es6.typed.array-buffer':
          '../../node_modules/core-js/modules/es6.typed.array-buffer.js',
        'core-js/modules/es6.typed.int8-array':
          '../../node_modules/core-js/modules/es6.typed.int8-array.js',
        'core-js/modules/es6.typed.uint8-array':
          '../../node_modules/core-js/modules/es6.typed.uint8-array.js',
        'core-js/modules/es6.typed.uint8-clamped-array':
          '../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js',
        'core-js/modules/es6.typed.int16-array':
          '../../node_modules/core-js/modules/es6.typed.int16-array.js',
        'core-js/modules/es6.typed.uint16-array':
          '../../node_modules/core-js/modules/es6.typed.uint16-array.js',
        'core-js/modules/es6.typed.int32-array':
          '../../node_modules/core-js/modules/es6.typed.int32-array.js',
        'core-js/modules/es6.typed.uint32-array':
          '../../node_modules/core-js/modules/es6.typed.uint32-array.js',
        'core-js/modules/es6.typed.float32-array':
          '../../node_modules/core-js/modules/es6.typed.float32-array.js',
        'core-js/modules/es6.typed.float64-array':
          '../../node_modules/core-js/modules/es6.typed.float64-array.js',
        'core-js/modules/es6.weak-map':
          '../../node_modules/core-js/modules/es6.weak-map.js',
        'core-js/modules/es6.weak-set':
          '../../node_modules/core-js/modules/es6.weak-set.js',
        'core-js/modules/web.timers':
          '../../node_modules/core-js/modules/web.timers.js',
        'core-js/modules/web.immediate':
          '../../node_modules/core-js/modules/web.immediate.js',
        'core-js/modules/web.dom.iterable':
          '../../node_modules/core-js/modules/web.dom.iterable.js',
        'regenerator-runtime/runtime':
          '../../node_modules/regenerator-runtime/runtime.js',
        simplebar: '../../node_modules/simplebar/dist/simplebar.esm.js',
        './login': 'login.js',
        './signup': 'signup.js',
        './mapbox': 'mapbox.js',
        './choice': 'choice.js',
        './quill': 'quill.js',
        './filter': 'filter.js',
        './createTopic': 'createTopic.js',
        './createReport': 'createReport.js',
        './loader': 'loader.js',
        './search': 'search.js',
        './echarts': 'echarts.js',
        './updateUser': 'updateUser.js',
        './updatePassword': 'updatePassword.js',
        './vote': 'vote.js',
        './deleteTopic': 'deleteTopic.js',
        './deleteReport': 'deleteReport.js'
      }
    ],
    '../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js': [
      function(require, module, exports) {
        var global = arguments[3];
        var OVERLAY_ID = '__parcel__error__overlay__';
        var OldModule = module.bundle.Module;

        function Module(moduleName) {
          OldModule.call(this, moduleName);
          this.hot = {
            data: module.bundle.hotData,
            _acceptCallbacks: [],
            _disposeCallbacks: [],
            accept: function(fn) {
              this._acceptCallbacks.push(fn || function() {});
            },
            dispose: function(fn) {
              this._disposeCallbacks.push(fn);
            }
          };
          module.bundle.hotData = null;
        }

        module.bundle.Module = Module;
        var checkedAssets, assetsToAccept;
        var parent = module.bundle.parent;

        if (
          (!parent || !parent.isParcelRequire) &&
          typeof WebSocket !== 'undefined'
        ) {
          var hostname = '' || location.hostname;
          var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
          var ws = new WebSocket(
            protocol + '://' + hostname + ':' + '50028' + '/'
          );

          ws.onmessage = function(event) {
            checkedAssets = {};
            assetsToAccept = [];
            var data = JSON.parse(event.data);

            if (data.type === 'update') {
              var handled = false;
              data.assets.forEach(function(asset) {
                if (!asset.isNew) {
                  var didAccept = hmrAcceptCheck(
                    global.parcelRequire,
                    asset.id
                  );

                  if (didAccept) {
                    handled = true;
                  }
                }
              }); // Enable HMR for CSS by default.

              handled =
                handled ||
                data.assets.every(function(asset) {
                  return asset.type === 'css' && asset.generated.js;
                });

              if (handled) {
                console.clear();
                data.assets.forEach(function(asset) {
                  hmrApply(global.parcelRequire, asset);
                });
                assetsToAccept.forEach(function(v) {
                  hmrAcceptRun(v[0], v[1]);
                });
              } else if (location.reload) {
                // `location` global exists in a web worker context but lacks `.reload()` function.
                location.reload();
              }
            }

            if (data.type === 'reload') {
              ws.close();

              ws.onclose = function() {
                location.reload();
              };
            }

            if (data.type === 'error-resolved') {
              console.log('[parcel] ✨ Error resolved');
              removeErrorOverlay();
            }

            if (data.type === 'error') {
              console.error(
                '[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack
              );
              removeErrorOverlay();
              var overlay = createErrorOverlay(data);
              document.body.appendChild(overlay);
            }
          };
        }

        function removeErrorOverlay() {
          var overlay = document.getElementById(OVERLAY_ID);

          if (overlay) {
            overlay.remove();
          }
        }

        function createErrorOverlay(data) {
          var overlay = document.createElement('div');
          overlay.id = OVERLAY_ID; // html encode message and stack trace

          var message = document.createElement('div');
          var stackTrace = document.createElement('pre');
          message.innerText = data.error.message;
          stackTrace.innerText = data.error.stack;
          overlay.innerHTML =
            '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' +
            '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' +
            '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' +
            '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' +
            message.innerHTML +
            '</div>' +
            '<pre>' +
            stackTrace.innerHTML +
            '</pre>' +
            '</div>';
          return overlay;
        }

        function getParents(bundle, id) {
          var modules = bundle.modules;

          if (!modules) {
            return [];
          }

          var parents = [];
          var k, d, dep;

          for (k in modules) {
            for (d in modules[k][1]) {
              dep = modules[k][1][d];

              if (
                dep === id ||
                (Array.isArray(dep) && dep[dep.length - 1] === id)
              ) {
                parents.push(k);
              }
            }
          }

          if (bundle.parent) {
            parents = parents.concat(getParents(bundle.parent, id));
          }

          return parents;
        }

        function hmrApply(bundle, asset) {
          var modules = bundle.modules;

          if (!modules) {
            return;
          }

          if (modules[asset.id] || !bundle.parent) {
            var fn = new Function(
              'require',
              'module',
              'exports',
              asset.generated.js
            );
            asset.isNew = !modules[asset.id];
            modules[asset.id] = [fn, asset.deps];
          } else if (bundle.parent) {
            hmrApply(bundle.parent, asset);
          }
        }

        function hmrAcceptCheck(bundle, id) {
          var modules = bundle.modules;

          if (!modules) {
            return;
          }

          if (!modules[id] && bundle.parent) {
            return hmrAcceptCheck(bundle.parent, id);
          }

          if (checkedAssets[id]) {
            return;
          }

          checkedAssets[id] = true;
          var cached = bundle.cache[id];
          assetsToAccept.push([bundle, id]);

          if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
            return true;
          }

          return getParents(global.parcelRequire, id).some(function(id) {
            return hmrAcceptCheck(global.parcelRequire, id);
          });
        }

        function hmrAcceptRun(bundle, id) {
          var cached = bundle.cache[id];
          bundle.hotData = {};

          if (cached) {
            cached.hot.data = bundle.hotData;
          }

          if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
            cached.hot._disposeCallbacks.forEach(function(cb) {
              cb(bundle.hotData);
            });
          }

          delete bundle.cache[id];
          bundle(id);
          cached = bundle.cache[id];

          if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
            cached.hot._acceptCallbacks.forEach(function(cb) {
              cb();
            });

            return true;
          }
        }
      },
      {}
    ]
  },
  {},
  ['../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js', 'index.js'],
  null
);
//# sourceMappingURL=/bundle.js.map
